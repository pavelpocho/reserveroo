generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  username     String        @unique
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now()) @updatedAt
  passwordHash String
  reservations Reservation[]
}

model Reservation {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  note      String
  User      User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String?
  Place     Place?   @relation(fields: [placeId], references: [id])
  placeId   String?
}

model Place {
  id           String        @id @default(uuid())
  name         String        @unique
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now()) @updatedAt
  Company      Company?      @relation(fields: [companyId], references: [id], onDelete: Restrict)
  Reservations Reservation[]
  companyId    String?
}

model Company {
  id         String            @id @default(uuid())
  name       String            @unique
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @default(now()) @updatedAt
  identities CompanyIdentity[]
  places     Place[]
}

model CompanyIdentity {
  id           String   @id @default(uuid())
  email        String   @unique
  username     String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now()) @updatedAt
  passwordHash String
  Company      Company? @relation(fields: [companyId], references: [id], onDelete: Cascade)
  companyId    String?
}
