{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "C:\\React\\remix\\reserveroo\\app\\root.tsx", "../app/components/app-header.tsx", "../app/constants/styles.ts", "../app/contexts/langsContext.tsx", "../app/contexts/whereAreWeContext.tsx", "../app/contexts/usernameContext.tsx", "../app/assets/icons/gb.tsx", "../app/assets/icons/cz.tsx", "../app/components/Loader.tsx", "../app/utils/session.server.ts", "../app/db.server.ts", "../app/models/user.server.ts", "../app/utils/pwd_helper.server.ts", "C:\\React\\remix\\reserveroo\\app\\routes\\doneVerifyingEmail.tsx", "../app/components/inputs/ObjectInput.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\authenticate.tsx", "../app/components/auth/login.tsx", "../app/assets/icons/AnglesRight.tsx", "../app/components/inputs/TextInput.tsx", "../app/components/place/place-summary.tsx", "../app/assets/icons/AngleRight.tsx", "../app/assets/icons/Clock.tsx", "../app/assets/icons/Location.tsx", "../app/root.tsx", "../app/utils/forms.ts", "../app/components/place/facilities-indicator.tsx", "../app/components/place/place-image.tsx", "../app/components/place/tag-list.tsx", "../app/components/search/search-ui.tsx", "../app/assets/icons/CircleInfo.tsx", "../app/assets/icons/Search.tsx", "../app/components/inputs/MultiSelectorInput.tsx", "../app/assets/icons/CaretDown.tsx", "../app/components/inputs/SingleSelectorInput.tsx", "../app/components/search/search-bar.tsx", "../app/components/auth/register.tsx", "../app/components/profile/account-summary.tsx", "../app/components/icon-row.tsx", "../app/assets/icons/Baseball.tsx", "../app/assets/icons/BowlingBall.tsx", "../app/assets/icons/Dumbell.tsx", "../app/assets/icons/FireFlameCurved.tsx", "../app/assets/icons/Futbol.tsx", "../app/assets/icons/GolfBallTee.tsx", "../app/assets/icons/Heart.tsx", "../app/assets/icons/PersonSwimming.tsx", "../app/assets/icons/Spa.tsx", "../app/assets/icons/TableTennisPaddleBall.tsx", "../app/assets/icons/Volleyball.tsx", "../app/assets/icons/WeightHanging.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\authenticate\\register.tsx", "../app/utils/emails.server.ts", "../app/utils/signing.server.ts", "C:\\React\\remix\\reserveroo\\app\\routes\\authenticate\\login.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\verifyEmail.tsx", "../app/routes/authenticate.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\pwd\\forgot.tsx", "../app/routes/verifyEmail.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\pwd\\reset.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\$placeId.tsx", "../app/models/place.server.ts", "C:\\React\\remix\\reserveroo\\app\\routes\\$placeId\\reserve.tsx", "../app/components/inputs/DateInput.tsx", "../app/assets/icons/AngleLeft.tsx", "../app/assets/icons/Calendar.tsx", "../app/components/reservable-times.tsx", "../app/components/reserve-confirmation-dialog.tsx", "../app/models/reservation.server.ts", "../app/models/reservationGroup.server.ts", "C:\\React\\remix\\reserveroo\\app\\routes\\$placeId\\index.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\profile.tsx", "../app/components/profile/reservation-group-summary.tsx", "../app/components/confirmation-dialog.tsx", "../app/components/profile/reservation-summary.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\profile\\cancelReservation.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\profile\\index.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\profile\\edit.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\logout.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\places.tsx", "../app/models/location.server.ts", "../app/models/tag.server.ts", "../app/models/category.server.ts", "../app/components/recent-search.tsx", "../app/assets/icons/TableList.tsx", "../app/assets/icons/Tags.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\search.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\about.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\admin.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\admin\\reservableTypes\\$reservableTypeId.tsx", "../app/models/reservableType.server.ts", "C:\\React\\remix\\reserveroo\\app\\routes\\admin\\reservableTypes\\index.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\admin\\reservableTypes\\new.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\admin\\reservations.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\admin\\reservations\\$reservationId.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\admin\\reservations\\index.tsx", "../app/components/admin/reservation-group-summary.tsx", "../app/components/admin/reservation-summary.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\admin\\categories.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\admin\\categories\\$categoryId.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\admin\\categories\\index.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\admin\\categories\\new.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\admin\\companies.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\admin\\companies\\$companyId.tsx", "../app/models/company.server.ts", "C:\\React\\remix\\reserveroo\\app\\routes\\admin\\companies\\index.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\admin\\companies\\new.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\admin\\locations.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\admin\\locations\\$locationId.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\admin\\locations\\index.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\admin\\locations\\new.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\admin\\places.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\admin\\places\\$placeId.tsx", "../app/components/button.tsx", "../app/components/inputs/ArrayInput.tsx", "../app/components/inputs/ImageInput.tsx", "../app/components/inputs/NumberInput.tsx", "../app/components/inputs/TimeInput.tsx", "../app/models/openingTime.server.ts", "../app/models/reservable.server.ts", "../app/utils/s3.server.ts", "C:\\React\\remix\\reserveroo\\app\\routes\\admin\\places\\index.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\admin\\places\\new.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\admin\\tags.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\admin\\tags\\$tagId.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\admin\\tags\\index.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\admin\\tags\\new.tsx", "C:\\React\\remix\\reserveroo\\app\\routes\\index.tsx", "../app/components/parallax-layer-component.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\r\nimport { RemixServer } from \"@remix-run/react\";\r\nimport { renderToString } from \"react-dom/server\";\r\nimport { ServerStyleSheet } from 'styled-components';\r\n\r\nexport default function handleRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n\r\n  const sheet = new ServerStyleSheet();\r\n\r\n  let markup = renderToString(\r\n    sheet.collectStyles(\r\n      <RemixServer\r\n        context={remixContext}\r\n        url={request.url}\r\n      />\r\n    )\r\n  );\r\n  const styles = sheet.getStyleTags();\r\n  markup = markup.replace(\"__STYLES__\", styles);\r\n  \r\n  responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n  return new Response(\"<!DOCTYPE html>\" + markup, {\r\n    status: responseStatusCode,\r\n    headers: responseHeaders,\r\n  });\r\n}\r\n", "import type {\r\n  LinksFunction,\r\n  LoaderFunction,\r\n  MetaFunction,\r\n} from \"@remix-run/node\";\r\nimport { json } from \"@remix-run/node\";\r\nimport {\r\n  Link,\r\n  Links,\r\n  LiveReload,\r\n  Meta,\r\n  Outlet,\r\n  Scripts,\r\n  ScrollRestoration,\r\n  useLoaderData,\r\n  useLocation,\r\n  useTransition,\r\n} from \"@remix-run/react\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport AppHeader from \"./components/app-header\";\r\nimport { Loader } from \"./components/Loader\";\r\nimport { styles } from \"./constants/styles\";\r\nimport { langsContext } from \"./contexts/langsContext\";\r\nimport { signingInContext } from \"./contexts/whereAreWeContext\";\r\nimport { usernameContext } from \"./contexts/usernameContext\";\r\nimport { getUsernameAndAdmin } from \"./utils/session.server\";\r\nimport * as cs_texts from '~/assets/langs/cs.texts.json';\r\nimport * as en_texts from '~/assets/langs/en.texts.json';\r\nimport fonts from \"~/fonts/main.css\";\r\n\r\nexport const meta: MetaFunction = () => ({\r\n  charset: \"utf-8\",\r\n  title: \"Reserveroo\",\r\n  viewport: \"width=device-width,initial-scale=1\",\r\n});\r\n\r\nexport const UnstyledLink = styled(Link)`\r\n  color: ${styles.colors.white};\r\n  text-decoration: none;\r\n`;\r\n\r\nconst Body = styled.body<{ isLandingPage: boolean }>`\r\n  margin: 0px;\r\n  padding: 0px;\r\n  overflow-y: ${(props) => (props.isLandingPage ? \"hidden\" : \"scroll\")};\r\n  & > * {\r\n    font-family: Inter, Source Sans Pro, Roboto, sans-serif;\r\n  }\r\n`;\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const { username, admin, usernameToVerify } = await getUsernameAndAdmin(request);\r\n  const langs = request.headers.get('Accept-Language');\r\n  console.log(langs);\r\n  return json({ username, admin, usernameToVerify, langs: langs?.split(',')[0] ?? '' });\r\n}\r\n\r\ninterface AppHeaderLoaderData {\r\n  username: string | null;\r\n  usernameToVerify: string | null;\r\n  admin: boolean | null;\r\n  langs: string;\r\n}\r\n\r\nexport const WidthRestrictor = styled.div<{ width?: string }>`\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  @media (min-width: 550px) {\r\n    padding: 0 1rem;\r\n  }\r\n  box-sizing: border-box;\r\n  max-width: ${props => props.width ?? '968px'};\r\n`;\r\n\r\nconst Footer = styled.footer`\r\n  width: 100%;\r\n  padding: 2rem;\r\n  box-sizing: border-box;\r\n  margin: 5rem auto 0;\r\n  text-align: center;\r\n  background-color: ${styles.colors.primary_background};\r\n  &>p {\r\n    color: ${styles.colors.black};\r\n    margin: 0.6rem;\r\n    font-size: 0.8rem;\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\ninterface MainProps {\r\n  isLandingPage: boolean,\r\n  admin: boolean\r\n}\r\n\r\nconst Main: React.FC<MainProps> = ({ isLandingPage, admin }) => {\r\n\r\n  return <>\r\n    <div style={{ minHeight: 'calc(100vh - 11.2rem)' }}>\r\n      <AppHeader>Reserveroo</AppHeader>\r\n      <Outlet />\r\n    </div>\r\n    {!isLandingPage && <Footer>\r\n      {admin ? (\r\n        <Link to={\"/admin/reservations\"}>Admin</Link>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <p>\u00A9 Reserveroo, 2022</p>\r\n    </Footer>}\r\n  </>\r\n}\r\n\r\nexport function links() {\r\n  return [{ rel: \"stylesheet\", href: fonts }];\r\n}\r\n\r\nexport default function App() {\r\n\r\n  const loaderData = useLoaderData<AppHeaderLoaderData>();\r\n\r\n  const location = useLocation();\r\n  const [ username, setUsername ] = useState<string | null>(loaderData.username);\r\n  const [ translations, setTranslations ] = useState<typeof en_texts>(loaderData.langs.includes('cs') ? cs_texts : en_texts);\r\n  const [ lang, setLang ] = useState<'english' | 'czech'>(loaderData.langs.includes('cs') ? 'czech' : 'english');\r\n  const [ usernameToVerify, setUsernameToVerify ] = useState<string | null>(loaderData.usernameToVerify);\r\n  const [ admin, setAdmin ] = useState<boolean | null>(loaderData.admin);\r\n\r\n  const [ loading, setLoading ] = useState<boolean | null>(false);\r\n  const [ signingIn, setSigningIn ] = useState<boolean>(false);\r\n  const [ landingPage, setLandingPage ] = useState<boolean>(false);\r\n\r\n  React.useEffect(() => {\r\n    setUsername(loaderData.username);\r\n    setAdmin(loaderData.admin);\r\n  }, [loaderData]);\r\n\r\n  const t = useTransition();\r\n\r\n  React.useEffect(() => {\r\n    setLoading(t.state === 'loading' || t.state === 'submitting');\r\n  }, [t]);\r\n\r\n  return (\r\n    <html lang=\"en\" className=\"h-full\">\r\n      <head>\r\n        <Meta />\r\n        <link rel='stylesheet' href={fonts} />\r\n        {typeof document === \"undefined\" ? \"__STYLES__\" : null}\r\n      </head>\r\n      <Body className=\"h-full\" isLandingPage={landingPage}>\r\n        <signingInContext.Provider value={{ signingIn, setSigningIn, landingPage, setLandingPage }}>\r\n          <usernameContext.Provider value={{ username, setUsername, admin, setAdmin, usernameToVerify, setUsernameToVerify }}>\r\n            <langsContext.Provider value={{ translations, setTranslations, lang, setLang }}>\r\n              <Main isLandingPage={landingPage} admin={admin ?? false} />\r\n              <Loader show={loading ?? false}></Loader>\r\n            </langsContext.Provider>\r\n          </usernameContext.Provider>\r\n        </signingInContext.Provider>\r\n        <ScrollRestoration />\r\n        <Scripts />\r\n        <LiveReload />\r\n      </Body>\r\n    </html>\r\n  );\r\n}\r\n", "import { Form, Link, useLocation } from \"@remix-run/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { styles } from \"~/constants/styles\";\r\nimport { useLangs } from \"~/contexts/langsContext\";\r\nimport { useWhereAreWe } from \"~/contexts/whereAreWeContext\";\r\nimport { useUsername } from \"~/contexts/usernameContext\";\r\nimport * as cs_texts from \"~/assets/langs/cs.texts.json\";\r\nimport * as en_texts from \"~/assets/langs/en.texts.json\";\r\nimport { createCookie } from \"@remix-run/node\";\r\nimport GbIcon from \"~/assets/icons/gb\";\r\nimport CzIcon from \"~/assets/icons/cz\";\r\nimport { FaBars } from 'react-icons/fa';\r\n\r\nconst Wrap = styled.header`\r\n  background-color: ${styles.colors.primary};\r\n  transition: transform 0.2s cubic-bezier(0.33, 1, 0.68, 1), opacity 0.2s ease-out;\r\n  top: 0px;\r\n  position: sticky;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  gap: 2rem;\r\n  padding: 1.3rem 0.2rem 1.3rem 1rem;\r\n  z-index: 4;\r\n`;\r\n\r\nconst InnerWrap = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  margin: 0 auto;\r\n  justify-content: space-between;\r\n  align-items: stretch;\r\n  width: 100%;\r\n  height: 100%;\r\n  max-width: 938px;\r\n  @media (max-width: 800px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr 4rem;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h6`\r\n  color: ${styles.colors.primary};\r\n  padding: 0.5rem;\r\n  border-radius: 0.4rem;\r\n  font-size: 1.375rem;\r\n  font-weight: bold;\r\n  margin: 0px;\r\n  background-color: ${styles.colors.white};\r\n  transition: background-color 0.15s;\r\n  &:hover {\r\n    background-color: ${styles.colors.gray[20]};\r\n  }\r\n  &:active {\r\n    background-color: ${styles.colors.gray[40]};\r\n  }\r\n`;\r\n\r\nconst MenuItem = styled.p<{ border?: boolean }>`\r\n  margin: 0px;\r\n  font-size: 0.875rem;\r\n  color: ${styles.colors.white};\r\n  box-sizing: border-box;\r\n  border: ${(props) =>\r\n    props.border ? `1px solid ${styles.colors.white}` : \"\"};\r\n  background-color: transparent;\r\n  transition: background-color 0.15s;\r\n  padding: 0.5rem 0.8rem;\r\n  display: flex;\r\n  font-weight: 500;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 0.8rem;\r\n  border-radius: 0.4rem;\r\n  &:hover {\r\n    background-color: ${styles.colors.white}30;\r\n  }\r\n  &:active {\r\n    background-color: ${styles.colors.white}30;\r\n  }\r\n`;\r\n\r\nconst WrappedMenuItem = styled.p`\r\n  margin: 0px;\r\n  font-size: 0.875rem;\r\n  color: ${styles.colors.white};\r\n  box-sizing: border-box;\r\n  border-top: 2px solid transparent;\r\n  border-bottom: 2px solid transparent;\r\n`;\r\n\r\ninterface AppHeaderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst ProfileImage = styled.span`\r\n  height: 2rem;\r\n  width: 2rem;\r\n  font-size: 1rem;\r\n  color: ${styles.colors.primary};\r\n  border-radius: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: ${styles.colors.white};\r\n`;\r\n\r\nconst Side = styled.div`\r\n  display: flex;\r\n  align-items: stretch;\r\n`;\r\n\r\nconst BarLink = styled(Link)<{ hide?: boolean }>`\r\n  display: ${props => props.hide === true ? 'none' : 'flex'};\r\n  align-items: center;\r\n  gap: 1rem;\r\n  font-size: 0.875rem;\r\n  font-weight: 500;\r\n  color: ${styles.colors.white};\r\n  text-decoration: none;\r\n  padding: 0 0.4rem;\r\n`;\r\n\r\nconst StretchForm = styled.form`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: stretch;\r\n`;\r\n\r\nconst BarButton = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 0.875rem;\r\n  margin: 0px;\r\n  font-weight: 500;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n  padding: 0 1.5rem;\r\n  color: ${styles.colors.white};\r\n  border: none;\r\n`;\r\n\r\nconst HoverBarButton = styled(BarButton)`\r\n  border-radius: 0.4rem;\r\n  padding: 0.5rem 1.5rem;\r\n  &:hover {\r\n    background-color: ${styles.colors.gray[10]}20;\r\n  }\r\n`;\r\n\r\nconst Circle = styled.div`\r\n  border-radius: 100%;\r\n  height: 1.875rem;\r\n  width: 1.875rem;\r\n  overflow: hidden;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 2px solid ${styles.colors.action};\r\n  transition: transform 0.15s cubic-bezier(0.34, 1.56, 0.64, 1);\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nconst In = styled.div`\r\n  width: 2.5rem;\r\n  height: 2.5rem;\r\n  flex-shrink: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst MenuButton = styled(BarButton)`\r\n  @media (min-width: 800px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst RightSide = styled(Side)<{ showMenu: boolean }>`\r\n  @media (max-width: 800px) {\r\n    display: ${props => props.showMenu ? 'flex' : 'none'};\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 1rem;\r\n    margin-top: 1rem;\r\n    grid-row: 2;\r\n    grid-column: 1 / span 2;\r\n  };\r\n  \r\n`;\r\n\r\nconst BarLinkMoreThan400 = styled(BarLink)`\r\n  @media (max-width: 400px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst BarLinkLessThan400 = styled(BarLink)`\r\n  @media (min-width: 400px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Separator = styled.div`\r\n  @media (min-width: 800px) {\r\n    display: none;\r\n  }\r\n  background-color: ${styles.colors.white}40;\r\n  width: 80%;\r\n  height: 0.0625rem;\r\n`;\r\n\r\nconst Separator400 = styled(Separator)`\r\n  @media (min-width: 400px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Backdrop = styled.div<{ hidden?: boolean }>`\r\n  position: fixed;\r\n  z-index: 3;\r\n  display: ${props => props.hidden ? 'none' : ''};\r\n  background-color: ${styles.colors.black}60;\r\n  top: 0;\r\n  left: 0;\r\n  transform-origin: center;\r\n  transform: scale(150%);\r\n  width: 100vw;\r\n  height: 100vh;\r\n  align-items: center;\r\n`;\r\n\r\n\r\nexport default function AppHeader({ children }: AppHeaderProps) {\r\n  const location = useLocation();\r\n  const [ isLandingPage, setIsLandingPage ] = useState(false);\r\n  const [ showMenu, setShowMenu ] = useState(false);\r\n\r\n  const { username, admin, usernameToVerify } = useUsername();\r\n\r\n  const { setTranslations: setL, translations: l, lang, setLang } = useLangs();\r\n\r\n  const { signingIn } = useWhereAreWe();\r\n\r\n  useEffect(() => {\r\n    setIsLandingPage(location.pathname === \"/\");\r\n  }, [location]);\r\n\r\n  return (<>\r\n    <Backdrop hidden={!showMenu} />\r\n    <Wrap>\r\n      <InnerWrap>\r\n        <Side>\r\n          <BarLink onClick={(e) => {\r\n            console.log('x');\r\n            setShowMenu(false);\r\n          }} to='/places'>\r\n            <Title>{children}</Title>\r\n          </BarLink>\r\n          <BarLinkMoreThan400 onClick={(e) => {\r\n            console.log('x');\r\n            setShowMenu(false);\r\n          }} to={isLandingPage ? \"/places\" : \"/\"}>\r\n            <MenuItem>{isLandingPage ? \"Places\" : \"Who are we?\"}</MenuItem>\r\n          </BarLinkMoreThan400>\r\n        </Side>\r\n        <MenuButton onClick={(e) => {\r\n          console.log('x');\r\n          e.preventDefault();\r\n          setShowMenu(!showMenu);\r\n        }}>\r\n          <FaBars />\r\n        </MenuButton>\r\n        <RightSide showMenu={showMenu} >\r\n          <BarLinkLessThan400 onClick={(e) => {\r\n            console.log('x');\r\n            setShowMenu(false);\r\n          }} to={isLandingPage ? \"/places\" : \"/\"}>\r\n            <MenuItem>{isLandingPage ? \"Places\" : \"Who are we?\"}</MenuItem>\r\n          </BarLinkLessThan400>\r\n          <Separator400 />\r\n          <BarLink onClick={(e) => {\r\n            console.log('x');\r\n            setShowMenu(false);\r\n          }} style={{ marginRight: \"0.6rem\" }} to={\"/admin/reservations\"}>\r\n            <MenuItem border={true}>List a business</MenuItem>\r\n          </BarLink>\r\n          <Separator />\r\n          <BarButton\r\n            onClick={() => {\r\n              setL(lang == \"czech\" ? en_texts : cs_texts);\r\n              setLang(lang == \"czech\" ? \"english\" : \"czech\");\r\n            }}\r\n          >\r\n            {l.name == \"cs\" ? (\r\n              <Circle>\r\n                <In>\r\n                  <CzIcon height={\"2.5rem\"} />\r\n                </In>\r\n              </Circle>\r\n            ) : (\r\n              <Circle>\r\n                <In>\r\n                  <GbIcon height={\"2.5rem\"} />\r\n                </In>\r\n              </Circle>\r\n            )}\r\n          </BarButton>\r\n          <Separator />\r\n          <BarLink onClick={(e) => {\r\n            console.log('x');\r\n            setShowMenu(false);\r\n          }} hide={signingIn ?? false} to={\"/profile\"} style={{ fontWeight: \"bold\" }}>\r\n            <MenuItem>\r\n              {usernameToVerify ? \"Verify your email\" : username ?? \"Sign In\"}\r\n              <ProfileImage>{username ? username[0] : \"\"}</ProfileImage>\r\n            </MenuItem>\r\n          </BarLink>\r\n          {!signingIn && <Separator />}\r\n          <StretchForm action='/logout' method='post'>\r\n            <input type='text' name={'redirectUrl'} hidden={true} defaultValue={'/authenticate'} />\r\n            {(username || usernameToVerify) && <HoverBarButton onClick={(e) => {\r\n            console.log('x');\r\n            setShowMenu(false);\r\n          }}>Logout</HoverBarButton> }\r\n          </StretchForm>\r\n        </RightSide>\r\n      </InnerWrap>\r\n    </Wrap>\r\n  </>);\r\n}\r\n", "export const styles = {\r\n  colors: {\r\n    primary: '#2E294E',\r\n    primary_background: '#F2F2F8',\r\n    action: '#ACC196',\r\n    action_light: '#D7E1CC',\r\n    white: '#FFFFFF',\r\n    busy: '#D7263D',\r\n    warn: '#EEB868',\r\n    black: '#000000',\r\n    free: '#74D06C',\r\n    gray: {\r\n      5: '#F7F7F7',\r\n      10: '#F1F1F1',\r\n      20: '#E1E1E1',\r\n      30: '#D1D1D1',\r\n      40: '#C1C1C1',\r\n      50: '#B1B1B1',\r\n      60: '#A1A1A1',\r\n      70: '#919191',\r\n      80: '#818181',\r\n      90: '#717171',\r\n      100: '#616161',\r\n      110: '#515151',\r\n      120: '#414141',\r\n      130: '#313131',\r\n      140: '#212121',\r\n      150: '#111111',\r\n    }\r\n  },\r\n  shadows: [\r\n    '0 4px 8px 0 rgb(0 0 0 / 8%)',\r\n    '0px 1px 4px rgba(0, 0, 0, 0.25)',\r\n    '0px 1px 1px rgba(0, 0, 0, 0.25)'\r\n  ]\r\n}\r\n", "import React, { Dispatch, SetStateAction, useContext } from 'react';\r\nimport * as texts from '~/assets/langs/en.texts.json';\r\n\r\ninterface LangsContextType {\r\n  translations: typeof texts,\r\n  setTranslations: Dispatch<SetStateAction<typeof texts>>,\r\n  lang: 'english' | 'czech',\r\n  setLang: Dispatch<SetStateAction<'english' | 'czech'>>,\r\n}\r\n\r\nexport const langsContext = React.createContext<LangsContextType | null>(null);\r\n\r\nexport const useLangs = () => {\r\n  const value = useContext(langsContext);\r\n  if (!value)\r\n    throw new Error('Ilegal use of context');\r\n\r\n  return value;\r\n};\r\n", "import React, { Dispatch, SetStateAction, useContext } from 'react';\r\n\r\n\r\ninterface PagesContextType {\r\n  signingIn: boolean | null,\r\n  setSigningIn: Dispatch<SetStateAction<boolean>>,\r\n  landingPage: boolean | null,\r\n  setLandingPage: Dispatch<SetStateAction<boolean>>\r\n}\r\n\r\n\r\nexport const signingInContext = React.createContext<PagesContextType | null>(null);\r\n\r\nexport const useWhereAreWe = () => {\r\n  const value = useContext(signingInContext);\r\n  if (!value)\r\n    throw new Error('Ilegal use of context');\r\n\r\n  return value;\r\n};\r\n", "import React, { Dispatch, SetStateAction, useContext, useState } from 'react';\r\n\r\ninterface UsernameContextType {\r\n  username: string | null,\r\n  setUsername: Dispatch<SetStateAction<string | null>>,\r\n  usernameToVerify: string | null,\r\n  setUsernameToVerify: Dispatch<SetStateAction<string | null>>,\r\n  admin: boolean | null,\r\n  setAdmin: Dispatch<SetStateAction<boolean | null>>,\r\n}\r\n\r\nexport const usernameContext = React.createContext<UsernameContextType | null>(null);\r\n\r\nexport const useUsername = () => {\r\n  const value = useContext(usernameContext);\r\n  if (!value)\r\n    throw new Error('Ilegal use of context');\r\n\r\n  return value;\r\n};\r\n", "import { SVGProps } from 'react';\r\nimport { styles } from '~/constants/styles';\r\n\r\nconst GbIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    viewBox=\"0 0 640 480\"\r\n    style={{\r\n      height: props.height\r\n    }}\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path fill=\"#012169\" d=\"M0 0h640v480H0z\"/>\r\n    <path fill=\"#FFF\" d=\"m75 0 244 181L562 0h78v62L400 241l240 178v61h-80L320 301 81 480H0v-60l239-178L0 64V0h75z\"/>\r\n    <path fill=\"#C8102E\" d=\"m424 281 216 159v40L369 281h55zm-184 20 6 35L54 480H0l240-179zM640 0v3L391 191l2-44L590 0h50zM0 0l239 176h-60L0 42V0z\"/>\r\n    <path fill=\"#FFF\" d=\"M241 0v480h160V0H241zM0 160v160h640V160H0z\"/>\r\n    <path fill=\"#C8102E\" d=\"M0 193v96h640v-96H0zM273 0v480h96V0h-96z\"/>\r\n  </svg>\r\n);\r\n\r\nexport default GbIcon;", "import { SVGProps } from 'react';\r\nimport { styles } from '~/constants/styles';\r\n\r\nconst CzIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    viewBox=\"0 0 640 480\"\r\n    style={{\r\n      height: props.height\r\n    }}\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path fill=\"#fff\" d=\"M0 0h640v240H0z\"/>\r\n    <path fill=\"#d7141a\" d=\"M0 240h640v240H0z\"/>\r\n    <path fill=\"#11457e\" d=\"M360 240 0 0v480z\"/>\r\n  </svg>\r\n);\r\n\r\nexport default CzIcon;", "import React, { useRef } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { styles } from \"~/constants/styles\";\r\nimport { useLangs } from \"~/contexts/langsContext\";\r\n\r\ninterface LoaderProps {\r\n  show: boolean\r\n}\r\n\r\nconst Wrap = styled.div<{ show: boolean }>`\r\n  position: fixed;\r\n  transition: opacity 0.1s ease-out, transform 0.2s cubic-bezier(0.33, 1, 0.68, 1);\r\n  opacity: ${props => props.show ? '1' : '0'};\r\n  transform: translateY(${props => props.show ? '0' : '4.5'}rem);\r\n  bottom: 2.5rem;\r\n  background-color: ${styles.colors.primary};\r\n  right: 2.5rem;\r\n  border-radius: 0.6rem;\r\n  box-shadow: ${styles.shadows[0]};\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 1rem 1.5rem;\r\n  gap: 1.5rem;\r\n  @media (max-width: 500px) {\r\n    right: 50%;\r\n    width: 100%;\r\n    max-width: 400px;\r\n    border-bottom-left-radius: 0;\r\n    border-bottom-right-radius: 0;\r\n    /* transform: translateY(${props => props.show ? '0' : '4.5'}rem); */\r\n    transform: translate(50%, ${props => props.show ? '2.5' : '4.5'}rem);\r\n  }\r\n`;\r\n\r\nconst Text = styled.p`\r\n  color: ${styles.colors.white};\r\n  font-weight: bold;\r\n  font-size: 1.1rem;\r\n  margin: 0px;\r\n`;\r\n\r\nconst spin = keyframes`\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(720deg); }\r\n`;\r\n\r\nconst Symbol = styled.div`\r\n  height: 0.9rem;\r\n  width: 0.9rem;\r\n  background-color: ${styles.colors.action};\r\n  border-radius: 0.2rem;\r\n  animation-name: ${spin};\r\n  animation-duration: 1.2s;\r\n  animation-delay: 0.9s;\r\n  animation-timing-function: ease-in-out;\r\n  animation-iteration-count: infinite;\r\n`;\r\n\r\nexport const Loader: React.FC<LoaderProps> = ({ show }: LoaderProps) => {\r\n\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const { translations: l } = useLangs();\r\n  const [textIndex, setTextIndex] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    if (!show) {\r\n      setTimeout(() => {\r\n        if (ref.current) ref.current.style.visibility = 'hidden';\r\n      }, 200);\r\n    }\r\n    else {\r\n      if (ref.current) {\r\n        setTextIndex(Math.floor(Math.random() * 6));\r\n        ref.current.style.visibility = '';\r\n      }\r\n    }\r\n  }, [show])\r\n\r\n  return <Wrap show={show} ref={ref}>\r\n    <Symbol></Symbol>\r\n    <Text>{l.loadingText[textIndex]}...</Text>\r\n  </Wrap>\r\n}", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\r\nimport { useResolvedPath } from \"@remix-run/react\";\r\nimport { createUser, getUser, checkForUserByUsername, checkForUserByEmail } from \"~/models/user.server\";\r\nimport { checkPassword, generateHashAndSalt } from \"./pwd_helper.server\";\r\n\r\n\r\ninterface LoginType {\r\n  username: string;\r\n  password: string;\r\n  verifiedEmail?: boolean;\r\n}\r\n\r\ntype RegisterType = LoginType & {\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  phone: string;\r\n}\r\n\r\nexport const login = async ({ username, password }: LoginType) => {\r\n\r\n  if (username == '') return null;\r\n\r\n  const user = await checkForUserByUsername({ username });\r\n\r\n  if (user == null) return null;\r\n\r\n  const passwordMatch = await checkPassword(password, user.passwordHash);\r\n\r\n  if (!passwordMatch) return null;\r\n\r\n  return { userId: user.id, admin: user.admin, verifiedEmail: user.verifiedEmail, email: user.email };\r\n\r\n}\r\n\r\nexport const register = async ({ username, password, email, phone, firstName, lastName }: RegisterType) => {\r\n\r\n  if (username == '' || password == '' || email == '' || phone == '' || firstName == '' || lastName == '') return null;\r\n\r\n  if (await checkForUserByUsername({ username }) != null || await checkForUserByEmail({ email })) return null;\r\n\r\n  const newUser = await createUser({ username, email, phone, firstName, lastName, passwordHash: await generateHashAndSalt(password) });\r\n\r\n  return { userId: newUser.id, admin: false } \r\n\r\n}\r\n\r\nconst sessionSecret = process.env.SESSION_SECRET;\r\nif (!sessionSecret) {\r\n  throw new Error(\"You have no session secret, idiot.\");\r\n}\r\n\r\nconst storage = createCookieSessionStorage({\r\n  cookie: {\r\n    name: 'reserveroo-session',\r\n    secure: process.env.NODE_ENV === 'production',\r\n    secrets: [sessionSecret],\r\n    sameSite: 'lax',\r\n    path: '/',\r\n    maxAge: 60 * 60 * 24 * 30,\r\n    httpOnly: true,\r\n  },\r\n})\r\n\r\nexport const createUserSession = async (username: string, admin: boolean = false, verifiedEmail: boolean = false, redirectTo: string) => {\r\n  const session = await storage.getSession();\r\n  if (!verifiedEmail) {\r\n    session.set('usernameToVerify', username);\r\n  }\r\n  else {\r\n    session.set('username', username);\r\n    session.set('usernameToVerify', null);\r\n    session.set('admin', admin);\r\n  }\r\n  return redirect(!verifiedEmail ? '/verifyEmail' : redirectTo, {\r\n    headers: {\r\n      'Set-Cookie': await storage.commitSession(session)\r\n    }\r\n  })\r\n}\r\n\r\nconst getUserSession = (request: Request) => {\r\n  return storage.getSession(request.headers.get('Cookie'));\r\n}\r\n\r\nexport const requireUsernameAndAdmin = async (\r\n  request: Request,\r\n  redirectTo: string = new URL(request.url).pathname\r\n) => {\r\n  const session = await getUserSession(request);\r\n  const username = session.get('username');\r\n  const admin = session.get('admin');\r\n  const usernameToVerify = session.get('usernameToVerify');\r\n  if (usernameToVerify) {\r\n    const searchParams = new URLSearchParams([\r\n      ['redirectTo', redirectTo]\r\n    ]);\r\n    throw redirect(`/verifyEmail?${searchParams}`);\r\n  }\r\n  if (!username || admin === null || typeof username !== 'string') {\r\n    const searchParams = new URLSearchParams([\r\n      ['redirectTo', redirectTo]\r\n    ]);\r\n    throw redirect(`/authenticate?${searchParams}`);\r\n  } \r\n  return { username, admin: admin == 'true' || admin == '1' };\r\n}\r\n\r\nexport const getUsernameAndAdmin = async (\r\n  request: Request\r\n) => {\r\n  const session = await getUserSession(request);\r\n  return { username: session.get('username') as string | null, admin: session.get('admin') as boolean | null, usernameToVerify: session.get('usernameToVerify') };\r\n}\r\n\r\nexport const requireUsernameToVerify = async (\r\n  request: Request\r\n) => {\r\n  const session = await getUserSession(request);\r\n  const usernameToVerify = session.get('usernameToVerify');\r\n  if (!usernameToVerify) {\r\n    throw redirect(`/authenticate`);\r\n  }\r\n  return { usernameToVerify: usernameToVerify as string };\r\n}\r\n\r\nexport const logout = async (request: Request, redirectUrl: string) => {\r\n  const session = await getUserSession(request);\r\n  return redirect(redirectUrl, {\r\n    headers: {\r\n      'Set-Cookie': await storage.destroySession(session)\r\n    }\r\n  })\r\n}", "import { SES } from \"@aws-sdk/client-ses\";\r\nimport AWS from 'aws-sdk';\r\nimport { PrismaClient } from \"@prisma/client\";\r\nimport invariant from \"tiny-invariant\";\r\n\r\nlet prisma: PrismaClient;\r\nlet ses: SES;\r\nlet s3: AWS.S3;\r\n\r\nAWS.config.update({\r\n  accessKeyId: process.env.AWS_EMAIL_ACCESS_KEY_ID,\r\n  secretAccessKey: process.env.AWS_EMAIL_SECRET_ACCESS_KEY\r\n})\r\n\r\ndeclare global {\r\n  var __db__: PrismaClient;\r\n  var __ses__: SES;\r\n  var __s3__: AWS.S3;\r\n}\r\n\r\nif (!process.env.AWS_EMAIL_ACCESS_KEY_ID || !process.env.AWS_EMAIL_SECRET_ACCESS_KEY) {\r\n  throw Error(\"No email credentials\");\r\n}\r\n\r\n// this is needed because in development we don't want to restart\r\n// the server with every change, but we want to make sure we don't\r\n// create a new connection to the DB with every change either.\r\n// in production we'll have a single connection to the DB.\r\nif (process.env.NODE_ENV === \"production\") {\r\n  prisma = getClient();\r\n  ses = new SES({\r\n    region: 'eu-west-2',\r\n    credentials: {\r\n      accessKeyId: process.env.AWS_EMAIL_ACCESS_KEY_ID,\r\n      secretAccessKey: process.env.AWS_EMAIL_SECRET_ACCESS_KEY\r\n    }\r\n  });\r\n  s3 = new AWS.S3();\r\n} else {\r\n  if (!global.__db__) {\r\n    global.__db__ = getClient();\r\n    global.__ses__ = new SES({\r\n      region: 'eu-west-2',\r\n      credentials: {\r\n        accessKeyId: process.env.AWS_EMAIL_ACCESS_KEY_ID,\r\n        secretAccessKey: process.env.AWS_EMAIL_SECRET_ACCESS_KEY\r\n      }\r\n    });\r\n    global.__s3__ = s3 = new AWS.S3();\r\n  }\r\n  prisma = global.__db__;\r\n  ses = global.__ses__;\r\n  s3 = global.__s3__;\r\n}\r\n\r\nfunction getClient() {\r\n  const { DATABASE_URL } = process.env;\r\n  invariant(typeof DATABASE_URL === \"string\", \"DATABASE_URL env var not set\");\r\n\r\n  const databaseUrl = new URL(DATABASE_URL);\r\n\r\n  // const isLocalHost = databaseUrl.hostname === \"localhost\";\r\n\r\n  // const PRIMARY_REGION = isLocalHost ? null : process.env.PRIMARY_REGION;\r\n  // const FLY_REGION = isLocalHost ? null : process.env.FLY_REGION;\r\n\r\n  // const isReadReplicaRegion = !PRIMARY_REGION || PRIMARY_REGION === FLY_REGION;\r\n\r\n  // if (!isLocalHost) {\r\n  //   databaseUrl.host = `${FLY_REGION}.${databaseUrl.host}`;\r\n  //   if (!isReadReplicaRegion) {\r\n  //     // 5433 is the read-replica port\r\n  //     databaseUrl.port = \"5432\";\r\n  //   }\r\n  // }\r\n\r\n  console.log(`\uD83D\uDD0C setting up prisma client to ${databaseUrl.host}`);\r\n  // NOTE: during development if you change anything in this function, remember\r\n  // that this only runs once per server restart and won't automatically be\r\n  // re-run per request like everything else is. So if you need to change\r\n  // something in this file, you'll need to manually restart the server.\r\n  const client = new PrismaClient({\r\n    datasources: {\r\n      db: {\r\n        url: DATABASE_URL,\r\n      },\r\n    },\r\n  });\r\n  // connect eagerly\r\n  client.$connect();\r\n\r\n  return client;\r\n}\r\n\r\nexport { prisma, ses, s3 };\r\n", "import type { User, Search } from \"@prisma/client\";\r\n\r\nimport { prisma } from \"~/db.server\";\r\n\r\nexport type { User, Search } from \"@prisma/client\";\r\n\r\nexport const getUser = async ({ id }: Pick<User, 'id'>) => (await prisma.user.findUnique({\r\n  where: { id },\r\n}));\r\n\r\nexport const getUserId = async ({ username }: Pick<User, 'username'>) => (await prisma.user.findUnique({\r\n  where: { username },\r\n  select: {\r\n    id: true,\r\n    email: true\r\n  }\r\n}));\r\n\r\nexport const checkForUserByUsername = async ({ username }: Pick<User, 'username'>) => (await prisma.user.findUnique({\r\n  where: { username },\r\n  select: { id: true, passwordHash: true, admin: true, verifiedEmail: true, email: true }\r\n}));\r\n\r\nexport const getEmailFromUsername = async ({ username }: Pick<User, 'username'>) => (await prisma.user.findUnique({\r\n  where: { username },\r\n  select: { email: true }\r\n}));\r\n\r\nexport const checkForUserByEmail = async ({ email }: Pick<User, 'email'>) => (await prisma.user.findUnique({\r\n  where: { email },\r\n  select: { id: true, passwordHash: true, admin: true }\r\n}));\r\n\r\nexport const getUserEmailToResend = async ({ username }: Pick<User, 'username'>) => (await prisma.user.findUnique({\r\n  where: {\r\n    username\r\n  },\r\n  select: { email: true, verifyEmailTriesLeft: true }\r\n}));\r\n\r\nexport const subtractResendTries = async ({ email }: Pick<User, 'email'>) => (await prisma.user.update({\r\n  where: { email },\r\n  data: {\r\n    verifyEmailTriesLeft: {\r\n      decrement: 1\r\n    }\r\n  }\r\n}));\r\n\r\nexport const addToSearchHistory = async ({ username, phrase, locationId, tagIds, categoryIds }: Pick<User, 'username'> & Pick<Search, 'phrase' | 'locationId'> & { tagIds: string[], categoryIds: string[] }) => await prisma.user.update({\r\n  where: { username },\r\n  data: {\r\n    searchHistory: {\r\n      create: {\r\n        phrase,\r\n        locationId,\r\n        Tags: {\r\n          connect: tagIds.map(t => ({ id: t }))\r\n        },\r\n        Categories: {\r\n          connect: categoryIds.map(c => ({ id: c }))\r\n        },\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const getSearchHistory = async ({ username }: Pick<User, 'username'>) => await prisma.user.findUnique({\r\n  where: { username },\r\n  include: {\r\n    searchHistory: {\r\n      orderBy: [{\r\n        createdAt: 'desc',\r\n      }],\r\n      take: 6,\r\n      include: {\r\n        location: {\r\n          include: {\r\n            multiLangCity: true,\r\n            multiLangCountry: true\r\n          }\r\n        },\r\n        Tags: {\r\n          include: {\r\n            multiLangDesc: true,\r\n            multiLangName: true\r\n          }\r\n        },\r\n        Categories: {\r\n          include: {\r\n            multiLangName: true\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nexport const verifyUserEmail = async (email: string) => (await prisma.user.update({\r\n  where: {\r\n    email\r\n  }, data: {\r\n    verifiedEmail: true\r\n  },\r\n  select: {\r\n    username: true, admin: true\r\n  }\r\n}));\r\n\r\nexport const changeUserPassword = async({ username, passwordHash }: Pick<User, 'username' | 'passwordHash'>) => (await prisma.user.update({\r\n  where: {\r\n    username\r\n  },\r\n  data: {\r\n    passwordHash\r\n  }\r\n}));\r\n\r\nexport const getUserByUsername = async ({ username }: Pick<User, 'username'>) => (await prisma.user.findUnique({\r\n  where: { username },\r\n  include: {\r\n    reservationGroups: {\r\n      include: {\r\n        reservations: {\r\n          include: {\r\n            reservable: {\r\n              include: {\r\n                place: true,\r\n                ReservableType: {\r\n                  include: {\r\n                    multiLangName: true\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}));\r\n\r\nexport const createUser = async ({\r\n  username, passwordHash, email, phone, firstName, lastName\r\n}: Pick<User, \r\n  'username' | 'passwordHash' | 'email' | 'firstName' | 'lastName' | 'phone'\r\n>) => (await prisma.user.create({\r\n  data: { username, passwordHash, email, phone, firstName, lastName },\r\n  select: { id: true, passwordHash: true }\r\n}));\r\n\r\nexport const updateUser = async ({ id, firstName, lastName, /*username, email,*/ phone }: Pick<User, 'id' | 'firstName' | 'lastName' | 'phone'/* | 'email' | 'username'*/>) => (await prisma.user.update({\r\n  where: {\r\n    id\r\n  },\r\n  data: {\r\n    /*username, email, */firstName, lastName, phone\r\n  }\r\n}));\r\n\r\nexport const deleteUser = async ({ id }: Pick<User, 'id'>) => (await prisma.user.deleteMany({\r\n    where: { id },\r\n}));\r\n", "// import bcrypt from 'bcrypt';\r\nimport { scryptSync, randomBytes, timingSafeEqual } from 'crypto';\r\nimport { isConstValueNode } from 'graphql';\r\n\r\n// export const generateHashAndSalt = async (pwd: string) => {\r\n//   // TODO: Password validation\r\n//   return await bcrypt.hash(pwd, 10);\r\n// };\r\n\r\n// export const checkPassword = async (pwd: string, hash: string) => {\r\n//   return await bcrypt.compare(pwd, hash);\r\n// };\r\n\r\nexport const generateHashAndSalt = async (pwd: string) => {\r\n  const salt = randomBytes(16).toString('hex');\r\n  const hashedPwd = scryptSync(pwd, salt, 64).toString('hex');\r\n  return `${salt}:${hashedPwd}`;\r\n}\r\n\r\nexport const checkPassword = async (pwd: string, hash: string) => {\r\n  const [salt, key] = hash.split(':');\r\n  console.log(salt);\r\n  console.log(key);\r\n  const hashedBuffer = scryptSync(pwd, salt, 64);\r\n\r\n  const keyBuffer = Buffer.from(key, 'hex');\r\n  const match = timingSafeEqual(hashedBuffer, keyBuffer);\r\n  return match;\r\n}", "import { Form, useActionData, useLoaderData, useSearchParams, useSubmit } from '@remix-run/react'\r\nimport { ActionFunction, json, LoaderFunction, redirect } from '@remix-run/server-runtime'\r\nimport React from 'react'\r\nimport { IdInput } from '~/components/inputs/ObjectInput'\r\nimport { getUserByUsername, getUserEmailToResend, verifyUserEmail } from '~/models/user.server'\r\nimport { sendEmailConfirmationEmail } from '~/utils/emails.server'\r\nimport { badRequest, getBaseUrl, getFormEssentials } from '~/utils/forms'\r\nimport { createUserSession, requireUsernameToVerify } from '~/utils/session.server'\r\nimport { verifyMessage } from '~/utils/signing.server'\r\n\r\ninterface LoaderData {\r\n  usernameToVerify: string\r\n};\r\n\r\ninterface ActionData {\r\n  msg: string\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const usernameToVerify = await requireUsernameToVerify(request);\r\n  return json({ usernameToVerify });\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  return redirect('/');\r\n}\r\n\r\nexport default function ComponentName() {\r\n\r\n  const submit = useSubmit();\r\n  const formRef = React.useRef<HTMLFormElement>(null);\r\n\r\n  React.useEffect(() => {\r\n    if (formRef.current) {\r\n      submit(formRef.current);\r\n    }\r\n  }, [formRef.current]);\r\n\r\n  return <div>\r\n    <p>Signing you in...</p>\r\n    <Form method='post'>\r\n      <IdInput name='nothing' value={''} />\r\n    </Form>\r\n  </div>\r\n}", "import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { styles } from \"~/constants/styles\";\r\n\r\ninterface IdInput {\r\n  name?: string,\r\n  value: string,\r\n  onChange?: React.ChangeEventHandler<HTMLInputElement> | undefined\r\n}\r\n\r\nexport const IdInput: React.FC<IdInput> = ({ name, value, onChange }: IdInput) => {\r\n\r\n  return <>\r\n    <input name={name} type='text' readOnly={true} value={value} hidden={true} onChange={onChange} />\r\n  </>\r\n\r\n}\r\n", "import { Link, Outlet, useActionData, useSearchParams, useTransition } from '@remix-run/react'\r\nimport type { LoaderFunction } from '@remix-run/server-runtime'\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { LoginComponent } from '~/components/auth/login';\r\nimport { RegisterComponent } from '~/components/auth/register';\r\nimport { IconRow } from '~/components/icon-row';\r\nimport { styles } from '~/constants/styles';\r\nimport { useWhereAreWe } from '~/contexts/whereAreWeContext';\r\nimport { AuthActionData } from './authenticate/login';\r\n\r\nexport const loader: LoaderFunction = () => {\r\n  return {}\r\n}\r\n\r\nexport const Title = styled.h2`\r\n  color: ${styles.colors.black};\r\n  text-align: center;\r\n  font-size: 1.375rem;\r\n  margin: 2rem 0rem 1rem;\r\n  @media (min-width: 500px) {\r\n    font-size: 2rem;\r\n  }\r\n  @media (min-width: 800px) {\r\n    font-size: 2.3rem;\r\n  }\r\n`;\r\n\r\nexport const TabBar = styled.div`\r\n  margin: 1rem auto;\r\n  width: 95%;\r\n  max-width: 500px;\r\n  justify-content: center;\r\n  align-items: stretch;\r\n  display: flex;\r\n  padding: 0.5rem 0rem;\r\n  border: 1.5px solid ${styles.colors.gray[140]}40;\r\n  border-radius: 0.5rem;\r\n  position: relative;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const Separator = styled.div`\r\n  width: 1px;\r\n  background-color: ${styles.colors.gray[50]};\r\n`;\r\n\r\nexport const AuthTabButton = styled.button`\r\n  width: 50%;\r\n  display: flex;\r\n  background-color: transparent;\r\n  border: none;\r\n  font-size: 0.9rem;\r\n  cursor: pointer;\r\n  padding: 0.2rem 0;\r\n  margin: 0;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: ${styles.colors.gray[110]};\r\n  font-weight: bold;\r\n  text-decoration: none;\r\n`;\r\n\r\nexport const ActiveHighlighter = styled.div<{ position: number }>`\r\n  position: absolute;\r\n  height: calc(100% - 0.4rem);\r\n  border-radius: 0.25rem;\r\n  width: calc(50% - 0.4rem);\r\n  transition: left 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);\r\n  left: ${props => props.position == 0 ? '0px' : '50%'};\r\n  top: 0px;\r\n  margin: 0.2rem;\r\n  background-color: ${styles.colors.action};\r\n  z-index: -1;\r\n`;\r\n\r\nexport default function Authenticate() {\r\n\r\n  const [searchParams, setSearchParams ] = useSearchParams();\r\n  const a = useActionData<AuthActionData>();\r\n  const t = useTransition();\r\n\r\n  const redirectTo = encodeURI(searchParams.get('redirectTo') ?? '').replace('/', '%2F');\r\n\r\n  const [ position, setPosition ] = React.useState(0);\r\n\r\n  const { setSigningIn } = useWhereAreWe();\r\n\r\n  React.useEffect(() => {\r\n    setSigningIn(true);\r\n    return () => {\r\n      setSigningIn(false);\r\n    }\r\n  }, []);\r\n\r\n  return <>\r\n    <Title>Welcome to Reserveroo.</Title>\r\n    <IconRow invertColors={true} />\r\n    <TabBar>\r\n      <ActiveHighlighter position={position} />\r\n      <AuthTabButton onClick={() => {setPosition(0)}}>Sign In</AuthTabButton>\r\n      <Separator />\r\n      <AuthTabButton onClick={() => {setPosition(1)}}>Create Account</AuthTabButton>\r\n    </TabBar>\r\n    <div>\r\n      { position == 0 && <LoginComponent a={a} searchParams={searchParams} setSearchParams={(data) => { setSearchParams(data) }} t={t} />}\r\n      { position == 1 && <RegisterComponent a={a} searchParams={searchParams} setSearchParams={(data) => { setSearchParams(data) }} t={t} />}\r\n    </div>\r\n  </>\r\n}", "import { Form, Link } from \"@remix-run/react\";\r\nimport { Transition } from \"@remix-run/react/transition\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport AnglesRightIcon from \"~/assets/icons/AnglesRight\";\r\nimport { styles } from \"~/constants/styles\";\r\nimport { AuthActionData } from \"~/routes/authenticate/login\";\r\nimport { TextInput } from \"../inputs/TextInput\";\r\nimport { MainButtonBtn } from \"../place/place-summary\";\r\n\r\nexport const AuthWrap = styled.div`\r\n  max-width: 500px;\r\n  margin: 0px auto;\r\n  margin-top: 2rem;\r\n  box-sizing: border-box;\r\n  background-color: ${styles.colors.gray[5]};\r\n  padding: 0.75rem;\r\n  @media (min-width: 500px) {\r\n    border-radius: 0.25rem;\r\n  }\r\n`;\r\n\r\nexport const FieldSet = styled.fieldset`\r\n  border: none;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n`;\r\n\r\nexport const SubmitButton = styled.button`\r\n  padding: 0.8rem 0rem;\r\n  border: 1.5px solid ${styles.colors.gray[20]};\r\n  border-radius: 0.4rem;\r\n  background-color: ${styles.colors.white};\r\n  cursor: pointer;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\ninterface Props {\r\n  a?: AuthActionData,\r\n  searchParams: URLSearchParams,\r\n  setSearchParams: (data: string) => void,\r\n  t: Transition\r\n}\r\n\r\nexport const LoginComponent: React.FC<Props> = ({ a, searchParams, setSearchParams, t }) => {\r\n  \r\n  React.useEffect(() => {\r\n    if (a?.fields?.redirectTo) {\r\n      setSearchParams(a?.fields?.redirectTo);\r\n    }\r\n  }, [a?.fields?.redirectTo]);\r\n\r\n  return (<AuthWrap>\r\n    <Form method='post' action='/authenticate/login'>\r\n      <FieldSet disabled={t.state === 'submitting'}>\r\n        <input hidden={true} name='redirectTo' defaultValue={searchParams.get('redirectTo') ?? undefined} />\r\n        <TextInput name='username' defaultValue={a?.fields?.username ?? ''} title={'Username'} />\r\n        <TextInput password={true} name='password' defaultValue={a?.fields?.password ?? ''} title={'Password'} />\r\n        <Link style={{ color: styles.colors.black }} to='/pwd/forgot'>Forgot password</Link>\r\n        <MainButtonBtn>Sign In<AnglesRightIcon height={'1.5rem'} /></MainButtonBtn>\r\n      </FieldSet>\r\n    </Form>\r\n  </AuthWrap>)\r\n}", "import { SVGProps } from 'react';\r\nimport { styles } from '~/constants/styles';\r\n\r\nconst AnglesRightIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    viewBox=\"0 0 448 512\"\r\n    style={{\r\n      height: props.height\r\n    }}\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M246.6 233.4l-160-160c-12.5-12.5-32.75-12.5-45.25 0s-12.5 32.75 0 45.25L178.8 256l-137.4 137.4c-12.5 12.5-12.5 32.75 0 45.25C47.63 444.9 55.81 448 64 448s16.38-3.125 22.62-9.375l160-160C259.1 266.1 259.1 245.9 246.6 233.4zM438.6 233.4l-160-160c-12.5-12.5-32.75-12.5-45.25 0s-12.5 32.75 0 45.25L370.8 256l-137.4 137.4c-12.5 12.5-12.5 32.75 0 45.25C239.6 444.9 247.8 448 256 448s16.38-3.125 22.62-9.375l160-160C451.1 266.1 451.1 245.9 438.6 233.4z\"\r\n      fill={props.fill ?? styles.colors.black}\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default AnglesRightIcon;", "import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { styles } from \"~/constants/styles\";\r\n\r\ninterface TextInputProps {\r\n  name?: string,\r\n  title?: string,\r\n  defaultValue?: string,\r\n  value?: string,\r\n  password?: boolean,\r\n  readOnly?: boolean,\r\n  placeholder?: string,\r\n  style?: React.CSSProperties,\r\n  containerStyle?: React.CSSProperties,\r\n  onClick?: () => void,\r\n  setValue?: (s: string) => void\r\n}\r\n\r\nconst TextInputField = styled.input`\r\n  font-size: 0.875rem;\r\n  line-height: 2rem;\r\n  padding: 0.125rem 1rem;\r\n  border: 1.5px solid ${styles.colors.gray[140]}40;\r\n  border-radius: 0.375rem;\r\n  outline: none;\r\n  margin: 0;\r\n  &:focus {\r\n    border: 1.5px solid ${styles.colors.gray[50]};\r\n  }\r\n`;\r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  font-size: 0.8rem;\r\n  margin-bottom: 0.2rem;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const TextInput: React.FC<TextInputProps> = ({ name, setValue: exposeValue, placeholder, onClick, style, containerStyle, title, defaultValue, password, readOnly, value: forcedValue }: TextInputProps) => {\r\n\r\n  const [ value, setValue ] = React.useState<string>(defaultValue ?? '');\r\n\r\n  return <Wrap style={containerStyle}>\r\n    { title && <Label>{title}</Label> }\r\n    <TextInputField placeholder={placeholder} onClick={onClick} style={style} readOnly={readOnly} name={name} type={password ? 'password' : 'text'} value={forcedValue ?? value} onChange={(e) => { setValue(e.currentTarget.value); if (exposeValue) exposeValue(e.currentTarget.value) }} />\r\n  </Wrap>\r\n\r\n}\r\n", "import { OpeningTime, Place, Reservable } from \"@prisma/client\";\r\nimport { Link } from \"@remix-run/react\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\"\r\nimport AngleRightIcon from \"~/assets/icons/AngleRight\";\r\nimport AnglesRightIcon from \"~/assets/icons/AnglesRight\";\r\nimport ClockIcon from \"~/assets/icons/Clock\";\r\nimport LocationIcon from \"~/assets/icons/Location\";\r\nimport { styles } from \"~/constants/styles\";\r\nimport { UnstyledLink } from \"~/root\";\r\nimport { ReservableTypeWithTexts, TagWithTexts } from \"~/types/types\";\r\nimport { getDayOfWeek } from \"~/utils/forms\";\r\nimport { FacilitiesIndicator } from \"./facilities-indicator\";\r\nimport { PlaceImage } from \"./place-image\";\r\nimport { TagList } from \"./tag-list\";\r\n\r\nexport const PlaceWrap = styled.div<{ inSearch: boolean }>`\r\n  background-color: ${styles.colors.gray[5]};\r\n  margin-bottom: 2.125rem;\r\n  display: grid;\r\n  grid-template-columns: 11rem 1fr;\r\n  padding: 1.2rem 1.2rem;\r\n  position: relative;\r\n  @media (max-width: ${props => props.inSearch ? '1100px' : '800px'}) {\r\n    grid-template-columns: unset;\r\n    grid-template-rows: 11rem 1fr;\r\n  }\r\n  @media (min-width: 550px) {\r\n    border-radius: 0.5rem;\r\n  }\r\n`;\r\n\r\nexport const PlaceName = styled(UnstyledLink)<{ inSearch: boolean }>`\r\n  font-size: 1.4rem;\r\n  font-weight: bold;\r\n  color: ${styles.colors.black};\r\n  @media (max-width: ${props => props.inSearch ? '1100px' : '800px'}) {\r\n    margin-top: 1rem;\r\n  }\r\n`;\r\n\r\nexport const PlaceInfoWrap = styled.div`\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 4px;\r\n  display: grid;\r\n  gap: 0.8rem;\r\n  grid-template-rows: repeat(5, auto);\r\n  justify-self: stretch;\r\n`;\r\n\r\nconst Address = styled.p`\r\n  display: flex;\r\n  font-weight: 500;\r\n  margin: 0;\r\n`;\r\n\r\nconst Flex = styled.div<{ inSearch: boolean }>`\r\n  display: flex;\r\n  gap: 0.5rem;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  @media (max-width: ${props => props.inSearch ? '800px' : '500px'}) {\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n  }\r\n`;\r\n\r\nconst FlexApart = styled(Flex)<{ inSearch: boolean }>`\r\n  justify-content: space-between;\r\n  align-self: stretch;\r\n  @media (max-width: ${props => props.inSearch ? '800px' : '500px'}) {\r\n    justify-content: flex-start;\r\n    flex-wrap: wrap;\r\n    gap: 1rem;\r\n  }\r\n`;\r\n\r\nconst BaseButton = styled(Link)<{ inSearch: boolean }>`\r\n  background-color: transparent;\r\n  border: none;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0.5rem 1.6rem;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  gap: 1.3rem;\r\n  border-radius: 0.25rem;\r\n  box-sizing: border-box;\r\n  text-decoration: none;\r\n  flex-shrink: 0;\r\n  color: ${styles.colors.black};\r\n  transition: transform 0.2s cubic-bezier(0.34, 1.56, 0.64, 1);\r\n  cursor: pointer;\r\n  &:hover {\r\n    transform: scale(1.08);\r\n  }\r\n  @media (max-width: ${props => props.inSearch ? '800px' : '500px'}) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const SecondaryButton = styled(BaseButton)<{ inSearch: boolean }>`\r\n  border: 1.5px solid #22222240;\r\n  color: ${styles.colors.gray[140]};\r\n`;\r\n\r\nexport const MainButton = styled(BaseButton)<{ inSearch: boolean }>`\r\n  border: 1.5px solid ${styles.colors.action};\r\n  background-color: ${styles.colors.action};\r\n`;\r\n\r\nconst BaseButtonBtn = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0.5rem 1.6rem;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  gap: 1.3rem;\r\n  border-radius: 0.25rem;\r\n  box-sizing: border-box;\r\n  text-decoration: none;\r\n  color: ${styles.colors.black};\r\n  transition: transform 0.2s cubic-bezier(0.34, 1.56, 0.64, 1);\r\n  cursor: pointer;\r\n  &:hover {\r\n    transform: scale(1.08);\r\n  }\r\n`;\r\n\r\nexport const SecondaryButtonBtn = styled(BaseButtonBtn)`\r\n  border: 1.5px solid #22222240;\r\n  color: ${styles.colors.gray[140]};\r\n`;\r\n\r\nexport const MainButtonBtn = styled(BaseButtonBtn)`\r\n  border: 1.5px solid ${styles.colors.action};\r\n  background-color: ${styles.colors.action};\r\n  &:disabled {\r\n    background-color: ${styles.colors.gray[60]};\r\n    &:hover {\r\n      transform: none;\r\n      cursor: default;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Time = styled.p`\r\n  font-weight: 500;\r\n  margin: 0px;\r\n`;\r\n\r\ninterface PlaceProps {\r\n  place: Place & {\r\n    tags: TagWithTexts[];\r\n    openingTimes: OpeningTime[];\r\n    reservables: Reservable & {\r\n      ReservableType: ReservableTypeWithTexts\r\n    }[];\r\n  };\r\n  inSearch?: boolean\r\n}\r\n\r\nexport const getNextImportantTime = (place: Place & {\r\n  openingTimes: OpeningTime[];\r\n  reservables: Reservable & {\r\n    ReservableType: ReservableTypeWithTexts\r\n  }[];\r\n}) => {\r\n  let tomorrow = new Date();\r\n  tomorrow.setDate(tomorrow.getDate() + 1);\r\n  const closeToday = new Date(place.openingTimes.find(o => o.day == getDayOfWeek(new Date()))?.close ?? '');\r\n  const openTomorrow = new Date(place.openingTimes.find(o => o.day == getDayOfWeek(tomorrow))?.open ?? '');\r\n  \r\n  if (new Date().getHours() * 60 + new Date().getMinutes() > closeToday.getHours() * 60 + closeToday.getMinutes()) {\r\n    return `Opens at ${openTomorrow.toLocaleTimeString()} tomorrow.`;\r\n  }\r\n  return `Closes at ${closeToday.toLocaleTimeString()} today.`;\r\n}\r\n\r\nexport const PlaceSummary: React.FC<PlaceProps> = ({ place, inSearch }) => {\r\n\r\n  return <PlaceWrap inSearch={inSearch ?? false}>\r\n    <PlaceImage shape='square' imageUrl={place.profilePicUrl} />\r\n    <PlaceInfoWrap>\r\n      <FlexApart inSearch={inSearch ?? false}>\r\n        <PlaceName inSearch={inSearch ?? false} to={`/${place.id}`}>{place.name}</PlaceName>\r\n      </FlexApart>\r\n      <FlexApart inSearch={inSearch ?? false}>\r\n        <Flex inSearch={inSearch ?? false}>\r\n          {place.street && place.city && <>\r\n            <LocationIcon height='1rem' />\r\n            <Address>{place.street}, {place.city}</Address>\r\n          </>}\r\n        </Flex>\r\n        <Flex inSearch={inSearch ?? false}>\r\n          <ClockIcon height='1rem' />\r\n          <Time>{getNextImportantTime(place)}</Time>\r\n        </Flex>\r\n      </FlexApart>\r\n      <FacilitiesIndicator reservables={place.reservables} />\r\n      <TagList tags={place.tags} />\r\n      <FlexApart inSearch={inSearch ?? false}>\r\n        <span></span>\r\n        <Flex inSearch={inSearch ?? false}>\r\n          <SecondaryButton inSearch={inSearch ?? false} to={`/${place.id}`}>See Details<AngleRightIcon height='1.25rem' /></SecondaryButton>\r\n          <MainButton inSearch={inSearch ?? false} to={`/${place.id}/reserve`}>Reserve<AnglesRightIcon height='1.25rem' /></MainButton>\r\n        </Flex>\r\n      </FlexApart>\r\n    </PlaceInfoWrap>\r\n  </PlaceWrap>\r\n}", "import { SVGProps } from 'react';\r\nimport { styles } from '~/constants/styles';\r\n\r\nconst AngleRightIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    viewBox=\"0 0 256 512\"\r\n    style={{\r\n      height: props.height\r\n    }}\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M64 448c-8.188 0-16.38-3.125-22.62-9.375c-12.5-12.5-12.5-32.75 0-45.25L178.8 256L41.38 118.6c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0l160 160c12.5 12.5 12.5 32.75 0 45.25l-160 160C80.38 444.9 72.19 448 64 448z\"\r\n      fill={props.fill ?? styles.colors.black}\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default AngleRightIcon;", "import { SVGProps } from 'react';\r\nimport { styles } from '~/constants/styles';\r\n\r\nconst ClockIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    viewBox=\"0 0 512 512\"\r\n    style={{\r\n      height: props.height\r\n    }}\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256C512 397.4 397.4 512 256 512zM232 256C232 264 236 271.5 242.7 275.1L338.7 339.1C349.7 347.3 364.6 344.3 371.1 333.3C379.3 322.3 376.3 307.4 365.3 300L280 243.2V120C280 106.7 269.3 96 255.1 96C242.7 96 231.1 106.7 231.1 120L232 256z\"\r\n      fill={props.fill ?? styles.colors.black}\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default ClockIcon;", "import { SVGProps } from 'react';\r\nimport { styles } from '~/constants/styles';\r\n\r\nconst LocationIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    viewBox=\"0 0 384 512\"\r\n    style={{\r\n      height: props.height\r\n    }}\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M168.3 499.2C116.1 435 0 279.4 0 192C0 85.96 85.96 0 192 0C298 0 384 85.96 384 192C384 279.4 267 435 215.7 499.2C203.4 514.5 180.6 514.5 168.3 499.2H168.3zM192 256C227.3 256 256 227.3 256 192C256 156.7 227.3 128 192 128C156.7 128 128 156.7 128 192C128 227.3 156.7 256 192 256z\"\r\n      fill={props.fill ?? styles.colors.black}\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default LocationIcon;", "import type {\r\n  LinksFunction,\r\n  LoaderFunction,\r\n  MetaFunction,\r\n} from \"@remix-run/node\";\r\nimport { json } from \"@remix-run/node\";\r\nimport {\r\n  Link,\r\n  Links,\r\n  LiveReload,\r\n  Meta,\r\n  Outlet,\r\n  Scripts,\r\n  ScrollRestoration,\r\n  useLoaderData,\r\n  useLocation,\r\n  useTransition,\r\n} from \"@remix-run/react\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport AppHeader from \"./components/app-header\";\r\nimport { Loader } from \"./components/Loader\";\r\nimport { styles } from \"./constants/styles\";\r\nimport { langsContext } from \"./contexts/langsContext\";\r\nimport { signingInContext } from \"./contexts/whereAreWeContext\";\r\nimport { usernameContext } from \"./contexts/usernameContext\";\r\nimport { getUsernameAndAdmin } from \"./utils/session.server\";\r\nimport * as cs_texts from '~/assets/langs/cs.texts.json';\r\nimport * as en_texts from '~/assets/langs/en.texts.json';\r\nimport fonts from \"~/fonts/main.css\";\r\n\r\nexport const meta: MetaFunction = () => ({\r\n  charset: \"utf-8\",\r\n  title: \"Reserveroo\",\r\n  viewport: \"width=device-width,initial-scale=1\",\r\n});\r\n\r\nexport const UnstyledLink = styled(Link)`\r\n  color: ${styles.colors.white};\r\n  text-decoration: none;\r\n`;\r\n\r\nconst Body = styled.body<{ isLandingPage: boolean }>`\r\n  margin: 0px;\r\n  padding: 0px;\r\n  overflow-y: ${(props) => (props.isLandingPage ? \"hidden\" : \"scroll\")};\r\n  & > * {\r\n    font-family: Inter, Source Sans Pro, Roboto, sans-serif;\r\n  }\r\n`;\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const { username, admin, usernameToVerify } = await getUsernameAndAdmin(request);\r\n  const langs = request.headers.get('Accept-Language');\r\n  console.log(langs);\r\n  return json({ username, admin, usernameToVerify, langs: langs?.split(',')[0] ?? '' });\r\n}\r\n\r\ninterface AppHeaderLoaderData {\r\n  username: string | null;\r\n  usernameToVerify: string | null;\r\n  admin: boolean | null;\r\n  langs: string;\r\n}\r\n\r\nexport const WidthRestrictor = styled.div<{ width?: string }>`\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  @media (min-width: 550px) {\r\n    padding: 0 1rem;\r\n  }\r\n  box-sizing: border-box;\r\n  max-width: ${props => props.width ?? '968px'};\r\n`;\r\n\r\nconst Footer = styled.footer`\r\n  width: 100%;\r\n  padding: 2rem;\r\n  box-sizing: border-box;\r\n  margin: 5rem auto 0;\r\n  text-align: center;\r\n  background-color: ${styles.colors.primary_background};\r\n  &>p {\r\n    color: ${styles.colors.black};\r\n    margin: 0.6rem;\r\n    font-size: 0.8rem;\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\ninterface MainProps {\r\n  isLandingPage: boolean,\r\n  admin: boolean\r\n}\r\n\r\nconst Main: React.FC<MainProps> = ({ isLandingPage, admin }) => {\r\n\r\n  return <>\r\n    <div style={{ minHeight: 'calc(100vh - 11.2rem)' }}>\r\n      <AppHeader>Reserveroo</AppHeader>\r\n      <Outlet />\r\n    </div>\r\n    {!isLandingPage && <Footer>\r\n      {admin ? (\r\n        <Link to={\"/admin/reservations\"}>Admin</Link>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <p>\u00A9 Reserveroo, 2022</p>\r\n    </Footer>}\r\n  </>\r\n}\r\n\r\nexport function links() {\r\n  return [{ rel: \"stylesheet\", href: fonts }];\r\n}\r\n\r\nexport default function App() {\r\n\r\n  const loaderData = useLoaderData<AppHeaderLoaderData>();\r\n\r\n  const location = useLocation();\r\n  const [ username, setUsername ] = useState<string | null>(loaderData.username);\r\n  const [ translations, setTranslations ] = useState<typeof en_texts>(loaderData.langs.includes('cs') ? cs_texts : en_texts);\r\n  const [ lang, setLang ] = useState<'english' | 'czech'>(loaderData.langs.includes('cs') ? 'czech' : 'english');\r\n  const [ usernameToVerify, setUsernameToVerify ] = useState<string | null>(loaderData.usernameToVerify);\r\n  const [ admin, setAdmin ] = useState<boolean | null>(loaderData.admin);\r\n\r\n  const [ loading, setLoading ] = useState<boolean | null>(false);\r\n  const [ signingIn, setSigningIn ] = useState<boolean>(false);\r\n  const [ landingPage, setLandingPage ] = useState<boolean>(false);\r\n\r\n  React.useEffect(() => {\r\n    setUsername(loaderData.username);\r\n    setAdmin(loaderData.admin);\r\n  }, [loaderData]);\r\n\r\n  const t = useTransition();\r\n\r\n  React.useEffect(() => {\r\n    setLoading(t.state === 'loading' || t.state === 'submitting');\r\n  }, [t]);\r\n\r\n  return (\r\n    <html lang=\"en\" className=\"h-full\">\r\n      <head>\r\n        <Meta />\r\n        <link rel='stylesheet' href={fonts} />\r\n        {typeof document === \"undefined\" ? \"__STYLES__\" : null}\r\n      </head>\r\n      <Body className=\"h-full\" isLandingPage={landingPage}>\r\n        <signingInContext.Provider value={{ signingIn, setSigningIn, landingPage, setLandingPage }}>\r\n          <usernameContext.Provider value={{ username, setUsername, admin, setAdmin, usernameToVerify, setUsernameToVerify }}>\r\n            <langsContext.Provider value={{ translations, setTranslations, lang, setLang }}>\r\n              <Main isLandingPage={landingPage} admin={admin ?? false} />\r\n              <Loader show={loading ?? false}></Loader>\r\n            </langsContext.Provider>\r\n          </usernameContext.Provider>\r\n        </signingInContext.Provider>\r\n        <ScrollRestoration />\r\n        <Scripts />\r\n        <LiveReload />\r\n      </Body>\r\n    </html>\r\n  );\r\n}\r\n", "import { json } from \"@remix-run/node\";\r\n\r\nexport const getDateObjectFromTimeString = (s: string) => {\r\n  return new Date(1, 1, 1, parseInt(s.split(':')[0]) - 1, parseInt(s.split(':')[1]));\r\n}\r\n\r\nexport const getDayOfWeek = (date: Date) => {\r\n  return date.getDay() == 0 ? 6 : date.getDay() - 1;\r\n}\r\n\r\nexport const getStringTimeValue = (date: Date): string => {\r\n  const hPrefix = date.getHours() < 10 ? '0' : '';\r\n  const mPrefix = date.getMinutes() < 10 ? '0' : '';\r\n  return `${hPrefix}${date.getHours()}:${mPrefix}${date.getMinutes()}`;\r\n}\r\n\r\nexport const getStringDateValue = (date: Date): string => {\r\n  return `${date.getDate()}.${date.getMonth() + 1}.${date.getFullYear()}`;\r\n}\r\n\r\nexport const getInputDateFromString = (date: Date | null) => (date ?\r\n  `${date.getFullYear()}-${date.getMonth() < 10 ? '0' : ''}${date.getMonth()}-${date.getDate() < 10 ? '0' : ''}${date.getDate()}` : ''\r\n);\r\n\r\nexport const areDatesEqual = (date1: Date, date2: Date) => (\r\n  date1.getDate() === date2.getDate() && date1.getMonth() === date2.getMonth() && date1.getFullYear() === date2.getFullYear()\r\n)\r\n\r\nexport const getFormEssentials = async (request: Request) => {\r\n  console.log(\"await form data\");\r\n  const form = await request.formData();\r\n  console.log(\"await form data\");\r\n  const getFormItem = (key: string) => form.get(key)?.toString() ?? '';\r\n  console.log(\"await form data\");\r\n  const getFormItems = (key: string) => form.getAll(key).map(r => r.toString());\r\n  return { form, getFormItem, getFormItems };\r\n}\r\n\r\nexport const badRequest = <T>(data: T) => json(data, { status: 400 });\r\n\r\nexport const getBaseUrl = (request: Request) => request.url.split('/').slice(0, 3).join('/');\r\n\r\nexport const isValidEmail = (email: string) => {\r\n  return /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/\r\n    .test(email);\r\n}\r\n\r\nexport const isValidPhone = (phone: string) => {\r\n  return /\\+?[0-9 ()-]{3,15}/g.test(phone);\r\n}\r\n\r\n\r\n", "import styled from \"styled-components\";\r\nimport { styles } from \"~/constants/styles\";\r\nimport { useLangs } from \"~/contexts/langsContext\";\r\nimport { Reservable } from \"~/models/reservable.server\"\r\nimport { ReservableTypeWithTexts } from \"~/types/types\";\r\n\r\ninterface FacilitiesIndicatorProps {\r\n  reservables: Reservable & {\r\n    ReservableType: ReservableTypeWithTexts\r\n  }[]\r\n}\r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 1.3125rem;\r\n  row-gap: 0.5rem;\r\n`;\r\n\r\nexport const Indicator = styled.p`\r\n  background-color: ${styles.colors.white};\r\n  box-shadow: ${styles.shadows[2]};\r\n  margin: 0px;\r\n  display: flex;\r\n  border-radius: 0.375rem;\r\n  padding: 0.3rem 0.2rem 0.3rem 0.7rem;\r\n  font-weight: 500;\r\n  gap: 0.5rem;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Amount = styled.span`\r\n  background-color: ${styles.colors.gray[5]};\r\n  color: ${styles.colors.primary};\r\n  font-weight: 600;\r\n  padding: 0.3rem 0.8rem;\r\n  font-size: 0.8rem;\r\n  border-radius: 0.25rem;\r\n`;\r\n\r\ninterface ReservableGroup {\r\n  id: string,\r\n  name: string\r\n  amountOfReservables: number\r\n}\r\n\r\nexport const FacilitiesIndicator: React.FC<FacilitiesIndicatorProps> = ({ reservables }) => {\r\n\r\n  const { lang } = useLangs();\r\n\r\n  const reservableGroups: ReservableGroup[] = [];\r\n  reservables.forEach(r => {\r\n    if (!r.ReservableType) return;\r\n    let rg = reservableGroups.find(rg => rg.id == r.ReservableType.id);\r\n    if (rg != null) {\r\n      rg.amountOfReservables += 1;\r\n    }\r\n    else {\r\n      reservableGroups.push({\r\n        id: r.ReservableType.id,\r\n        name: r.ReservableType.multiLangName ? r.ReservableType.multiLangName[lang] : '',\r\n        amountOfReservables: 1\r\n      });\r\n    }\r\n  })\r\n\r\n  return <Wrap>{\r\n    reservableGroups.map((r) => <Indicator key={r.id}>{r.name} <Amount>x{r.amountOfReservables}</Amount></Indicator>)\r\n  }</Wrap>\r\n}", "import styled from \"styled-components\"\r\nimport { styles } from \"~/constants/styles\";\r\nimport { ImageShape } from \"~/types/types\";\r\n\r\nconst ImageWrap = styled.div<{ shape: ImageShape }>`\r\n  border-radius: ${props => props.shape == 'circle' ? '100%' : '8px'};\r\n  aspect-ratio: ${props => props.shape == 'circle' ? '1' : ''};\r\n  overflow: hidden;\r\n  width: ${props => props.shape == 'square' ? '100%' : '9rem'};\r\n  height: ${props => props.shape == 'square' ? '100%' : '9rem'};\r\n  align-self: center;\r\n  box-shadow: ${props => props.shape == 'circle' ? styles.shadows[1] : ''};\r\n  background-color: ${styles.colors.gray[30]};\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 100%;\r\n  object-fit: cover;\r\n  height: 100%;\r\n`;\r\n\r\ninterface PlaceImageProps {\r\n  shape: ImageShape,\r\n  imageUrl: string | null | undefined\r\n}\r\n\r\nexport const PlaceImage: React.FC<PlaceImageProps> = ({ shape, imageUrl }) => {\r\n\r\n  return <ImageWrap shape={shape}>\r\n    {imageUrl && <Image loading='lazy' src={imageUrl} />}\r\n  </ImageWrap>\r\n}", "import styled from \"styled-components\";\r\nimport { useLangs } from \"~/contexts/langsContext\";\r\nimport { TagWithTexts } from \"~/types/types\"\r\nimport { TagCategoryButton } from \"../search/search-ui\";\r\n\r\ninterface TagListProps {\r\n  tags: TagWithTexts[]\r\n}\r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  gap: 1rem;\r\n  flex-wrap: wrap;\r\n  align-self: center;\r\n`;\r\n\r\nexport const TagList: React.FC<TagListProps> = ({ tags }) => {\r\n\r\n  const { lang } = useLangs();\r\n\r\n  return <Wrap>\r\n    { tags.map(t => <TagCategoryButton noCursor={true} selected={false} key={t.id}>{t.multiLangName && t.multiLangName[lang]}</TagCategoryButton>) }\r\n  </Wrap>\r\n}", "import { Form } from \"@remix-run/react\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CircleInfoIcon from \"~/assets/icons/CircleInfo\";\r\nimport SearchIcon from \"~/assets/icons/Search\";\r\nimport { styles } from \"~/constants/styles\";\r\nimport { useLangs } from \"~/contexts/langsContext\";\r\nimport { CategoryWithTexts, LocationWithEverything, TagWithTexts } from \"~/types/types\";\r\nimport { MultiSelectorInput } from \"../inputs/MultiSelectorInput\";\r\nimport { SingleSelectorInput } from \"../inputs/SingleSelectorInput\";\r\nimport { SearchBar } from \"./search-bar\";\r\n\r\ninterface SearchUIProps {\r\n  searchParams: URLSearchParams,\r\n  locations: LocationWithEverything[],\r\n  tags: TagWithTexts[],\r\n  categories: CategoryWithTexts[],\r\n  narrowView?: boolean\r\n}\r\n\r\nconst Wrap = styled.div<{ narrowView: boolean }>`\r\n  max-width: 800px;\r\n  margin: 3rem auto 0;\r\n  position: relative;\r\n  padding: 1.25rem 2.75rem;\r\n  @media (max-width: 550px) {\r\n    padding: 1.25rem;\r\n  }\r\n  @media (min-width: 550px) {\r\n    border-radius: 0.5rem;\r\n  }\r\n  ${props => props.narrowView ? `\r\n    padding: 1.25rem;\r\n    margin-top: 0;\r\n    @media (max-width: 800px) {\r\n      width: 100%;\r\n      box-sizing: border-box;\r\n    }\r\n  ` : ''}\r\n  background-color: ${styles.colors.action};\r\n`;\r\n\r\nconst Title = styled.h4`\r\n  margin: 0;\r\n  line-height: 2.375rem;\r\n  color: ${styles.colors.black};\r\n  font-weight: 800;\r\n  font-size: 1rem;\r\n`;\r\n\r\nexport const TagCategoryButton = styled.button<{ selected: boolean, noCursor?: boolean }>`\r\n  height: 1.875rem;\r\n  padding: 0 1rem;\r\n  font-weight: 600;\r\n  font-size: 0.8125rem;\r\n  border-radius: 1rem;\r\n  color: ${props => props.selected ? styles.colors.white : styles.colors.primary};\r\n  background-color: ${props => props.selected ? styles.colors.primary : styles.colors.white};\r\n  box-shadow: ${styles.shadows[2]};\r\n  border: none;\r\n  cursor: ${props => props.noCursor ? '' : 'pointer'};\r\n`;\r\n\r\nconst Flex = styled.div<{ narrowView: boolean }>`\r\n  display: grid;\r\n  align-items: center;\r\n  grid-template-rows: 2.375rem;\r\n  grid-template-columns: minmax(0, auto) 2.2rem 1fr 1.5rem minmax(0, auto) 2.2rem 1fr;\r\n  ${props => !props.narrowView ? `@media (max-width: 800px) {\r\n    grid-template-columns: minmax(0, auto) 2.2rem 1fr;\r\n    row-gap: 1.5rem;\r\n  }` : ''}\r\n  @media (max-width: 550px) {\r\n    grid-template-columns: minmax(0, auto) 1fr;\r\n    row-gap: 0.2rem;\r\n  }\r\n  ${props => props.narrowView ? `\r\n    grid-template-columns: minmax(0, auto) 1fr;\r\n    row-gap: 0.2rem;\r\n  ` : ''}\r\n  gap: 0.4rem;\r\n`;\r\n\r\nconst TagFlex = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  gap: 0.4rem;\r\n`;\r\n\r\nconst InfoButton = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n  flex-shrink: 0;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0;\r\n  width: 1.6rem;\r\n`;\r\n\r\nconst StyledForm = styled(Form)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1.5rem;\r\n`;\r\n\r\nconst SearchButton = styled.button`\r\n  margin: 0px;\r\n  border-radius: 0.375rem;\r\n  border: none;\r\n  background-color: ${styles.colors.primary};\r\n  color: ${styles.colors.white};\r\n  font-weight: 700;\r\n  font-size: 1rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  height: 3.25rem;\r\n  width: 10rem;\r\n  margin: 0px auto;\r\n  cursor: pointer;\r\n  transition: transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);\r\n  &:hover {\r\n    transform: scale(1.08);\r\n  }\r\n  box-shadow: ${styles.shadows[0]};\r\n`;\r\n\r\nconst LargeSpacer = styled.div<{ narrowView: boolean }>`\r\n  @media (max-width: 800px) {\r\n    display: none;\r\n  }\r\n  ${props => props.narrowView ? `\r\n    display: none;\r\n  ` : ''}\r\n`;\r\n\r\n\r\nconst InputFieldWrap = styled.div<{ narrowView: boolean }>`\r\n  @media (max-width: 550px) {\r\n    grid-column: 1 / span 2;\r\n  }\r\n  ${props => props.narrowView ? `\r\n    grid-column: 1 / span 2;\r\n  ` : ''}\r\n`;\r\n\r\nexport const SearchUI: React.FC<SearchUIProps> = ({ searchParams, locations, tags, categories, narrowView }) => {\r\n\r\n  const locationCityCountry = searchParams.get('selectedLocation');\r\n  const tagIds = searchParams.getAll('tags[]');\r\n  const categoryIds = searchParams.getAll('categories[]');\r\n  const [ selectedTags, setSelectedTags ] = React.useState<TagWithTexts[]>(tags.filter(t => tagIds.includes(t.id)));\r\n  const { lang } = useLangs();\r\n\r\n  const defaultLocation = locations.find(l => l.cityCountry == locationCityCountry);\r\n  const defaultLocationName = defaultLocation?.multiLangCity && defaultLocation?.multiLangCountry ? (\r\n    `${defaultLocation.multiLangCity[lang]}, ${defaultLocation.multiLangCountry[lang]}`\r\n  ) : null\r\n\r\n  const defaultCategories = categoryIds.map(ci => categories.find(c => c.id == ci));\r\n  const defaultCategoryNames = defaultCategories.every(c => c != null) ? defaultCategories.map(c => c?.multiLangName ? `${c.multiLangName[lang]}` : null) : [];\r\n\r\n  console.log(categoryIds);\r\n\r\n  const getLocationDescription = (l: LocationWithEverything) => `${l.multiLangCity ? l.multiLangCity[lang] : ''}, ${l.multiLangCountry ? l.multiLangCountry[lang] : ''}`;\r\n\r\n  return <Wrap narrowView={narrowView ?? false}>\r\n    <StyledForm method='get' action='/search'>\r\n      <Flex narrowView={narrowView ?? false}>\r\n        <Title>Location</Title>\r\n        <InfoButton onClick={(e) => {\r\n          e.preventDefault();\r\n        }}><CircleInfoIcon height={'0.75rem'} /></InfoButton>\r\n        <InputFieldWrap narrowView={narrowView ?? false} >\r\n          <SingleSelectorInput\r\n            placeholder={'Pick a location'}\r\n            name='selectedLocation'\r\n            possibleValuesAndTexts={locations.map(l => ({ value: l.cityCountry, text: getLocationDescription(l) }))}\r\n            defaultValueAndText={locationCityCountry && defaultLocationName ? {\r\n              value: locationCityCountry,\r\n              text: defaultLocationName\r\n            } : null} \r\n          />\r\n        </InputFieldWrap>\r\n        <LargeSpacer narrowView={narrowView ?? false}></LargeSpacer>\r\n        <Title>Categories</Title>\r\n        <InfoButton onClick={(e) => {\r\n          e.preventDefault();\r\n        }}><CircleInfoIcon height={'0.75rem'} /></InfoButton>\r\n        <InputFieldWrap narrowView={narrowView ?? false}>\r\n          <MultiSelectorInput\r\n            placeholder='Pick categories'\r\n            name='categories[]'\r\n            possibleValuesAndTexts={categories.map(c => ({ value: c.id, text: c.multiLangName ? c.multiLangName[lang] : '' }))}\r\n            defaultValuesAndTexts={defaultCategoryNames.length > 0 ? defaultCategoryNames.map((c, i) => ({ value: categoryIds[i], text: c ?? '' })) : []}\r\n          />\r\n        </InputFieldWrap>\r\n      </Flex>\r\n      { selectedTags.map(t => <input key={t.id} hidden={true} type={'text'} name='tags[]' value={t.id} readOnly={true} />)  }\r\n      <TagFlex>\r\n        <Title>Tags</Title>\r\n        <InfoButton onClick={(e) => {\r\n          e.preventDefault();\r\n        }}><CircleInfoIcon height={'0.75rem'} /></InfoButton>\r\n        {\r\n          tags.map(t => <TagCategoryButton selected={!!selectedTags.find(st => st.id == t.id)} onClick={(e) => {\r\n            e.preventDefault();\r\n            setSelectedTags(() => {\r\n              if (selectedTags.find(st => st.id == t.id)) {\r\n                return selectedTags.filter(st => st.id != t.id);\r\n              }\r\n              else {\r\n                return [...selectedTags, t];\r\n              }\r\n            })\r\n          }} key={t.id}>{t.multiLangName && t.multiLangName[lang]}</TagCategoryButton>)\r\n        }\r\n      </TagFlex>\r\n      <SearchBar defaultValue={searchParams.get('searchTerm') ?? ''}></SearchBar>\r\n      <SearchButton>Search<SearchIcon height={'1rem'} fill={styles.colors.white} /></SearchButton>\r\n    </StyledForm>\r\n  </Wrap>\r\n}", "import { SVGProps } from 'react';\r\nimport { styles } from '~/constants/styles';\r\n\r\nconst CircleInfoIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    viewBox=\"0 0 512 512\"\r\n    style={{\r\n      height: props.height\r\n    }}\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M256 0C114.6 0 0 114.6 0 256s114.6 256 256 256s256-114.6 256-256S397.4 0 256 0zM256 128c17.67 0 32 14.33 32 32c0 17.67-14.33 32-32 32S224 177.7 224 160C224 142.3 238.3 128 256 128zM296 384h-80C202.8 384 192 373.3 192 360s10.75-24 24-24h16v-64H224c-13.25 0-24-10.75-24-24S210.8 224 224 224h32c13.25 0 24 10.75 24 24v88h16c13.25 0 24 10.75 24 24S309.3 384 296 384z\"\r\n      fill={props.fill ?? styles.colors.black}\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default CircleInfoIcon;", "import { SVGProps } from 'react';\r\nimport { styles } from '~/constants/styles';\r\n\r\nconst SearchIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    viewBox=\"0 0 512 512\"\r\n    style={{\r\n      height: props.height,\r\n      flexShrink: 0\r\n    }}\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M500.3 443.7l-119.7-119.7c27.22-40.41 40.65-90.9 33.46-144.7C401.8 87.79 326.8 13.32 235.2 1.723C99.01-15.51-15.51 99.01 1.724 235.2c11.6 91.64 86.08 166.7 177.6 178.9c53.8 7.189 104.3-6.236 144.7-33.46l119.7 119.7c15.62 15.62 40.95 15.62 56.57 0C515.9 484.7 515.9 459.3 500.3 443.7zM79.1 208c0-70.58 57.42-128 128-128s128 57.42 128 128c0 70.58-57.42 128-128 128S79.1 278.6 79.1 208z\"\r\n      fill={props.fill ?? styles.colors.black}\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default SearchIcon;", "import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CaretDownIcon from \"~/assets/icons/CaretDown\";\r\nimport { styles } from \"~/constants/styles\";\r\nimport { Button } from \"../button\";\r\nimport { IdInput } from \"./ObjectInput\";\r\nimport { TextInput } from \"./TextInput\";\r\n\r\ntype ValueAndText = {\r\n  value: string;\r\n  text: string;\r\n}\r\n\r\ninterface MultiSelectorProps {\r\n  possibleValuesAndTexts: ValueAndText[],\r\n  defaultValuesAndTexts: ValueAndText[],\r\n  name?: string,\r\n  removedName?: string,\r\n  placeholder?: string,\r\n  addedName?: string,\r\n}\r\n\r\nconst Wrap = styled.div`\r\n  height: 2.375rem;\r\n  position: relative;\r\n`;\r\n\r\nexport const DropdownWrap = styled.div<{ visible: boolean }>`\r\n  display: ${props => props.visible ? 'block' : 'none'};\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: 2;\r\n`;\r\n\r\nexport const Dropdown = styled.div`\r\n  position: absolute;\r\n  z-index: 3;\r\n  background-color: white;\r\n  box-shadow: ${styles.shadows[1]};\r\n  width: 100%;\r\n  border-radius: 0.375rem;\r\n  overflow: hidden;\r\n  padding: 0;\r\n`;\r\n\r\nexport const TextWrap = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 2.25rem;\r\n  height: 2.375rem;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const IconWrap = styled.div`\r\n  grid-column: 2;\r\n  grid-row: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const DropdownButton = styled.button<{ highlighted: boolean }>`\r\n  display: block;\r\n  background-color: ${props => props.highlighted ? styles.colors.primary : styles.colors.white};\r\n  color: ${props => props.highlighted ? styles.colors.white : styles.colors.black};\r\n  border: none;\r\n  width: 100%;\r\n  text-align: left;\r\n  padding: 0.4rem 1rem;\r\n  font-size: 0.875rem;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const MultiSelectorInput: React.FC<MultiSelectorProps> = ({ name, placeholder, removedName, addedName, possibleValuesAndTexts, defaultValuesAndTexts }) => {\r\n  \r\n  // These keep track of what was added or removed compared to the default value\r\n  // This is useful for updating the database, where when updating many relations,\r\n  // you can specify a list of ids to disconnect and a list of ids to connect\r\n  // It also lowers the amount of things sent\r\n\r\n  const [ valuesAndTexts, setValuesAndTexts ] = React.useState<ValueAndText[]>(defaultValuesAndTexts);\r\n  const [ addedValuesAndTexts, setAddedValuesAndTexts ] = React.useState<ValueAndText[]>([]);\r\n  const [ removedValuesAndTexts, setRemovedValuesAndTexts ] = React.useState<ValueAndText[]>([]);\r\n  const [ dropdown, setDropdown ] = React.useState<boolean>(false);\r\n\r\n  return <Wrap>\r\n    <TextWrap onClick={() => {\r\n        console.log('x');\r\n        setDropdown(true);\r\n      }}>\r\n      <TextInput placeholder={placeholder} style={{ cursor: 'pointer', whiteSpace: 'nowrap', textOverflow: 'ellipsis', paddingRight: '2.25rem' }} containerStyle={{ gridColumn: '1 / span 2', gridRow: '1' }} value={valuesAndTexts.map(v => v.text).join(', ')} readOnly={true} />\r\n      <IconWrap>\r\n        <CaretDownIcon height={'1rem'} />\r\n      </IconWrap>\r\n    </TextWrap>\r\n    <DropdownWrap visible={dropdown}>\r\n      <Overlay onClick={() => {\r\n        setDropdown(false);\r\n      }} />\r\n      <Dropdown>\r\n          { possibleValuesAndTexts.map(pv => <DropdownButton highlighted={valuesAndTexts.map(v => v.value).includes(pv.value)} key={pv.value} onClick={(e) => {\r\n            e.preventDefault();\r\n            setRemovedValuesAndTexts(() => {\r\n              if (valuesAndTexts.find(v => v.value == pv.value) && defaultValuesAndTexts.find(v => v.value == pv.value)) {\r\n                return [...removedValuesAndTexts, pv];\r\n              }\r\n              else if (removedValuesAndTexts.find(v => v.value == pv.value)) {\r\n                return [...removedValuesAndTexts.filter(v => v.value != pv.value)]\r\n              }\r\n              else {\r\n                return removedValuesAndTexts\r\n              }\r\n            });\r\n            setAddedValuesAndTexts(() => {\r\n              if (!defaultValuesAndTexts.find(v => v.value == pv.value) && !valuesAndTexts.find(v => v.value == pv.value)) {\r\n                return [...addedValuesAndTexts, pv];\r\n              }\r\n              else if (addedValuesAndTexts.find(v => v.value == pv.value)) {\r\n                return [...addedValuesAndTexts.filter(v => v.value != pv.value)]\r\n              }\r\n              else {\r\n                return addedValuesAndTexts\r\n              }\r\n            });\r\n            setValuesAndTexts(() => {\r\n              if (valuesAndTexts.find(v => v.value == pv.value)) {\r\n                return [...valuesAndTexts.filter(v => v.value != pv.value)]\r\n              }\r\n              else {\r\n                return [...valuesAndTexts, pv];\r\n              }\r\n            });\r\n          }}\r\n        >{pv.text}</DropdownButton>) }\r\n      </Dropdown>\r\n    </DropdownWrap>\r\n    { name && valuesAndTexts.map(v => <IdInput key={v.value} name={name} value={v.value} />) }\r\n    { removedName && removedValuesAndTexts.map(v => <IdInput key={v.value} name={removedName} value={v.value} />) }\r\n    { addedName && addedValuesAndTexts.map(v => <IdInput key={v.value} name={addedName} value={v.value} />) }\r\n  </Wrap>\r\n}\r\n", "import { SVGProps } from 'react';\r\nimport { styles } from '~/constants/styles';\r\n\r\nconst CaretDownIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    viewBox=\"0 0 320 512\"\r\n    style={{\r\n      height: props.height\r\n    }}\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M310.6 246.6l-127.1 128C176.4 380.9 168.2 384 160 384s-16.38-3.125-22.63-9.375l-127.1-128C.2244 237.5-2.516 223.7 2.438 211.8S19.07 192 32 192h255.1c12.94 0 24.62 7.781 29.58 19.75S319.8 237.5 310.6 246.6z\"\r\n      fill={props.fill ?? styles.colors.black}\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default CaretDownIcon;", "import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CaretDownIcon from \"~/assets/icons/CaretDown\";\r\nimport { Button } from \"../button\";\r\nimport { Dropdown, DropdownButton, DropdownWrap, IconWrap, Overlay, TextWrap } from \"./MultiSelectorInput\";\r\nimport { IdInput } from \"./ObjectInput\";\r\nimport { TextInput } from \"./TextInput\";\r\n\r\ntype ValueAndText = {\r\n  value: string;\r\n  text: string;\r\n}\r\n\r\ninterface SingleSelectorProps {\r\n  possibleValuesAndTexts: ValueAndText[],\r\n  defaultValueAndText: ValueAndText | null,\r\n  name?: string,\r\n  title?: string,\r\n  placeholder?: string\r\n}\r\n\r\nconst Wrap = styled.div`\r\n  height: 2rem;\r\n`;\r\n\r\nexport const SingleSelectorInput: React.FC<SingleSelectorProps> = ({ title, placeholder, name, possibleValuesAndTexts, defaultValueAndText }) => {\r\n\r\n  const [ valueAndText, setValueAndText ] = React.useState<ValueAndText | null>(defaultValueAndText);\r\n  const [ dropdown, setDropdown ] = React.useState<boolean>(false);\r\n\r\n  return <Wrap>\r\n    <TextWrap onClick={() => {\r\n        console.log('x');\r\n        setDropdown(true);\r\n      }}>\r\n      <TextInput placeholder={placeholder} style={{ cursor: 'pointer', whiteSpace: 'nowrap', textOverflow: 'ellipsis', paddingRight: '2.25rem' }} containerStyle={{ gridColumn: '1 / span 2', gridRow: '1' }} value={valueAndText?.text} readOnly={true} />\r\n      <IconWrap>\r\n        <CaretDownIcon height={'1rem'} />\r\n      </IconWrap>\r\n    </TextWrap>\r\n    <DropdownWrap visible={dropdown}>\r\n      <Overlay onClick={() => {\r\n        setDropdown(false);\r\n      }} />\r\n      <Dropdown>\r\n        { possibleValuesAndTexts.map(pv => <DropdownButton highlighted={pv.value == valueAndText?.value} key={pv.value} onClick={(e) => {\r\n          e.preventDefault();\r\n          if (pv.value == valueAndText?.value) {\r\n            setValueAndText(null);\r\n          }\r\n          else {\r\n            setValueAndText(pv);\r\n          }\r\n          setDropdown(false);\r\n        }}>{pv.text}</DropdownButton>) }\r\n      </Dropdown>\r\n    </DropdownWrap>\r\n    { name && valueAndText?.value && <IdInput key={valueAndText.value} name={name} value={valueAndText.value} /> }\r\n  </Wrap>\r\n}\r\n", "import { LoaderFunction } from \"@remix-run/node\";\r\nimport { Form, useSubmit } from \"@remix-run/react\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\"\r\nimport SearchIcon from \"~/assets/icons/Search\";\r\nimport { styles } from \"~/constants/styles\";\r\nimport { useLangs } from \"~/contexts/langsContext\";\r\n\r\ninterface SearchBarProps {\r\n  defaultValue?: string,\r\n}\r\n\r\nconst SearchBarWrap = styled.div`\r\n  height: 3.25rem;\r\n  box-shadow: ${styles.shadows[1]};\r\n  background-color: ${styles.colors.white};\r\n  border-radius: 0.375rem;\r\n  display: flex;\r\n  position: relative;\r\n  align-items: stretch;\r\n  justify-content: stretch;\r\n  gap: 0.9rem;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  padding: 0.5rem 1rem;\r\n  & input {\r\n    border: none;\r\n    outline: none;\r\n    font-size: 1.2rem;\r\n    flex-grow: 1;\r\n    flex-shrink: 1;\r\n    min-width: 0px;\r\n  }\r\n`;\r\n\r\nexport const SearchBar: React.FC<SearchBarProps> = ({ defaultValue }: SearchBarProps) => {\r\n\r\n  const { translations: l } = useLangs();\r\n\r\n  return <SearchBarWrap>\r\n    <SearchIcon height={'1rem'} fill={styles.colors.gray[90]} />\r\n    <input placeholder={l.searchPlaceholder} name='searchTerm' type='text' defaultValue={defaultValue} />\r\n  </SearchBarWrap>\r\n}", "import { Form } from \"@remix-run/react\"\r\nimport { Transition } from \"@remix-run/react/transition\"\r\nimport React, { useState } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport AnglesRightIcon from \"~/assets/icons/AnglesRight\"\r\nimport { styles } from \"~/constants/styles\"\r\nimport { AuthActionData } from \"~/routes/authenticate/login\"\r\nimport { isValidEmail, isValidPhone } from \"~/utils/forms\"\r\nimport { TextInput } from \"../inputs/TextInput\"\r\nimport { MainButtonBtn } from \"../place/place-summary\"\r\nimport { ErrorLabel } from \"../profile/account-summary\"\r\nimport { AuthWrap, FieldSet, SubmitButton } from \"./login\"\r\n\r\ninterface Props {\r\n  a?: AuthActionData,\r\n  searchParams: URLSearchParams,\r\n  setSearchParams: (data: string) => void,\r\n  t: Transition\r\n}\r\n\r\nexport const PwdWarn = styled.p`\r\n  margin: 0;\r\n  color: ${styles.colors.busy};\r\n  font-size: 0.875rem;\r\n`;\r\nexport const PwdInfo = styled.p`\r\n  margin: 0;\r\n  color: ${styles.colors.black};\r\n  font-size: 0.875rem;\r\n`;\r\nconst ConditionsText = styled.p`\r\n  margin: 0;\r\n  color: ${styles.colors.black};\r\n  font-size: 0.8125rem;\r\n`;\r\n\r\nexport const Bar = styled.div<{ width: number }>`\r\n  width: ${props => props.width}%;\r\n  height: 6px;\r\n  min-width: 6px;\r\n  border-radius: 3px;\r\n  background-color: ${props => (\r\n    props.width < 25 ? styles.colors.busy : props.width < 50 ? styles.colors.warn :\r\n    props.width < 75 ? styles.colors.primary : styles.colors.free\r\n  )};\r\n`;\r\nexport const BarBack = styled.div`\r\n  width: 100%;\r\n  background-color: ${styles.colors.gray[70]};\r\n  height: 6px;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst RelativeWrap = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nconst ItB = (b: boolean) => b ? 1 : 0;\r\n\r\nexport const checkPasswordStrength = (pwd: string) => {\r\n  const specialChar = /[!-\\/]|[:-@]|[\\[-`]|[{-~]/.test(pwd);\r\n  const number = /[0-9]/.test(pwd);\r\n  const lowerCase = /[a-z]/.test(pwd);\r\n  const upperCase = /[A-Z]/.test(pwd);\r\n  const length = Math.min(pwd.length, 12) / 2;\r\n  // max is 21\r\n  return ItB(specialChar) * 2 + ItB(number) * 2 + ItB(lowerCase) + ItB(upperCase) + length;\r\n}\r\n\r\nexport const RegisterComponent: React.FC<Props> = ({ a, searchParams, setSearchParams, t }) => {\r\n\r\n  React.useEffect(() => {\r\n    if (a?.fields?.redirectTo) {\r\n      setSearchParams(a?.fields?.redirectTo);\r\n    }\r\n  }, [a?.fields?.redirectTo]);\r\n\r\n  const [ pwd, setPwd ] = useState('');\r\n  const [ cpwd, setCPwd ] = useState('');\r\n\r\n  const s = Math.max(checkPasswordStrength(pwd), checkPasswordStrength(cpwd));\r\n\r\n  const pwdString = (\r\n    s <= 3 ? 'Very weak' : s <= 6 ? 'Weak' : s <= 9 ? 'Moderate' :\r\n    s < 12 ? 'Strong' : 'Very Strong'\r\n  )\r\n\r\n  const [ validEmail, setValidEmail ] = useState(true);\r\n  const [ validPhone, setValidPhone ] = useState(true);\r\n\r\n  return <AuthWrap>\r\n  <Form method='post' action='/authenticate/register'>\r\n    <FieldSet disabled={t.state === 'submitting'}>\r\n      <input hidden={true} name='redirectTo' defaultValue={searchParams.get('redirectTo') ?? undefined} />\r\n      <TextInput title={'Username'} name='username' defaultValue={a?.fields?.username ?? ''} />\r\n      <TextInput setValue={setPwd} title={'Password'} password={true} name='password' defaultValue={a?.fields?.password ?? ''} />\r\n      <TextInput setValue={setCPwd} title={'Confirm Password'} password={true} name='confirmPassword' defaultValue={a?.fields?.password ?? ''} />\r\n      <BarBack><Bar width={s / 12 * 100}></Bar></BarBack>\r\n      { s > 0 && pwd == cpwd && <PwdInfo>Your password is <strong>{pwdString}</strong></PwdInfo> }\r\n      { pwd.length == 0 && cpwd.length == 0 && <PwdInfo>Choose a strong password.</PwdInfo> }\r\n      { pwd != cpwd && <PwdWarn>Your passwords don't match.</PwdWarn> }\r\n      <TextInput title={'First Name'} name='firstName' defaultValue={a?.fields?.firstName ?? ''} />\r\n      <TextInput title={'Last Name'} name='lastName' defaultValue={a?.fields?.lastName ?? ''} />\r\n      <RelativeWrap>\r\n        <TextInput setValue={(s) => {setValidEmail(isValidEmail(s))}} title={'Email'} name='email' defaultValue={a?.fields?.email ?? ''} />\r\n        { !validEmail && <ErrorLabel>Invalid email</ErrorLabel> }\r\n      </RelativeWrap>\r\n      <RelativeWrap>\r\n        <TextInput setValue={(s) => {setValidPhone(isValidPhone(s))}} title={'Phone Number'} name='phone' defaultValue={a?.fields?.phone ?? ''} />\r\n        { !validPhone && <ErrorLabel>Invalid phone</ErrorLabel> }\r\n      </RelativeWrap>\r\n      <ConditionsText>By creating an account, you agree with us sending you necessary email corespondence. (Password resets, confirmation emails, etc.)</ConditionsText>\r\n      <ConditionsText>Your details (name, email, phone) may be shared with those places where you make reservations.</ConditionsText>\r\n      <MainButtonBtn disabled={!validEmail || !validPhone} onClick={(e) => {\r\n        if (!validEmail || !validPhone) {\r\n          e.preventDefault();\r\n        }\r\n      }}>Create Account<AnglesRightIcon height={'1.5rem'} /></MainButtonBtn>\r\n      { a && a.formError && <p>\r\n        {a.formError}\r\n      </p> }\r\n    </FieldSet>\r\n  </Form>\r\n</AuthWrap>\r\n}", "import { Place, Reservable, Reservation, User } from \"@prisma/client\"\r\nimport { Form, Link, useSubmit } from \"@remix-run/react\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { styles } from \"~/constants/styles\";\r\nimport { ReservationStatus } from \"~/types/types\"\r\nimport { isValidEmail, isValidPhone } from \"~/utils/forms\";\r\nimport { Button } from \"../button\";\r\nimport { IdInput } from \"../inputs/ObjectInput\";\r\nimport { TextInput } from \"../inputs/TextInput\";\r\nimport { SecondaryButton, SecondaryButtonBtn } from \"../place/place-summary\";\r\n\r\ninterface AccountSummaryProps {\r\n  user: User | null,\r\n  editing: boolean\r\n}\r\n\r\nconst Wrap = styled.div`\r\n  background-color: ${styles.colors.gray[5]};\r\n  width: 100%;\r\n`;\r\n\r\nconst InnerWrap = styled.div`\r\n  display: flex;\r\n  gap: 3rem;\r\n  padding: 2rem 1rem;\r\n  max-width: 968px;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  flex-direction: column;\r\n  justify-content: stretch;\r\n  @media (min-width: 800px) {\r\n    flex-direction: row;\r\n    align-items: flex-start;\r\n  }\r\n`;\r\n\r\nconst Photo = styled.div`\r\n  height: 9rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-weight: bold;\r\n  font-size: 2rem;\r\n  width: 9rem;\r\n  flex-shrink: 0;\r\n  border-radius: 100%;\r\n  background-color: ${styles.colors.gray[20]};\r\n`;\r\n\r\nconst SectionTitle = styled.p`\r\n  font-weight: bold;\r\n  font-size: 0.8125rem;\r\n  margin: 0;\r\n  color: ${styles.colors.action};\r\n`;\r\n\r\nconst Value = styled.p`\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  margin-top: 0.2rem;\r\n  margin-bottom: 0;\r\n  line-height: 2.3rem;\r\n`;\r\n\r\nconst InfoWrap = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  max-width: 100%;\r\n  column-gap: 1rem;\r\n  row-gap: 1.2rem;\r\n  & > div {\r\n    width: 100%;\r\n    max-width: 100%;\r\n    flex-shrink: 1;\r\n    position: relative;\r\n    overflow: hidden;\r\n    @media (min-width: 500px) {\r\n      width: 45%; \r\n    }\r\n  }\r\n  & > div > p {\r\n    max-width: 100%;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n  }\r\n`;\r\n\r\nconst StretchForm = styled(Form)`\r\n  flex-grow: 1;\r\n  max-width: 100%;\r\n`;\r\n\r\nconst HeaderWrap = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst Title = styled.p`\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  margin: 0;\r\n`;\r\n\r\nconst EditButton = styled(SecondaryButton)`\r\n  padding: 0.5rem;\r\n  font-size: 0.8rem;\r\n  background-color: ${styles.colors.white};\r\n  width: auto !important;\r\n`;\r\n\r\nconst EditButtonBtn = styled(SecondaryButtonBtn)`\r\n  padding: 0.5rem;\r\n  font-size: 0.8rem;\r\n  background-color: ${styles.colors.white};\r\n  width: auto !important;\r\n`;\r\n\r\nexport const ErrorLabel = styled.p`\r\n  position: absolute;\r\n  margin: 0;\r\n  top: 0;\r\n  right: 0;\r\n  border-radius: 0.25rem;\r\n  font-size: 0.6rem;\r\n  background-color: ${styles.colors.busy};\r\n  font-weight: 500;\r\n  color: ${styles.colors.white};\r\n  padding: 0.1rem 0.5rem;\r\n`;\r\n\r\nexport const AccountSummary: React.FC<AccountSummaryProps> = ({ editing, user }) => {\r\n\r\n  const form = React.useRef<HTMLFormElement>(null);\r\n  const submit = useSubmit();\r\n  const [ validEmail, setValidEmail ] = useState(true);\r\n  const [ validPhone, setValidPhone ] = useState(true);\r\n\r\n  return user && <Wrap><InnerWrap>\r\n    <Photo>{user.username[0].toUpperCase()}</Photo>\r\n    <StretchForm method='post' ref={form}>\r\n      <HeaderWrap>\r\n        <Title>Personal Information</Title>\r\n        { !editing ? <EditButton inSearch={false} to={'/profile/edit'}>Edit</EditButton> : <EditButtonBtn disabled={!validEmail || !validPhone} onClick={(e) => {\r\n          e.preventDefault();\r\n          if (validEmail && validPhone) {\r\n            submit(form.current, { replace: true })\r\n          }\r\n        }}>{\r\n          !editing ? 'Edit' : 'Save'\r\n        }</EditButtonBtn>}\r\n      </HeaderWrap>\r\n      <InfoWrap>\r\n          { editing && <IdInput name={'id'} value={user?.id} /> }\r\n          <div>\r\n            <SectionTitle>First Name</SectionTitle>\r\n            { editing ? <TextInput name={'firstName'} defaultValue={user?.firstName} /> : <Value>{user?.firstName}</Value> }\r\n          </div>\r\n          <div>\r\n            <SectionTitle>Last Name</SectionTitle>\r\n            { editing ? <TextInput name={'lastName'} defaultValue={user?.lastName} /> : <Value>{user?.lastName}</Value> }\r\n          </div>\r\n          <div>\r\n            <SectionTitle>Email</SectionTitle>\r\n            { editing ? <TextInput setValue={(s) => { setValidEmail(isValidEmail(s)) }} name={'email'} defaultValue={user?.email} /> : <Value>{user?.email}</Value> }\r\n            { editing && !validEmail && <ErrorLabel>Invalid email</ErrorLabel> }\r\n          </div>\r\n          <div>\r\n            <SectionTitle>Phone</SectionTitle>\r\n            { editing ? <TextInput setValue={(s) => { setValidPhone(isValidPhone(s)); console.log(isValidPhone(s)) }} name={'phone'} defaultValue={user?.phone} /> : <Value>{user?.phone}</Value> }\r\n            { editing && !validPhone && <ErrorLabel>Invalid phone</ErrorLabel> }\r\n          </div>\r\n          <div>\r\n            <SectionTitle>Username</SectionTitle>\r\n            { editing && false ? <TextInput name={'username'} defaultValue={user?.username ?? ''} /> : <Value>{user?.username}</Value> }\r\n          </div>\r\n          <div>\r\n            <SectionTitle>Reserving since</SectionTitle>\r\n            <Value>{new Date(user?.createdAt).toDateString()}</Value>\r\n          </div>\r\n      </InfoWrap>\r\n    </StretchForm>\r\n  </InnerWrap></Wrap>\r\n}", "import styled from \"styled-components\"\r\nimport BaseballIcon from \"~/assets/icons/Baseball\";\r\nimport BowlingBallIcon from \"~/assets/icons/BowlingBall\";\r\nimport DumbellIcon from \"~/assets/icons/Dumbell\";\r\nimport FireFlameCurvedIcon from \"~/assets/icons/FireFlameCurved\";\r\nimport FutbolIcon from \"~/assets/icons/Futbol\";\r\nimport GolfBallTeeIcon from \"~/assets/icons/GolfBallTee\";\r\nimport HeartIcon from \"~/assets/icons/Heart\";\r\nimport PersonSwimmingIcon from \"~/assets/icons/PersonSwimming\";\r\nimport SpaIcon from \"~/assets/icons/Spa\";\r\nimport TableTennisPaddleBallIcon from \"~/assets/icons/TableTennisPaddleBall\";\r\nimport VolleyballIcon from \"~/assets/icons/Volleyball\";\r\nimport WeightHangingIcon from \"~/assets/icons/WeightHanging\";\r\nimport { styles } from \"~/constants/styles\";\r\n\r\nconst Wrap = styled.div<{ invertedColors?: boolean }>`\r\n  display: flex;\r\n  gap: 0.25rem;\r\n  justify-content: center;\r\n  position: relative;\r\n  background-color: ${props => props.invertedColors ? styles.colors.white : styles.colors.primary};\r\n  padding: 1rem 0rem;\r\n  max-width: 968px;\r\n  width: 66vw;\r\n  overflow: hidden;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Overlay = styled.div<{ invertedColors?: boolean }>`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  background-image: ${props => props.invertedColors ? (\r\n    `linear-gradient(to right, ${styles.colors.white}FF, ${styles.colors.white}00, ${styles.colors.white}FF)`\r\n  ) : (\r\n    `linear-gradient(to right, ${styles.colors.primary}FF, ${styles.colors.primary}00, ${styles.colors.primary}FF)`\r\n  )};\r\n`;\r\n\r\nconst ListItem = styled.div`\r\n  display: flex;\r\n  gap: 0.25rem;\r\n  &>svg {\r\n    flex-shrink: 0;\r\n  }\r\n`;\r\n\r\ninterface Props {\r\n  invertColors?: boolean\r\n}\r\n\r\nexport const IconRow: React.FC<Props> = ({ invertColors }) => <Wrap invertedColors={invertColors}>\r\n  <Overlay invertedColors={invertColors} />\r\n  {[...Array(4).keys()].map(i => <ListItem key={i}>\r\n    <TableTennisPaddleBallIcon height={'1.64rem'} fill={styles.colors.gray[70]} />\r\n    <FireFlameCurvedIcon height={'1.64rem'} fill={styles.colors.gray[70]} />\r\n    <BowlingBallIcon height={'1.64rem'} fill={styles.colors.gray[70]} />\r\n    <DumbellIcon height={'1.64rem'} fill={styles.colors.gray[70]} />\r\n    <VolleyballIcon height={'1.64rem'} fill={styles.colors.gray[70]} />\r\n    <GolfBallTeeIcon height={'1.64rem'} fill={styles.colors.gray[70]} />\r\n    <SpaIcon height={'1.64rem'} fill={styles.colors.gray[70]} />\r\n    <FutbolIcon height={'1.64rem'} fill={styles.colors.gray[70]} />\r\n    <HeartIcon height={'1.64rem'} fill={styles.colors.gray[70]} />\r\n    <WeightHangingIcon height={'1.64rem'} fill={styles.colors.gray[70]} />\r\n    <BaseballIcon height={'1.64rem'} fill={styles.colors.gray[70]} />\r\n    <PersonSwimmingIcon height={'1.64rem'} fill={styles.colors.gray[70]} />\r\n  </ListItem>)}\r\n</Wrap>", "import { SVGProps } from 'react';\r\nimport { styles } from '~/constants/styles';\r\n\r\nconst BaseballIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    viewBox=\"0 0 512 512\"\r\n    style={{\r\n      height: props.height\r\n    }}\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M429.6 272.9c0-16.26 16.36-16.81 29.99-16.81l2.931 .0029c16.64 0 33.14 2.056 49.2 5.834C511.7 259.9 512 258 512 256c0-141.4-114.6-256-256-256C253.9 0 251.1 .2578 249.9 .3047c3.658 15.51 6.111 31.34 6.111 47.54c0 6-.2813 12.03-.7813 18C254.6 74.19 247.6 80.5 239.3 80.5c-6.091 0-16.03-4.68-16.03-15.97c0-1.733 .7149-7.153 .7149-16.69c0-15.26-2.389-30.18-6.225-44.69C106.9 19.79 19.5 107.3 3.08 218.3c14.44 3.819 29.38 5.79 44.45 5.79c10.07 0 15.59-.811 17.42-.811c6.229 0 16.49 4.657 16.49 15.99c0 16.11-16.13 16.77-29.73 16.77L48.16 256c-16.33 0-32.25-2.445-47.85-6.109C.2578 251.1 0 253.9 0 256c0 141.4 114.6 256 256 256c2.066 0 4.062-.2578 6.117-.3086C258.5 496.2 256 480.4 256 464.2c0-5.688 .25-11.38 .7187-17.03c.6964-8.538 8.287-14.61 16.49-14.61c7.1 0 15.44 6.938 15.44 15.92c0 2.358-.6524 5.88-.6524 15.72c0 15.25 2.383 30.16 6.209 44.66c110.8-16.63 198.2-104.1 214.7-215c-14.55-3.851-29.59-5.871-44.74-5.871c-10.47 0-16.24 .895-18.13 .895C443.3 288.9 429.6 286.5 429.6 272.9zM238.2 128.9c0 27.78-78.3 108.1-108.6 108.1c-8.612 0-16.01-6.963-16.01-15.98c0-6.002 3.394-11.75 9.163-14.49c80.3-38.08 76.21-94.5 99.39-94.5C234.7 112.8 238.2 124.2 238.2 128.9zM397.5 290.6c0 5.965-3.364 11.68-9.131 14.43c-78.82 37.57-75.92 95-98.94 95c-12.58 0-16.01-11.54-16.01-16.03c0-28 78.29-109.4 108.1-109.4C390.8 274.6 397.5 282.3 397.5 290.6z\"\r\n      fill={props.fill ?? styles.colors.black}\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default BaseballIcon;", "import { SVGProps } from 'react';\r\nimport { styles } from '~/constants/styles';\r\n\r\nconst BowlingBallIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    viewBox=\"0 0 512 512\"\r\n    style={{\r\n      height: props.height\r\n    }}\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M256 0C114.6 0 0 114.6 0 256s114.6 256 256 256s256-114.6 256-256S397.4 0 256 0zM144 208c-17.7 0-32-14.25-32-32s14.3-32 32-32s32 14.25 32 32S161.7 208 144 208zM240 80c17.66 0 31.95 14.25 31.95 32s-14.29 32-31.95 32s-32.05-14.25-32.05-32S222.4 80 240 80zM240 240c-17.7 0-32-14.25-32-32s14.3-32 32-32s32 14.25 32 32S257.7 240 240 240z\"\r\n      fill={props.fill ?? styles.colors.black}\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default BowlingBallIcon;", "import { SVGProps } from 'react';\r\nimport { styles } from '~/constants/styles';\r\n\r\nconst DumbellIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    viewBox=\"0 0 640 512\"\r\n    style={{\r\n      height: props.height\r\n    }}\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M104 96h-48C42.75 96 32 106.8 32 120V224C14.33 224 0 238.3 0 256c0 17.67 14.33 32 31.1 32L32 392C32 405.3 42.75 416 56 416h48C117.3 416 128 405.3 128 392v-272C128 106.8 117.3 96 104 96zM456 32h-48C394.8 32 384 42.75 384 56V224H256V56C256 42.75 245.3 32 232 32h-48C170.8 32 160 42.75 160 56v400C160 469.3 170.8 480 184 480h48C245.3 480 256 469.3 256 456V288h128v168c0 13.25 10.75 24 24 24h48c13.25 0 24-10.75 24-24V56C480 42.75 469.3 32 456 32zM608 224V120C608 106.8 597.3 96 584 96h-48C522.8 96 512 106.8 512 120v272c0 13.25 10.75 24 24 24h48c13.25 0 24-10.75 24-24V288c17.67 0 32-14.33 32-32C640 238.3 625.7 224 608 224z\"\r\n      fill={props.fill ?? styles.colors.black}\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default DumbellIcon;", "import { SVGProps } from 'react';\r\nimport { styles } from '~/constants/styles';\r\n\r\nconst FireFlameCurvedIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    viewBox=\"0 0 384 512\"\r\n    style={{\r\n      height: props.height\r\n    }}\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M384 319.1C384 425.9 297.9 512 192 512s-192-86.13-192-192c0-58.67 27.82-106.8 54.57-134.1C69.54 169.3 96 179.8 96 201.5v85.5c0 35.17 27.97 64.5 63.16 64.94C194.9 352.5 224 323.6 224 288c0-88-175.1-96.12-52.15-277.2c13.5-19.72 44.15-10.77 44.15 13.03C215.1 127 384 149.7 384 319.1z\"\r\n      fill={props.fill ?? styles.colors.black}\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default FireFlameCurvedIcon;", "import { SVGProps } from 'react';\r\nimport { styles } from '~/constants/styles';\r\n\r\nconst FutbolIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    viewBox=\"0 0 512 512\"\r\n    style={{\r\n      height: props.height\r\n    }}\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M177.1 228.6L207.9 320h96.5l29.62-91.38L256 172.1L177.1 228.6zM255.1 0C114.6 0 .0001 114.6 .0001 256S114.6 512 256 512s255.1-114.6 255.1-255.1S397.4 0 255.1 0zM416.6 360.9l-85.4-1.297l-25.15 81.59C290.1 445.5 273.4 448 256 448s-34.09-2.523-50.09-6.859L180.8 359.6l-85.4 1.297c-18.12-27.66-29.15-60.27-30.88-95.31L134.3 216.4L106.6 135.6c21.16-26.21 49.09-46.61 81.06-58.84L256 128l68.29-51.22c31.98 12.23 59.9 32.64 81.06 58.84L377.7 216.4l69.78 49.1C445.8 300.6 434.8 333.2 416.6 360.9z\"\r\n      fill={props.fill ?? styles.colors.black}\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default FutbolIcon;", "import { SVGProps } from 'react';\r\nimport { styles } from '~/constants/styles';\r\n\r\nconst GolfBallTeeIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    viewBox=\"0 0 384 512\"\r\n    style={{\r\n      height: props.height\r\n    }}\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M96 399.1c0 17.67 14.33 31.1 32 31.1s32 14.33 32 31.1v48h64v-48c0-17.67 14.33-31.1 32-31.1s32-14.33 32-31.1v-16H96V399.1zM192 .0001c-106 0-192 86.68-192 193.6c0 65.78 32.82 123.5 82.52 158.4h218.1C351.2 317.1 384 259.4 384 193.6C384 86.68 298 .0001 192 .0001zM179 205.1C183 206.9 187.4 208 192 208c17.53 0 31.74-14.33 31.74-31.1c0-4.688-1.111-9.062-2.904-13.07c11.03 5.016 18.77 16.08 18.77 29.07c0 17.67-14.21 31.1-31.74 31.1C194.1 224 184 216.2 179 205.1zM223.7 303.1c-12.88 0-23.86-7.812-28.83-18.93c3.977 1.809 8.316 2.93 12.96 2.93c17.53 0 31.74-14.33 31.74-31.1c0-4.688-1.109-9.062-2.904-13.07c11.03 5.016 18.77 16.08 18.77 29.07C255.5 289.7 241.3 303.1 223.7 303.1zM287.2 240c-12.88 0-23.86-7.812-28.83-18.93c3.977 1.809 8.316 2.93 12.96 2.93c17.53 0 31.73-14.33 31.73-31.1c0-4.688-1.109-9.062-2.902-13.07C311.2 183.9 318.9 195 318.9 208C318.9 225.7 304.7 240 287.2 240z\"\r\n      fill={props.fill ?? styles.colors.black}\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default GolfBallTeeIcon;", "import { SVGProps } from 'react';\r\nimport { styles } from '~/constants/styles';\r\n\r\nconst HeartIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    viewBox=\"0 0 512 512\"\r\n    style={{\r\n      height: props.height\r\n    }}\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M0 190.9V185.1C0 115.2 50.52 55.58 119.4 44.1C164.1 36.51 211.4 51.37 244 84.02L256 96L267.1 84.02C300.6 51.37 347 36.51 392.6 44.1C461.5 55.58 512 115.2 512 185.1V190.9C512 232.4 494.8 272.1 464.4 300.4L283.7 469.1C276.2 476.1 266.3 480 256 480C245.7 480 235.8 476.1 228.3 469.1L47.59 300.4C17.23 272.1 .0003 232.4 .0003 190.9L0 190.9z\"\r\n      fill={props.fill ?? styles.colors.black}\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default HeartIcon;", "import { SVGProps } from 'react';\r\nimport { styles } from '~/constants/styles';\r\n\r\nconst PersonSwimmingIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    viewBox=\"0 0 576 512\"\r\n    style={{\r\n      height: props.height\r\n    }}\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M192.4 320c63.38 0 54.09-39.67 95.33-40.02c42.54 .3672 31.81 40.02 95.91 40.02c39.27 0 55.72-18.41 62.21-24.83l-140.4-116.1c3.292-1.689 31.66-18.2 75.25-18.2c12.57 0 25.18 1.397 37.53 4.21l38.59 8.844c2.412 .5592 4.824 .8272 7.2 .8272c15.91 0 31.96-12.81 31.96-32.04c0-14.58-10.03-27.77-24.84-31.16l-38.59-8.844c-17.06-3.904-34.46-5.837-51.81-5.837c-120.1 0-177.4 85.87-178.1 88.02L179.1 213.3C158.1 241.3 147.4 273.8 145 307.7C157.5 315.4 174.3 320 192.4 320zM576 397c0-15.14-10.82-28.59-26.25-31.42c-48.52-8.888-45.5-29.48-69.6-29.48c-25.02 0-31.19 31.79-96.18 31.79c-48.59 0-72.72-22.06-73.38-22.62c-6.141-6.157-14.26-9.188-22.42-9.188c-24.75 0-31.59 31.81-96.2 31.81c-48.59 0-72.69-22.03-73.41-22.59c-6.125-6.157-14.3-9.245-22.46-9.245c-8.072 0-16.12 3.026-22.38 8.901c-29.01 26.25-73.75 12.54-73.75 52.08c0 16.08 12.77 32.07 31.71 32.07c9.77 0 39.65-7.34 64.26-21.84C115.5 418.8 147.4 431.1 192 431.1s76.5-13.12 96-24.66c19.53 11.53 51.47 24.59 96 24.59c44.59 0 76.56-13.09 96.06-24.62c24.71 14.57 54.74 21.83 64.24 21.83C563.2 429.1 576 413.3 576 397zM95.1 224c35.35 0 64-28.65 64-64c0-35.35-28.65-64-64-64s-64 28.65-64 64C31.1 195.3 60.65 224 95.1 224z\"\r\n      fill={props.fill ?? styles.colors.black}\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default PersonSwimmingIcon;", "import { SVGProps } from 'react';\r\nimport { styles } from '~/constants/styles';\r\n\r\nconst SpaIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    viewBox=\"0 0 576 512\"\r\n    style={{\r\n      height: props.height\r\n    }}\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M568.3 192c-29 .125-135 6.124-213.9 82.1C321.2 304.7 301 338.3 288 369.9c-13-31.63-33.25-65.25-66.38-94.87C142.8 198.2 36.75 192.2 7.75 192C3.375 192 0 195.4 0 199.9c.25 27.88 7.125 126.2 88.75 199.3C172.8 481 256 479.1 288 479.1s115.2 1.025 199.3-80.85C568.9 326 575.8 227.7 576 199.9C576 195.4 572.6 192 568.3 192zM288 302.6c12.75-18.87 27.62-35.75 44.13-50.5c19-18.62 39.5-33.37 60.25-45.25c-16.5-70.5-51.75-133-96.75-172.3c-4.125-3.5-11-3.5-15.12 0c-45 39.25-80.25 101.6-96.75 172.1c20.37 11.75 40.5 26.12 59.25 44.37C260 266.4 275.1 283.7 288 302.6z\"\r\n      fill={props.fill ?? styles.colors.black}\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default SpaIcon;", "import { SVGProps } from 'react';\r\nimport { styles } from '~/constants/styles';\r\n\r\nconst TableTennisPaddleBallIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    viewBox=\"0 0 512 512\"\r\n    style={{\r\n      height: props.height\r\n    }}\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M416 287.1c27.99 0 53.68 9.254 74.76 24.51c14.03-29.82 21.06-62.13 21.06-94.43c0-103.1-79.37-218.1-216.5-218.1c-59.94 0-120.4 23.71-165.5 68.95l-54.66 54.8C73.61 125.3 72.58 126.1 71.14 128.5l230.7 230.7C322.8 317.2 365.8 287.1 416 287.1zM290.3 392.1l-238.6-238.6C38.74 176.2 32.3 199.4 32.3 221.9c0 30.53 11.71 59.94 34.29 82.58l36.6 36.7l-92.38 81.32c-7.177 6.255-10.81 15.02-10.81 23.81c0 8.027 3.032 16.07 9.164 22.24l34.05 34.2c6.145 6.16 14.16 9.205 22.15 9.205c8.749 0 17.47-3.649 23.7-10.86l81.03-92.85l35.95 36.04c23.62 23.68 54.41 35.23 85.37 35.23c4.532 0 9.205-.2677 13.72-.7597c-10.56-18.61-17.12-39.89-17.12-62.81C288 408.1 288.1 400.5 290.3 392.1zM415.1 320c-52.99 0-95.99 42.1-95.99 95.1c0 52.1 42.99 95.99 95.99 95.99c52.1 0 95.99-42.1 95.99-95.99C511.1 363 468.1 320 415.1 320z\"\r\n      fill={props.fill ?? styles.colors.black}\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default TableTennisPaddleBallIcon;", "import { SVGProps } from 'react';\r\nimport { styles } from '~/constants/styles';\r\n\r\nconst VolleyballIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    viewBox=\"0 0 512 512\"\r\n    style={{\r\n      height: props.height\r\n    }}\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M200.3 106C185.4 80.24 165.2 53.9 137.4 29.26C55.75 72.05 0 157.4 0 256c0 21.33 2.898 41.94 7.814 61.75C53.59 182.1 155.1 124.9 200.3 106zM381.7 281.1c1.24-9.223 2.414-22.08 2.414-37.65c0-59.1-16.93-157.2-111.5-242.6C267.1 .4896 261.6 0 256 0C225.5 0 196.5 5.591 169.4 15.36c93.83 90.15 102.6 198.5 102.8 231.7C287.8 255.9 327.3 275.1 381.7 281.1zM240.1 246.5C239.1 228.5 236.9 184.7 214.9 134.6C173.6 151.6 60.4 211.7 26.67 369.2c15.66 31.64 37.52 59.66 64.22 82.23C122 325.1 211.5 263.3 240.1 246.5zM326.5 10.07c74.79 84.9 89.5 175.9 89.5 234c0 15.45-1.042 28.56-2.27 38.61l.5501 .0005c29.54 0 62.2-4.325 97.16-15.99C511.6 263.1 512 259.6 512 256C512 139.1 433.6 40.72 326.5 10.07zM255.7 274.5c-15.43 9.086-51.89 33.63-84.32 77.86c26.34 20.33 93.51 63.27 189.5 63.27c32.83 0 69.02-5.021 108.1-17.69c19.08-28.59 32.41-61.34 38.71-96.47C474.5 311.1 443 315 414.4 315C334.6 315 276.5 286.3 255.7 274.5zM153.1 379.3c-14.91 25.71-27.62 56.33-35.03 92.72C158.6 497.2 205.5 512 256 512c69 0 131.5-27.43 177.5-71.82c-25.42 5.105-49.71 7.668-72.38 7.668C258.6 447.8 185.5 402.1 153.1 379.3z\"\r\n      fill={props.fill ?? styles.colors.black}\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default VolleyballIcon;", "import { SVGProps } from 'react';\r\nimport { styles } from '~/constants/styles';\r\n\r\nconst WeightHangingIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    viewBox=\"0 0 512 512\"\r\n    style={{\r\n      height: props.height\r\n    }}\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M510.3 445.9L437.3 153.8C433.5 138.5 420.8 128 406.4 128H346.1c3.625-9.1 5.875-20.75 5.875-32c0-53-42.1-96-96-96S159.1 43 159.1 96c0 11.25 2.25 22 5.875 32H105.6c-14.38 0-27.13 10.5-30.88 25.75l-73.01 292.1C-6.641 479.1 16.36 512 47.99 512h416C495.6 512 518.6 479.1 510.3 445.9zM256 128C238.4 128 223.1 113.6 223.1 96S238.4 64 256 64c17.63 0 32 14.38 32 32S273.6 128 256 128z\"\r\n      fill={props.fill ?? styles.colors.black}\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default WeightHangingIcon;", "import { Form, useActionData, useSearchParams, useTransition } from '@remix-run/react';\r\nimport { ActionFunction, json } from '@remix-run/server-runtime';\r\nimport React from 'react';\r\nimport { TextInput } from '~/components/inputs/TextInput';\r\nimport { sendEmailConfirmationEmail } from '~/utils/emails.server';\r\nimport { getBaseUrl, getFormEssentials } from '~/utils/forms';\r\nimport { createUserSession, login, register } from '~/utils/session.server';\r\nimport { AuthActionData } from './login';\r\n\r\nconst badRequest = (data: AuthActionData) => json(data, { status: 400 });\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  \r\n  const { getFormItem } = await getFormEssentials(request);\r\n\r\n  // Should validate this\r\n  const redirectTo = getFormItem('redirectTo');\r\n  const username = getFormItem('username');\r\n  const password = getFormItem('password');\r\n  const phone = getFormItem('phone');\r\n  const email = getFormItem('email');\r\n  const firstName = getFormItem('firstName');\r\n  const lastName = getFormItem('lastName');\r\n\r\n  const { userId, admin } = await register({\r\n    username,\r\n    password,\r\n    phone,\r\n    email,\r\n    firstName,\r\n    lastName,\r\n  }) ?? { userId: null, admin: false };\r\n\r\n  if (userId == null || username == null) {\r\n    return badRequest({\r\n      fields: { username: username ?? '', password: password ?? '', redirectTo: redirectTo ?? '' },\r\n      formError: 'Something is wrong.'\r\n    });\r\n  }\r\n\r\n  const baseUrl = getBaseUrl(request);\r\n\r\n  await sendEmailConfirmationEmail(email, baseUrl);\r\n\r\n  return createUserSession(username, admin, false, '/verifyEmail');\r\n}", "import sgMail from '@sendgrid/mail';\r\nimport { Place } from \"~/models/place.server\";\r\nimport { signMessage } from './signing.server';\r\n\r\nif (process.env.SENDGRID_API_KEY) {\r\n  sgMail.setApiKey(process.env.SENDGRID_API_KEY);\r\n}\r\n\r\nexport const sendEmailConfirmationEmail = async (sendToAddress: string, baseUrl: string) => {\r\n  let address = 'pavlik.pocho@gmail.com';\r\n  const signature = signMessage(sendToAddress);\r\n  if (process.env.NODE_ENV === 'production') {\r\n    address = sendToAddress;\r\n  }\r\n  const msg = {\r\n    to: address,\r\n    from: {\r\n      name: 'Reserveroo Security',\r\n      email: 'security@reserveroo.com'\r\n    },\r\n    subject: 'Reserveroo Email Verification',\r\n    text: `Please click the following link: ${baseUrl}/verifyEmail?verifyToken=${sendToAddress}:${signature}`,\r\n    html: `<p>Please click the following link: ${baseUrl}/verifyEmail?verifyToken=${sendToAddress}:${signature}</p>`\r\n  }\r\n  await sgMail.send(msg);\r\n}\r\n\r\nexport const sendPwdResetEmail = async (sendToAddress: string, baseUrl: string, username: string) => {\r\n  let address = 'pavlik.pocho@gmail.com';\r\n  const signature = signMessage(username);\r\n  if (process.env.NODE_ENV === 'production') {\r\n    address = sendToAddress;\r\n  }\r\n  const msg = {\r\n    to: address,\r\n    from: {\r\n      name: 'Reserveroo Security',\r\n      email: 'security@reserveroo.com'\r\n    },\r\n    subject: 'Reserveroo Password Reset',\r\n    text: `Please click the following link: ${baseUrl}/pwd/reset?token=${username}:${signature}`,\r\n    html: `<p>Please click the following link: ${baseUrl}/pwd/reset?token=${username}:${signature}</p>`\r\n  }\r\n  await sgMail.send(msg);\r\n}\r\n\r\nexport const sendCreationEmail = async (sendToAddress: string) => {\r\n  if (sendToAddress == '') return;\r\n  let address = 'pavlik.pocho@gmail.com';\r\n  if (process.env.NODE_ENV === 'production') {\r\n    address = sendToAddress;\r\n  }\r\n  const msg = {\r\n    to: address,\r\n    from: {\r\n      name: 'Reserveroo Info',\r\n      email: 'info@reserveroo.com'\r\n    },\r\n    subject: `Reservation created`,\r\n    text: `Thanks for making a reservation. We will let you know if your chosen time is free ASAP.`,\r\n    html: `<p>Thanks for making a reservation. We will let you know if your chosen time is free ASAP.</p>`\r\n  }\r\n  await sgMail.send(msg);\r\n}\r\n\r\nexport const sendCancellationEmail = async () => {\r\n  \r\n}\r\n\r\nexport const sendStatusUpdateEmail = async (sendToAddress: string, status: 'confirm_preferred' | 'unavailable' | 'confirm_backup', place: Place, start: Date) => {\r\n  if (sendToAddress == '') return;\r\n  let address = 'pavlik.pocho@gmail.com';\r\n  if (process.env.NODE_ENV === 'production') {\r\n    address = sendToAddress;\r\n  }\r\n  const msg = {\r\n    to: address,\r\n    from: {\r\n      name: 'Reserveroo Info',\r\n      email: 'info@reserveroo.com'\r\n    },\r\n    subject: status == 'confirm_preferred' ? `Reservation Confirmed` : status == 'confirm_backup' ? `Backup Confirmed` : 'Reservation Time Unavailable',\r\n    text: status == 'confirm_preferred' ? (\r\n      `Your time is available and confirmed. The fun is looking forward to you!`\r\n    ) : status == 'confirm_backup' ? (\r\n      `Your preffered slot was not available, but your backup was free! The fun is looking forward to you!`\r\n    ) : status == 'unavailable' ? (\r\n      `Unfortunately, your selected time(s) wasn't/weren't available. Feel free to go for another time though!`\r\n    ) : '',\r\n    html: status == 'confirm_preferred' ? (\r\n      `<p>Your time is available and confirmed. The fun is looking forward to you!</p>`\r\n    ) : status == 'confirm_backup' ? (\r\n      `<p>Your preffered slot was not available, but your backup was free! The fun is looking forward to you!</p>`\r\n    ) : status == 'unavailable' ? (\r\n      `<p>Unfortunately, your selected time(s) wasn't/weren't available. Feel free to go for another time though!</p>`\r\n    ) : '',\r\n  }\r\n  await sgMail.send(msg);\r\n}", "import { createSign, createVerify } from 'crypto';\r\n\r\nvar publicKey = process.env.SIGNING_PUBLIC_KEY ?? '';\r\nwhile (publicKey.includes(\"_\")) {\r\n  publicKey = publicKey.replace(\"_\", \"\\n\")\r\n}\r\nwhile (publicKey.includes(\",\")) {\r\n  publicKey = publicKey.replace(\",\", \" \")\r\n}\r\nvar privateKey = process.env.SIGNING_PRIVATE_KEY ?? '';\r\nwhile (privateKey.includes(\"_\")) {\r\n  privateKey = privateKey.replace(\"_\", \"\\n\")\r\n}\r\nwhile (privateKey.includes(\",\")) {\r\n  privateKey = privateKey.replace(\",\", \" \")\r\n}\r\n\r\nexport const signMessage = (message: string) => {\r\n  if (privateKey && publicKey) {\r\n    const signer = createSign('rsa-sha256');\r\n    signer.update(message);\r\n    return signer.sign(privateKey, 'hex');\r\n  }\r\n  throw Error(\"No public or private key for signing\");\r\n}\r\n\r\nexport const verifyMessage = (message: string, signature: string) => {\r\n  if (privateKey && publicKey) {\r\n    const verifier = createVerify('rsa-sha256');\r\n    verifier.update(message);\r\n    return verifier.verify(publicKey, signature, 'hex');\r\n  }\r\n  throw Error(\"No public or private key for signing\");\r\n}\r\n", "import { Form, Link, useActionData, useSearchParams, useSubmit, useTransition } from '@remix-run/react';\r\nimport { ActionFunction, json } from '@remix-run/server-runtime';\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button } from '~/components/button';\r\nimport { IdInput } from '~/components/inputs/ObjectInput';\r\nimport { TextInput } from '~/components/inputs/TextInput';\r\nimport { styles } from '~/constants/styles';\r\nimport { sendEmailConfirmationEmail } from '~/utils/emails.server';\r\nimport { badRequest, getBaseUrl } from '~/utils/forms';\r\nimport { createUserSession, login } from '~/utils/session.server';\r\nimport { signMessage } from '~/utils/signing.server';\r\n\r\nexport type AuthActionData = {\r\n  formError?: string;\r\n  fieldErrors?: {\r\n    username: string | undefined;\r\n    password: string | undefined;\r\n  };\r\n  fields?: {\r\n    username: string;\r\n    password: string;\r\n    redirectTo: string;\r\n    firstName?: string;\r\n    lastName?: string;\r\n    email?: string;\r\n    phone?: string;\r\n  };\r\n};\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const form = await request.formData();\r\n\r\n  const username = form.get('username')?.toString();\r\n  const password = form.get('password')?.toString();\r\n\r\n  const baseUrl = getBaseUrl(request);\r\n\r\n  // Should validate this\r\n  const redirectTo = form.get('redirectTo')?.toString();\r\n\r\n  const { userId, admin, verifiedEmail, email } = await login({\r\n    username: username ?? '',\r\n    password: password ?? ''\r\n  }) ?? { userId: null, admin: false };\r\n\r\n  if (userId == null || username == null) {\r\n    return badRequest({\r\n      fields: { username: username ?? '', password: password ?? '', redirectTo: redirectTo ?? '' },\r\n      formError: 'Something is wrong.'\r\n    });\r\n  }\r\n\r\n  if (!verifiedEmail) {\r\n    await sendEmailConfirmationEmail(email, baseUrl);\r\n  }\r\n\r\n  return createUserSession(username, admin, verifiedEmail, redirectTo ?? '/');\r\n}", "import { Form, useActionData, useLoaderData, useSearchParams, useSubmit } from '@remix-run/react'\r\nimport { ActionFunction, json, LoaderFunction, redirect } from '@remix-run/server-runtime'\r\nimport React from 'react'\r\nimport { FaAngleDoubleRight } from 'react-icons/fa'\r\nimport styled from 'styled-components'\r\nimport { AuthWrap } from '~/components/auth/login'\r\nimport { IconRow } from '~/components/icon-row'\r\nimport { IdInput } from '~/components/inputs/ObjectInput'\r\nimport { MainButtonBtn } from '~/components/place/place-summary'\r\nimport { getUserByUsername, getUserEmailToResend, verifyUserEmail } from '~/models/user.server'\r\nimport { sendEmailConfirmationEmail } from '~/utils/emails.server'\r\nimport { badRequest, getBaseUrl, getFormEssentials } from '~/utils/forms'\r\nimport { createUserSession, requireUsernameToVerify } from '~/utils/session.server'\r\nimport { verifyMessage } from '~/utils/signing.server'\r\nimport { Title } from './authenticate'\r\n\r\ninterface LoaderData {\r\n  usernameToVerify: string\r\n};\r\n\r\ninterface ActionData {\r\n  msg: string\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const { usernameToVerify } = await requireUsernameToVerify(request);\r\n  return json({ usernameToVerify });\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const { getFormItem } = await getFormEssentials(request);\r\n  const usernameToVerify = getFormItem('usernameToVerify');\r\n  const user = await getUserEmailToResend({ username: usernameToVerify });\r\n  const token = getFormItem('token');\r\n\r\n  if (token) {\r\n    const goodEmail = verifyMessage(token.split(':')[0], token.split(':')[1]);\r\n    if (!goodEmail) {\r\n      return badRequest({ msg: \"Email verification failed.\" });\r\n    }\r\n    const user = await verifyUserEmail(token.split(':')[0]);\r\n    return createUserSession(user.username, user.admin, true, '/doneVerifyingEmail');\r\n  }\r\n  else if (!!usernameToVerify && !!user && user.verifyEmailTriesLeft > 0) {\r\n    const baseUrl = getBaseUrl(request);\r\n    await sendEmailConfirmationEmail(user.email, baseUrl);\r\n    return json({ msg: \"Another email sent.\" });\r\n  }\r\n  else {\r\n    return badRequest({ msg: \"Looks like you're out of verification emails.\" });\r\n  }\r\n}\r\n\r\nconst Header = styled.h5`\r\n  font-weight: 600;\r\n  padding: 0 1rem;\r\n  font-size: 1.125rem;\r\n  margin-bottom: 1.5rem;\r\n`;\r\n\r\nexport const Text = styled.p<{ bottom?: boolean }>`\r\n  font-weight: 500;\r\n  padding: 0 1rem;\r\n  margin-bottom: ${props => props.bottom ? '2rem' : ''};\r\n  font-size: 0.875rem;\r\n`;\r\n\r\nexport default function ComponentName() {\r\n\r\n  const [s] = useSearchParams();\r\n  const token = s.get('verifyToken');\r\n  const submit = useSubmit();\r\n  const { usernameToVerify } = useLoaderData<LoaderData>();\r\n  const actionData = useActionData<ActionData>();\r\n  const formRef = React.useRef<HTMLFormElement>(null);\r\n\r\n  const [ countDown, setCountDown ] = React.useState(30);\r\n  console.log(countDown);\r\n\r\n  React.useEffect(() => {\r\n    if (formRef.current) {\r\n      submit(formRef.current);\r\n    }\r\n    const timerId = setInterval(() => {\r\n      if ((!token || token == '')) {\r\n        setCountDown(countDown => countDown > 0 ? countDown - 1 : countDown);\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(timerId);\r\n  }, []);\r\n\r\n  return <>\r\n    {!token || token == '' ? <>\r\n      <Title>Email Verification - Step 1</Title>\r\n      <IconRow invertColors={true} />\r\n      <AuthWrap style={{ paddingBottom: '2rem' }}>\r\n        <Header>Please confirm your email address.</Header>\r\n        <Text>To use your account, you must confirm your email address by clicking a link we sent you there.</Text>\r\n        <Text bottom={true}>Didn't receive anything? Check your spam folder. Or... ({countDown.toString()}s)</Text>\r\n        <Form method='post'>\r\n          <IdInput name='usernameToVerify' value={usernameToVerify} />\r\n          <MainButtonBtn style={{ margin: '0 auto' }} disabled={countDown > 0} onClick={() => {\r\n            setCountDown(30);\r\n          }}>Resend Email<FaAngleDoubleRight /></MainButtonBtn>\r\n        </Form>\r\n      </AuthWrap>\r\n      { actionData?.msg && <p>{actionData.msg}</p> }\r\n    </> : <>\r\n      <Title>Email Verification - Step 2</Title>\r\n      <IconRow invertColors={true} />\r\n      <AuthWrap>\r\n        <Header>Confirming your email address...</Header>\r\n        <Text bottom={true}>You will be redirected to Reserveroo in a moment.</Text>\r\n        <Form method='post' ref={formRef}>\r\n          <IdInput name='token' value={token} />\r\n        </Form>\r\n      </AuthWrap>\r\n    </>}\r\n  </>\r\n}", "import { Link, Outlet, useActionData, useSearchParams, useTransition } from '@remix-run/react'\r\nimport type { LoaderFunction } from '@remix-run/server-runtime'\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { LoginComponent } from '~/components/auth/login';\r\nimport { RegisterComponent } from '~/components/auth/register';\r\nimport { IconRow } from '~/components/icon-row';\r\nimport { styles } from '~/constants/styles';\r\nimport { useWhereAreWe } from '~/contexts/whereAreWeContext';\r\nimport { AuthActionData } from './authenticate/login';\r\n\r\nexport const loader: LoaderFunction = () => {\r\n  return {}\r\n}\r\n\r\nexport const Title = styled.h2`\r\n  color: ${styles.colors.black};\r\n  text-align: center;\r\n  font-size: 1.375rem;\r\n  margin: 2rem 0rem 1rem;\r\n  @media (min-width: 500px) {\r\n    font-size: 2rem;\r\n  }\r\n  @media (min-width: 800px) {\r\n    font-size: 2.3rem;\r\n  }\r\n`;\r\n\r\nexport const TabBar = styled.div`\r\n  margin: 1rem auto;\r\n  width: 95%;\r\n  max-width: 500px;\r\n  justify-content: center;\r\n  align-items: stretch;\r\n  display: flex;\r\n  padding: 0.5rem 0rem;\r\n  border: 1.5px solid ${styles.colors.gray[140]}40;\r\n  border-radius: 0.5rem;\r\n  position: relative;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const Separator = styled.div`\r\n  width: 1px;\r\n  background-color: ${styles.colors.gray[50]};\r\n`;\r\n\r\nexport const AuthTabButton = styled.button`\r\n  width: 50%;\r\n  display: flex;\r\n  background-color: transparent;\r\n  border: none;\r\n  font-size: 0.9rem;\r\n  cursor: pointer;\r\n  padding: 0.2rem 0;\r\n  margin: 0;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: ${styles.colors.gray[110]};\r\n  font-weight: bold;\r\n  text-decoration: none;\r\n`;\r\n\r\nexport const ActiveHighlighter = styled.div<{ position: number }>`\r\n  position: absolute;\r\n  height: calc(100% - 0.4rem);\r\n  border-radius: 0.25rem;\r\n  width: calc(50% - 0.4rem);\r\n  transition: left 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);\r\n  left: ${props => props.position == 0 ? '0px' : '50%'};\r\n  top: 0px;\r\n  margin: 0.2rem;\r\n  background-color: ${styles.colors.action};\r\n  z-index: -1;\r\n`;\r\n\r\nexport default function Authenticate() {\r\n\r\n  const [searchParams, setSearchParams ] = useSearchParams();\r\n  const a = useActionData<AuthActionData>();\r\n  const t = useTransition();\r\n\r\n  const redirectTo = encodeURI(searchParams.get('redirectTo') ?? '').replace('/', '%2F');\r\n\r\n  const [ position, setPosition ] = React.useState(0);\r\n\r\n  const { setSigningIn } = useWhereAreWe();\r\n\r\n  React.useEffect(() => {\r\n    setSigningIn(true);\r\n    return () => {\r\n      setSigningIn(false);\r\n    }\r\n  }, []);\r\n\r\n  return <>\r\n    <Title>Welcome to Reserveroo.</Title>\r\n    <IconRow invertColors={true} />\r\n    <TabBar>\r\n      <ActiveHighlighter position={position} />\r\n      <AuthTabButton onClick={() => {setPosition(0)}}>Sign In</AuthTabButton>\r\n      <Separator />\r\n      <AuthTabButton onClick={() => {setPosition(1)}}>Create Account</AuthTabButton>\r\n    </TabBar>\r\n    <div>\r\n      { position == 0 && <LoginComponent a={a} searchParams={searchParams} setSearchParams={(data) => { setSearchParams(data) }} t={t} />}\r\n      { position == 1 && <RegisterComponent a={a} searchParams={searchParams} setSearchParams={(data) => { setSearchParams(data) }} t={t} />}\r\n    </div>\r\n  </>\r\n}", "import { Form, useActionData } from '@remix-run/react'\r\nimport { ActionFunction, json, LoaderFunction } from '@remix-run/server-runtime'\r\nimport { FaAngleDoubleRight } from 'react-icons/fa'\r\nimport styled from 'styled-components'\r\nimport { AuthWrap } from '~/components/auth/login'\r\nimport { IconRow } from '~/components/icon-row'\r\nimport { TextInput } from '~/components/inputs/TextInput'\r\nimport { MainButtonBtn } from '~/components/place/place-summary'\r\nimport { getEmailFromUsername } from '~/models/user.server'\r\nimport { sendPwdResetEmail } from '~/utils/emails.server'\r\nimport { badRequest, getBaseUrl, getFormEssentials } from '~/utils/forms'\r\nimport { Title } from '../authenticate'\r\nimport { Text } from '../verifyEmail'\r\n\r\ninterface ActionData {\r\n  msg: string;\r\n  fields?: {\r\n    username?: string | null\r\n  }\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const { getFormItem } = await getFormEssentials(request);\r\n  const username = getFormItem('username');\r\n\r\n  const user = await getEmailFromUsername({ username });\r\n\r\n  if (user == null) return badRequest({ msg: \"Something went wrong.\", fields: { username: username } });\r\n\r\n  console.log(user);\r\n\r\n  await sendPwdResetEmail(user?.email, getBaseUrl(request), username);\r\n\r\n  return json({ msg: \"You should get an email with the reset link.\", fields: { username: username } });\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  return {};\r\n}\r\n\r\nconst InputWrap = styled.div`\r\n  padding: 0 1rem;\r\n`;\r\n\r\nexport default function ForgotPassword() {\r\n\r\n  const a = useActionData<ActionData>();\r\n\r\n  return <div>\r\n    <Title>Password Reset - Step 1</Title>\r\n    <IconRow invertColors={true} />\r\n    <AuthWrap style={{ paddingBottom: '2rem' }}>\r\n      <Text>Enter your username. If it exists, we will send a password recovery link to the email address paired with your account.</Text>\r\n      <Form method='post'>\r\n        {a?.msg && <p>{a?.msg}</p>}\r\n        <InputWrap>\r\n          <TextInput name='username' title='Username' defaultValue={a?.fields?.username ?? ''} />\r\n        </InputWrap>\r\n        <MainButtonBtn style={{ margin: '1.5rem auto 0' }}>Reset Password<FaAngleDoubleRight /></MainButtonBtn>\r\n      </Form>\r\n    </AuthWrap>\r\n  </div>\r\n}", "import { Form, useActionData, useLoaderData, useSearchParams, useSubmit } from '@remix-run/react'\r\nimport { ActionFunction, json, LoaderFunction, redirect } from '@remix-run/server-runtime'\r\nimport React from 'react'\r\nimport { FaAngleDoubleRight } from 'react-icons/fa'\r\nimport styled from 'styled-components'\r\nimport { AuthWrap } from '~/components/auth/login'\r\nimport { IconRow } from '~/components/icon-row'\r\nimport { IdInput } from '~/components/inputs/ObjectInput'\r\nimport { MainButtonBtn } from '~/components/place/place-summary'\r\nimport { getUserByUsername, getUserEmailToResend, verifyUserEmail } from '~/models/user.server'\r\nimport { sendEmailConfirmationEmail } from '~/utils/emails.server'\r\nimport { badRequest, getBaseUrl, getFormEssentials } from '~/utils/forms'\r\nimport { createUserSession, requireUsernameToVerify } from '~/utils/session.server'\r\nimport { verifyMessage } from '~/utils/signing.server'\r\nimport { Title } from './authenticate'\r\n\r\ninterface LoaderData {\r\n  usernameToVerify: string\r\n};\r\n\r\ninterface ActionData {\r\n  msg: string\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const { usernameToVerify } = await requireUsernameToVerify(request);\r\n  return json({ usernameToVerify });\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const { getFormItem } = await getFormEssentials(request);\r\n  const usernameToVerify = getFormItem('usernameToVerify');\r\n  const user = await getUserEmailToResend({ username: usernameToVerify });\r\n  const token = getFormItem('token');\r\n\r\n  if (token) {\r\n    const goodEmail = verifyMessage(token.split(':')[0], token.split(':')[1]);\r\n    if (!goodEmail) {\r\n      return badRequest({ msg: \"Email verification failed.\" });\r\n    }\r\n    const user = await verifyUserEmail(token.split(':')[0]);\r\n    return createUserSession(user.username, user.admin, true, '/doneVerifyingEmail');\r\n  }\r\n  else if (!!usernameToVerify && !!user && user.verifyEmailTriesLeft > 0) {\r\n    const baseUrl = getBaseUrl(request);\r\n    await sendEmailConfirmationEmail(user.email, baseUrl);\r\n    return json({ msg: \"Another email sent.\" });\r\n  }\r\n  else {\r\n    return badRequest({ msg: \"Looks like you're out of verification emails.\" });\r\n  }\r\n}\r\n\r\nconst Header = styled.h5`\r\n  font-weight: 600;\r\n  padding: 0 1rem;\r\n  font-size: 1.125rem;\r\n  margin-bottom: 1.5rem;\r\n`;\r\n\r\nexport const Text = styled.p<{ bottom?: boolean }>`\r\n  font-weight: 500;\r\n  padding: 0 1rem;\r\n  margin-bottom: ${props => props.bottom ? '2rem' : ''};\r\n  font-size: 0.875rem;\r\n`;\r\n\r\nexport default function ComponentName() {\r\n\r\n  const [s] = useSearchParams();\r\n  const token = s.get('verifyToken');\r\n  const submit = useSubmit();\r\n  const { usernameToVerify } = useLoaderData<LoaderData>();\r\n  const actionData = useActionData<ActionData>();\r\n  const formRef = React.useRef<HTMLFormElement>(null);\r\n\r\n  const [ countDown, setCountDown ] = React.useState(30);\r\n  console.log(countDown);\r\n\r\n  React.useEffect(() => {\r\n    if (formRef.current) {\r\n      submit(formRef.current);\r\n    }\r\n    const timerId = setInterval(() => {\r\n      if ((!token || token == '')) {\r\n        setCountDown(countDown => countDown > 0 ? countDown - 1 : countDown);\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(timerId);\r\n  }, []);\r\n\r\n  return <>\r\n    {!token || token == '' ? <>\r\n      <Title>Email Verification - Step 1</Title>\r\n      <IconRow invertColors={true} />\r\n      <AuthWrap style={{ paddingBottom: '2rem' }}>\r\n        <Header>Please confirm your email address.</Header>\r\n        <Text>To use your account, you must confirm your email address by clicking a link we sent you there.</Text>\r\n        <Text bottom={true}>Didn't receive anything? Check your spam folder. Or... ({countDown.toString()}s)</Text>\r\n        <Form method='post'>\r\n          <IdInput name='usernameToVerify' value={usernameToVerify} />\r\n          <MainButtonBtn style={{ margin: '0 auto' }} disabled={countDown > 0} onClick={() => {\r\n            setCountDown(30);\r\n          }}>Resend Email<FaAngleDoubleRight /></MainButtonBtn>\r\n        </Form>\r\n      </AuthWrap>\r\n      { actionData?.msg && <p>{actionData.msg}</p> }\r\n    </> : <>\r\n      <Title>Email Verification - Step 2</Title>\r\n      <IconRow invertColors={true} />\r\n      <AuthWrap>\r\n        <Header>Confirming your email address...</Header>\r\n        <Text bottom={true}>You will be redirected to Reserveroo in a moment.</Text>\r\n        <Form method='post' ref={formRef}>\r\n          <IdInput name='token' value={token} />\r\n        </Form>\r\n      </AuthWrap>\r\n    </>}\r\n  </>\r\n}", "import { Form, useActionData, useSearchParams, useSubmit } from '@remix-run/react'\r\nimport { ActionFunction, json, LoaderFunction, redirect } from '@remix-run/server-runtime'\r\nimport React, { useState } from 'react'\r\nimport { FaAngleDoubleRight } from 'react-icons/fa'\r\nimport styled from 'styled-components'\r\nimport { AuthWrap } from '~/components/auth/login'\r\nimport { Bar, BarBack, checkPasswordStrength, PwdInfo, PwdWarn } from '~/components/auth/register'\r\nimport { IconRow } from '~/components/icon-row'\r\nimport { IdInput } from '~/components/inputs/ObjectInput'\r\nimport { TextInput } from '~/components/inputs/TextInput'\r\nimport { MainButtonBtn } from '~/components/place/place-summary'\r\nimport { changeUserPassword, getEmailFromUsername } from '~/models/user.server'\r\nimport { sendPwdResetEmail } from '~/utils/emails.server'\r\nimport { badRequest, getBaseUrl, getFormEssentials } from '~/utils/forms'\r\nimport { generateHashAndSalt } from '~/utils/pwd_helper.server'\r\nimport { verifyMessage } from '~/utils/signing.server'\r\nimport { Title } from '../authenticate'\r\nimport { Text } from '../verifyEmail'\r\n\r\ninterface ActionData {\r\n  msg: string;\r\n  fields?: {\r\n    username?: string | null\r\n  }\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const { getFormItem } = await getFormEssentials(request);\r\n  const username = getFormItem('token').split(':')[0];\r\n  const signature = getFormItem('token').split(':')[1];\r\n  const password = getFormItem('password');\r\n\r\n  const goodSource = verifyMessage(username, signature);\r\n  if (!goodSource) {\r\n    return json({ msg: 'Something went wrong. Are you a sneaky hacker? >:(' });\r\n  }\r\n  \r\n  const passwordHash = await generateHashAndSalt(password);\r\n  const user = await changeUserPassword({ username, passwordHash });\r\n\r\n  return redirect('/authenticate');\r\n\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const url = new URL(request.url);\r\n  const token = url.searchParams.get('token');\r\n  if (!token || token == '') {\r\n    return redirect('/authenticate');\r\n  }\r\n  return {};\r\n}\r\n\r\nconst InputWrap = styled.div`\r\n  padding: 0 1rem;\r\n`;\r\n\r\nconst Spacer = styled.div`\r\n  height: 1rem;\r\n`;\r\n\r\nexport default function ForgotPassword() {\r\n\r\n  const a = useActionData<ActionData>();\r\n  const [ searchParams ] = useSearchParams();\r\n\r\n  const [ pwd, setPwd ] = useState('');\r\n  const [ cpwd, setCPwd ] = useState('');\r\n\r\n  const s = Math.max(checkPasswordStrength(pwd), checkPasswordStrength(cpwd));\r\n\r\n  const pwdString = (\r\n    s <= 3 ? 'Very weak' : s <= 6 ? 'Weak' : s <= 9 ? 'Moderate' :\r\n    s < 12 ? 'Strong' : 'Very Strong'\r\n  )\r\n\r\n  const token = searchParams.get('token') ?? '';\r\n\r\n  return <div>\r\n    {token && <>\r\n      <Title>Password Reset - Step 2</Title>\r\n      <IconRow invertColors={true} />\r\n      <AuthWrap style={{ paddingBottom: '2rem' }}>\r\n        <Text>Enter your new password below.</Text>\r\n        <Spacer />\r\n        <Form method='post'>\r\n          {a?.msg && <p>{a?.msg}</p>}\r\n          <IdInput name='token' value={token} />\r\n          <InputWrap>\r\n            <TextInput setValue={setPwd} title={'Password'} password={true} name='password' defaultValue={''} />\r\n            <Spacer />\r\n            <TextInput setValue={setCPwd} title={'Confirm Password'} password={true} name='confirmPassword' defaultValue={''} />\r\n            <Spacer />\r\n            <BarBack><Bar width={s / 12 * 100}></Bar></BarBack>\r\n            <Spacer />\r\n            { s > 0 && pwd == cpwd && <PwdInfo>Your password is <strong>{pwdString}</strong></PwdInfo> }\r\n            { pwd.length == 0 && cpwd.length == 0 && <PwdInfo>Choose a strong password.</PwdInfo> }\r\n            { pwd != cpwd && <PwdWarn>Your passwords don't match.</PwdWarn> }\r\n          </InputWrap>\r\n          <MainButtonBtn disabled={pwd != cpwd} style={{ margin: '1.5rem auto 0' }}>Reset Password<FaAngleDoubleRight /></MainButtonBtn>\r\n        </Form>\r\n      </AuthWrap>\r\n    </>}\r\n  </div>\r\n}", "import { OpeningTime, Reservable } from \"@prisma/client\";\r\nimport { Link, Outlet, useLoaderData } from \"@remix-run/react\"\r\nimport { json, LoaderFunction } from \"@remix-run/server-runtime\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ClockIcon from \"~/assets/icons/Clock\";\r\nimport LocationIcon from \"~/assets/icons/Location\";\r\nimport { FacilitiesIndicator } from \"~/components/place/facilities-indicator\";\r\nimport { PlaceImage } from \"~/components/place/place-image\";\r\nimport { getNextImportantTime } from \"~/components/place/place-summary\";\r\nimport { TagList } from \"~/components/place/tag-list\";\r\nimport { styles } from \"~/constants/styles\";\r\nimport { getPlace, Place } from \"~/models/place.server\";\r\nimport { ReservableTypeWithTexts, TagWithTexts } from \"~/types/types\";\r\n\r\ninterface LoaderData {\r\n  place: (Place & {\r\n    openingTimes: OpeningTime[],\r\n    tags: TagWithTexts[],\r\n    reservables: Reservable & {\r\n      ReservableType: ReservableTypeWithTexts\r\n    }[]\r\n  }) | null | undefined,\r\n  imageUrl: string | undefined\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ params }) => {\r\n  const place = await getPlace({ id: params.placeId ?? '' });\r\n  return json({ place, imageUrl: place?.profilePicUrl });\r\n}\r\n\r\nconst Banner = styled.div`\r\n  padding: 2rem 1rem;\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  background-color: ${styles.colors.gray[5]};\r\n`;\r\n\r\nconst PlaceInfoWrap = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst PlaceName = styled(Link)`\r\n  color: ${styles.colors.black};\r\n  font-size: 1.4rem;\r\n  font-weight: bold;\r\n  text-decoration: none;\r\n  @media (max-width: 600px) {\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst LocationInfoWrap = styled.div`\r\n  display: flex;\r\n  gap: 1rem;\r\n  align-items: center;\r\n`;\r\n\r\nconst LocationText = styled.p`\r\n  margin: 0px;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst OuterFlex = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 9rem 1fr;\r\n  grid-template-rows: auto;\r\n  gap: 2rem;\r\n  max-width: 938px;\r\n  width: 100%;\r\n  @media (max-width: 600px) {\r\n    grid-template-columns: auto;\r\n    justify-items: center;\r\n    grid-template-rows: repeat(2, auto);\r\n    gap: 1rem;\r\n  }\r\n`;\r\n\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  gap: 1rem;\r\n  align-items: center;\r\n`;\r\n\r\nconst Time = styled.p`\r\n  margin: 0px;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst GeneralInfoWrap = styled.div`\r\n  display: grid;\r\n  gap: 0.8rem;\r\n  align-items: stretch;\r\n  grid-template-rows: repeat(3, auto);\r\n`;\r\n\r\nconst FlexApart = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  gap: 1.5rem;\r\n  row-gap: 0.5rem;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n`;\r\n\r\nexport default function PlaceDetail() {\r\n\r\n  const { place, imageUrl } = useLoaderData<LoaderData>();\r\n  const [ position, setPosition ] = React.useState<number>(0);\r\n\r\n  return <>\r\n    {place ? <Banner>\r\n      <OuterFlex>\r\n        <PlaceImage shape='circle' imageUrl={imageUrl} />\r\n        <PlaceInfoWrap>\r\n          <GeneralInfoWrap>\r\n            <PlaceName to={`/${place.id}`}>{place.name}</PlaceName>\r\n            <FlexApart>\r\n              <LocationInfoWrap>\r\n                <LocationIcon height={'1rem'} />\r\n                <LocationText>{place.street}, {place.city}</LocationText>\r\n              </LocationInfoWrap>\r\n              <Flex>\r\n                <ClockIcon height='1rem' />\r\n                <Time>{getNextImportantTime(place)}</Time>\r\n              </Flex>\r\n            </FlexApart>\r\n            {/* <AvailabilityIndicator color='free' /> */}\r\n            <FacilitiesIndicator reservables={place.reservables} />\r\n            <TagList tags={place.tags} />\r\n          </GeneralInfoWrap>\r\n        </PlaceInfoWrap>\r\n      </OuterFlex>\r\n    </Banner> : <p>An error has occured.</p>}\r\n    <Outlet />\r\n  </>\r\n}", "import type { Place } from \"@prisma/client\";\r\n\r\nimport { prisma } from \"~/db.server\";\r\n\r\nexport type { Place } from \"@prisma/client\";\r\n\r\nexport const getPlace = async ({ id }: Pick<Place, 'id'>) => (await prisma.place.findFirst({\r\n  where: { id },\r\n  include: {\r\n    reservables: {\r\n      include: {\r\n        ReservableType: {\r\n          include: {\r\n            multiLangName: true\r\n          }\r\n        }\r\n      }\r\n    },\r\n    openingTimes: true,\r\n    tags: {\r\n      include: {\r\n        multiLangName: true,\r\n        multiLangDesc: true\r\n      }\r\n    },\r\n    categories: {\r\n      include: {\r\n        multiLangName: true\r\n      }\r\n    },\r\n    Location: {\r\n      include: {\r\n        multiLangCountry: true,\r\n        multiLangCity: true\r\n      }\r\n    }\r\n  }\r\n}));\r\n\r\nexport const getPlaceWithReservations = async ({ id }: Pick<Place, 'id'>) => (await prisma.place.findFirst({\r\n  where: { id },\r\n  include: {\r\n    reservables: {\r\n      include: {\r\n        reservations: true,\r\n        ReservableType: {\r\n          include: {\r\n            multiLangName: true\r\n          }\r\n        }\r\n      }\r\n    },\r\n    openingTimes: true\r\n  }\r\n}));\r\n\r\nexport const getPlaceList = async ({ name: nameFragment, cityCountry, tagIds, catIds }: Pick<Place, 'name'> & { cityCountry: string | undefined, tagIds: string[], catIds: string[] }) => (await prisma.place.findMany({\r\n  where: { \r\n    AND: [{\r\n      name: {\r\n        contains: nameFragment, mode: 'insensitive',\r\n      }\r\n    }, {\r\n      hidden: false,\r\n    }, {\r\n      Location: {\r\n        cityCountry\r\n      }\r\n    }, {\r\n      OR: tagIds?.map(t => ({\r\n        tags: {\r\n          some: {\r\n            id: t\r\n          }\r\n        }\r\n      }))\r\n    }, {\r\n      OR: catIds?.map(c => ({\r\n        categories: {\r\n          some: {\r\n            id: c\r\n          }\r\n        }\r\n      }))\r\n    }]\r\n  },\r\n  include: {\r\n    openingTimes: true,\r\n    company: true,\r\n    reservables: {\r\n      include: {\r\n        ReservableType: {\r\n          include: {\r\n            multiLangName: true\r\n          }\r\n        }\r\n      }\r\n    },\r\n    tags: {\r\n      include: {\r\n        multiLangDesc: true,\r\n        multiLangName: true\r\n      }\r\n    },\r\n    categories: {\r\n      include: {\r\n        multiLangName: true\r\n      }\r\n    },\r\n    Location: {\r\n      include: {\r\n        multiLangCountry: true,\r\n        multiLangCity: true\r\n      }\r\n    }\r\n  }\r\n}));\r\n\r\nexport const getNewPlaces = async () => (await prisma.place.findMany({\r\n  orderBy: [{\r\n    createdAt: 'desc',\r\n  }],\r\n  take: 6,\r\n  include: {\r\n    openingTimes: true,\r\n    company: true,\r\n    reservables: {\r\n      include: {\r\n        ReservableType: {\r\n          include: {\r\n            multiLangName: true\r\n          }\r\n        }\r\n      }\r\n    },\r\n    tags: {\r\n      include: {\r\n        multiLangDesc: true,\r\n        multiLangName: true\r\n      }\r\n    },\r\n    categories: {\r\n      include: {\r\n        multiLangName: true\r\n      }\r\n    },\r\n    Location: {\r\n      include: {\r\n        multiLangCountry: true,\r\n        multiLangCity: true\r\n      }\r\n    }\r\n  }\r\n}));\r\n\r\nexport const getAllPlaces = async () => (await prisma.place.findMany({\r\n  include: {\r\n    company: true,\r\n    reservables: true\r\n  }\r\n}));\r\n\r\nexport const createPlace = async ({ name, companyId }: Pick<Place, 'name' | 'companyId'>) => (await prisma.place.create({\r\n  data: {\r\n    name,\r\n    companyId\r\n  },\r\n}));\r\n\r\nexport const updatePlace = async ({\r\n  id, name, companyId, hidden, addedTagIds, removedTagIds, addedCategoryIds, removedCategoryIds, locationId, description,\r\n  street, city, postCode, howToGetThere\r\n}: Pick<Place, 'id' | 'name' | 'companyId' | 'hidden' | 'description' | 'street' | 'city' | 'postCode' | 'howToGetThere'> & {\r\n  addedTagIds: string[],\r\n  removedTagIds: string[],\r\n  addedCategoryIds: string[],\r\n  removedCategoryIds: string[],\r\n  locationId: string\r\n}) => (await prisma.place.update({\r\n  where: {\r\n    id\r\n  },\r\n  data: {\r\n    tags: {\r\n      connect: addedTagIds.map(t => ({ id: t })),\r\n      disconnect: removedTagIds.map(t => ({ id: t }))\r\n    },\r\n    categories: {\r\n      connect: addedCategoryIds.map(c => ({ id: c })),\r\n      disconnect: removedCategoryIds.map(c => ({ id: c }))\r\n    },\r\n    locationId: locationId == '' ? null : locationId, name, companyId, hidden, description,\r\n    street, city, postCode, howToGetThere\r\n  }\r\n}));\r\n\r\nexport const updatePlaceProfilePic = async ({ id, profilePicUrl }: Pick<Place, 'profilePicUrl' | 'id'>) => await prisma.place.update({\r\n  where: {\r\n    id\r\n  },\r\n  data: {\r\n    profilePicUrl\r\n  }\r\n});\r\n\r\nexport const addToPlaceGalleryPics = async ({ id, galleryPicUrls }: Pick<Place, 'galleryPicUrls' | 'id'>) => {\r\n  const place = await prisma.place.findUnique({ where: { id } });\r\n  return await prisma.place.update({\r\n    where: {\r\n      id\r\n    },\r\n    data: {\r\n      galleryPicUrls: place?.galleryPicUrls.concat(galleryPicUrls)\r\n    }\r\n  })\r\n};\r\n\r\nexport const removeFromPlaceGalleryPics = async ({ id, galleryPicUrls }: Pick<Place, 'galleryPicUrls' | 'id'>) => {\r\n  const place = await prisma.place.findUnique({ where: { id } });\r\n  return await prisma.place.update({\r\n    where: {\r\n      id\r\n    },\r\n    data: {\r\n      galleryPicUrls: place?.galleryPicUrls.filter(p1 => !galleryPicUrls.find(p2 => p1 == p2))\r\n    }\r\n  })\r\n};\r\n\r\nexport const deletePlace = ({ id }: Pick<Place, 'id'>) => (prisma.place.deleteMany({\r\n    where: { id },\r\n}));\r\n", "import { Form, useActionData, useLoaderData, useMatches, useParams, useSubmit } from '@remix-run/react';\r\nimport { ActionFunction, json, LoaderFunction, redirect } from '@remix-run/server-runtime'\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport AngleLeftIcon from '~/assets/icons/AngleLeft';\r\nimport AnglesRightIcon from '~/assets/icons/AnglesRight';\r\nimport { Button } from '~/components/button';\r\nimport { ConfirmationDialog } from '~/components/confirmation-dialog';\r\nimport { DateInput } from '~/components/inputs/DateInput';\r\nimport { IdInput } from '~/components/inputs/ObjectInput';\r\nimport { RadioInput } from '~/components/inputs/RadioInput';\r\nimport { TextInput } from '~/components/inputs/TextInput';\r\nimport { TimeInput } from '~/components/inputs/TimeInput';\r\nimport { Indicator } from '~/components/place/facilities-indicator';\r\nimport { MainButton, MainButtonBtn, SecondaryButton, SecondaryButtonBtn } from '~/components/place/place-summary';\r\nimport { ReservableTimes } from '~/components/reservable-times';\r\nimport { ReserveConfirmationDialog } from '~/components/reserve-confirmation-dialog';\r\nimport { styles } from '~/constants/styles';\r\nimport { useUsername } from '~/contexts/usernameContext';\r\nimport { OpeningTime } from '~/models/openingTime.server';\r\nimport { getPlace, getPlaceWithReservations, Place } from '~/models/place.server';\r\nimport { getReservableList, Reservable } from '~/models/reservable.server';\r\nimport { createReservation, Reservation } from '~/models/reservation.server';\r\nimport { createReservationGroup } from '~/models/reservationGroup.server';\r\nimport { getUserId } from '~/models/user.server';\r\nimport { ReservableTypeWithTexts, ReservableWithReservations, TimeSection } from '~/types/types';\r\nimport { sendCreationEmail } from '~/utils/emails.server';\r\nimport { getDayOfWeek, getStringDateValue, getStringTimeValue } from '~/utils/forms';\r\nimport { requireUsernameAndAdmin } from '~/utils/session.server'\r\n\r\ninterface ReserveLoaderData {\r\n  username: string,\r\n  place: (Place & {\r\n    reservables: (ReservableWithReservations & {\r\n      ReservableType: ReservableTypeWithTexts\r\n    })[];\r\n    openingTimes: OpeningTime[];\r\n})\r\n}\r\n\r\nexport type ReserveActionData = {\r\n  formError?: string;\r\n  fields?: {\r\n    note: string;\r\n    username: string;\r\n    placeId: string;\r\n  };\r\n};\r\n\r\nconst badRequest = (data: ReserveActionData) => json(data, { status: 400 });\r\n\r\nexport const loader: LoaderFunction = async ({ request, params }) => {\r\n  // Return availability data\r\n  const { username } = await requireUsernameAndAdmin(request);\r\n  const place = await getPlaceWithReservations({ id: params.placeId ?? '' });\r\n  return json({ username, place })\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const form = await request.formData();\r\n  const note = form.get('note')?.toString();\r\n  const placeId = form.get('placeId')?.toString();\r\n  const username = form.get('username')?.toString();\r\n\r\n  const reservationBackup = form.getAll('reservationBackup[]').map(r => r.toString());\r\n  const reservableId = form.getAll('reservableId[]').map(r => r.toString()).filter(r => r != '-1');\r\n  const dateTimeStart = form.getAll('start[]').map(r => r.toString());\r\n  const dateTimeEnd = form.getAll('end[]').map(r => r.toString());\r\n\r\n  // You need to repeat the validation here!!!!!!\r\n\r\n  const datesInPast = dateTimeStart.find(s => new Date(s).getTime() < new Date().getTime());\r\n\r\n  if (dateTimeEnd.length == 0 || dateTimeStart.length == 0 || datesInPast || !placeId || !username || !reservableId) {\r\n    return badRequest({\r\n      fields: {\r\n        note: note ?? '', placeId: placeId ?? '', username: username ?? ''\r\n      },\r\n      formError: 'Fill everything in pls.'\r\n    })\r\n  }\r\n\r\n  const user = await getUserId({ username });\r\n  await sendCreationEmail(user?.email ?? '');\r\n  const resGroup = user ? await createReservationGroup({ note: note ?? '', userId: user.id }) : null;\r\n  if (resGroup == null) {\r\n    return badRequest({\r\n      fields: {\r\n        note: note ?? '', placeId: placeId ?? '', username: username ?? ''\r\n      },\r\n      formError: 'Cannot find who you are :(.'\r\n    })\r\n  }\r\n  const promises: Promise<object>[] = []\r\n  dateTimeStart.forEach((d, i) => {\r\n    promises.push(createReservation({ backup: reservationBackup[i] == '1', start: new Date(dateTimeStart[i]), end: new Date(dateTimeEnd[i]), reservableId: reservableId[i] ?? null, reservationGroupId: resGroup.id ?? null }));\r\n  });\r\n  await Promise.all(promises);\r\n\r\n  // Here you can return actionData instead to show a confirmation dialog and then\r\n  // redirect to the details from there or something\r\n  return redirect(`/profile`);\r\n}\r\n\r\nconst HeaderBar = styled.div<{ color: 'primary' | 'gray' | 'none' }>`\r\n  background-color: ${props => props.color == 'primary' ? styles.colors.primary : props.color == 'gray' ? styles.colors.gray[10] : ''};\r\n  @media (min-width: 500px) {\r\n    border-top-left-radius: 0.5rem;\r\n    border-top-right-radius: 0.5rem;\r\n  }\r\n  margin-top: 2rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0.9rem 1.6rem 0.9rem 1.6rem;\r\n  & h5 {\r\n    color: ${props => props.color == 'primary' ? styles.colors.white : styles.colors.black};\r\n    font-size: 1.2rem;\r\n  }\r\n  @media (max-width: 500px) {\r\n    flex-wrap: wrap;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    row-gap: 0.6rem;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h5`\r\n  margin: 0;\r\n`;\r\n\r\nconst ButtonWrap = styled.div`\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Wrap = styled.div`\r\n  max-width: 938px;\r\n  display: flex;\r\n  @media (min-width: 500px) {\r\n    padding: 0rem 2rem;\r\n  }\r\n  flex-direction: column;\r\n  margin: 2rem auto;\r\n`;\r\n\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  & h5 {\r\n    font-weight: 500;\r\n    margin-right: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst TextWrap = styled.div`\r\n  padding: 0.5rem 1.6rem;\r\n`;\r\n\r\nconst SlotList = styled.div`\r\n  padding: 1rem 1.6rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (min-width: 500px) {\r\n    border-bottom-left-radius: 0.5rem;\r\n    border-bottom-right-radius: 0.5rem;\r\n  }\r\n  gap: 1.5rem;\r\n  background-color: ${styles.colors.primary};\r\n`;\r\n\r\nconst BackupSlotList = styled(SlotList)`\r\n  background-color: ${styles.colors.gray[5]};\r\n`;\r\n\r\nconst ResE = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  @media (max-width: 400px) {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n  }\r\n`;\r\n\r\nconst SlotListTitle = styled.div`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst WhiteSlotListTitle = styled(SlotListTitle)`\r\n  color: ${styles.colors.white};\r\n`;\r\n\r\nconst BackupSlotText = styled.p`\r\n\r\n`;\r\n\r\nconst SlotText = styled(BackupSlotText)`\r\n  color: ${styles.colors.white};  \r\n`;\r\n\r\nconst FlexSL = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  column-gap: 1rem;\r\n  row-gap: 0.4rem;\r\n  flex-wrap: wrap;\r\n  & > p {\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport interface Res {\r\n  isBackup: boolean,\r\n  reservableId: string,\r\n  startTime: Date | null,\r\n  endTime: Date | null\r\n}\r\n\r\nexport default function ReservationElement() {\r\n\r\n  const params = useParams();\r\n  const s = useSubmit();\r\n  const formRef = React.useRef<HTMLFormElement>(null);\r\n  const [ confirmationDialog, setConfirmationDialog ] = React.useState<boolean>(false);\r\n  const { username, place } = useLoaderData<ReserveLoaderData>();\r\n  const reservables = place.reservables;\r\n  const actionData = useActionData<ReserveActionData>();\r\n\r\n  const [ resList, setResList ] = useState<Res[]>([]);\r\n\r\n  const [ date, setDate ] = React.useState<Date | null>(null);\r\n  const [ backup, setBackup ] = React.useState(false);\r\n\r\n  console.log(resList);\r\n\r\n  return (<Wrap>\r\n    <ReserveConfirmationDialog \r\n      hidden={!confirmationDialog}\r\n      onConfirm={() => {\r\n        if (formRef.current)\r\n          s(formRef.current);\r\n      } }\r\n      title={'Create reservation?'}\r\n      text={'Is all the information correct?'}\r\n      confirmText={'Yes, create reservation'}\r\n      cancelText={'No, go back'}\r\n      close={() => {\r\n        setConfirmationDialog(false);\r\n      } }\r\n      subHeaderText={'Is all of the information bellow correct?'}\r\n      resList={resList} \r\n      reservables={reservables}\r\n      backupTitle={resList.filter(r => r.isBackup).length > 0 ? 'What does this mean?' : 'Cannot go any other time?'}\r\n      backupText1={resList.filter(r => r.isBackup).length > 0 && resList.filter(r => !r.isBackup).length > 1 ? <span>\r\n        We will try to book all your primary slots. If <b>*any* (read: at least one)</b> of them are unavailable, we will try your backup option.\r\n      </span> : resList.filter(r => r.isBackup).length > 0 && resList.filter(r => !r.isBackup).length == 1 ? <span>\r\n        We will try to book your primary slot. If it's unavailable, we will try your backup option.\r\n      </span> : <span>\r\n        Please keep in mind that for the time being, we cannot guarantee a free spot at this business. That\u2019s why we provide the option to choose a backupslot, which we will book you into if your first choice isn\u2019t free.\r\n      </span>}\r\n      backupText2={resList.filter(r => r.isBackup).length > 0 ? <span>\r\n        Please keep in mind that for the time being, we cannot guarantee a free spot at this business. To help us bring this functionality to everyone, you can share this service with your friends! Thanks for understanding. :)\r\n      </span> : <span>\r\n        To help us bring real-time availability information to everyone, you can share this service with your friends! Thanks for understanding. :)\r\n      </span>}\r\n    />\r\n    <ButtonWrap>\r\n      <SecondaryButton inSearch={false} style={{ alignSelf: 'start' }} to={`/${place.id}`}>View Place Details</SecondaryButton>\r\n    </ButtonWrap>\r\n    <Form method='post' ref={formRef}>\r\n      <IdInput name={'username'} value={username} /> \r\n      <IdInput name={'placeId'} value={params.placeId ?? ''} />\r\n      <HeaderBar color={'primary'}>\r\n        <Title>Make a Reservation</Title>\r\n        <Flex>\r\n          <Title>Date</Title>\r\n          <DateInput disablePast={true} name={'date'} defaultValue={date} onChange={setDate} />\r\n        </Flex>\r\n      </HeaderBar>\r\n      { date && <ReservableTimes\r\n        startName='start[]'\r\n        endName='end[]'\r\n        reservationBackupName='reservationBackup[]'\r\n        reservationIdName='reservationId[]'\r\n        reservableIdName='reservableId[]'\r\n        reservables={reservables}\r\n        setResList={setResList}\r\n        date={date}\r\n        openingTime={place.openingTimes.sort((a, b) => a.day - b.day)[getDayOfWeek(date)]}\r\n      /> }\r\n      <SlotList>\r\n        <WhiteSlotListTitle>{resList.filter(r => !r.isBackup).length == 0 ? <i style={{ fontWeight: 'normal' }}>Nothing selected.</i> :'Picked timeslots'}</WhiteSlotListTitle>\r\n        { resList.filter(r => !r.isBackup).map(r => r.startTime && r.endTime && <ResE>\r\n          <Indicator style={{ padding: '0.5rem', whiteSpace: 'nowrap' }}>{reservables.find(x => x.id == r.reservableId)?.name}</Indicator>\r\n          <FlexSL>\r\n            <SlotText>Date: {getStringDateValue(r.startTime)}</SlotText>\r\n            <SlotText>Time: {getStringTimeValue(r.startTime)} - {getStringTimeValue(new Date(r.endTime))}</SlotText>\r\n          </FlexSL>\r\n        </ResE>) }\r\n      </SlotList>\r\n      <HeaderBar color='gray'>\r\n        <Title>Backup timeslot</Title>\r\n        <SecondaryButtonBtn onClick={(e) => {\r\n          e.preventDefault();\r\n          setBackup(!backup);\r\n        }}>{ !backup ? 'Choose a' : 'Remove'} backup timeslot</SecondaryButtonBtn>\r\n      </HeaderBar>\r\n      { backup && date && <ReservableTimes\r\n        backup={true}\r\n        startName='start[]'\r\n        endName='end[]'\r\n        reservationBackupName='reservationBackup[]'\r\n        reservationIdName='reservationId[]'\r\n        reservableIdName='reservableId[]'\r\n        reservables={reservables}\r\n        date={date}\r\n        setResList={setResList}\r\n        openingTime={place.openingTimes.sort((a, b) => a.day - b.day)[getDayOfWeek(date)]}\r\n      /> }\r\n      <BackupSlotList>\r\n        <SlotListTitle>{resList.filter(r => r.isBackup).length == 0 ? <i style={{ fontWeight: 'normal' }}>Nothing selected.</i> : 'Picked backup timeslots'}</SlotListTitle>\r\n        { resList.filter(r => r.isBackup).map(r => r.startTime && r.endTime && <ResE>\r\n          <Indicator style={{ padding: '0.5rem' }}>{reservables.find(x => x.id == r.reservableId)?.name}</Indicator>\r\n          <FlexSL>\r\n            <BackupSlotText>{getStringDateValue(r.startTime)}</BackupSlotText>\r\n            <BackupSlotText>{getStringTimeValue(r.startTime)} - {getStringTimeValue(new Date(r.endTime))}</BackupSlotText>\r\n          </FlexSL>\r\n        </ResE>) }\r\n      </BackupSlotList>\r\n      <HeaderBar color='none' style={{ marginBottom: '0px' }}>\r\n        <Title>Additional info</Title>\r\n      </HeaderBar>\r\n      <TextWrap>\r\n        <TextInput name={'note'} title={'Note'} defaultValue={actionData?.fields?.note ?? ''} />\r\n      </TextWrap>\r\n      <MainButtonBtn disabled={resList.filter(r => !r.isBackup).length == 0} style={{ margin: '2rem auto' }} onClick={(e) => {\r\n        e.preventDefault();\r\n        setConfirmationDialog(true);\r\n      }}>Create reservation<AnglesRightIcon height='1.5rem' /></MainButtonBtn>\r\n      {\r\n        actionData?.formError && <p>{actionData.formError ?? ''}</p>\r\n      }\r\n    </Form>\r\n  </Wrap>)\r\n}", "import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport AngleLeftIcon from \"~/assets/icons/AngleLeft\";\r\nimport AngleRightIcon from \"~/assets/icons/AngleRight\";\r\nimport CalendarIcon from \"~/assets/icons/Calendar\";\r\nimport { styles } from \"~/constants/styles\";\r\nimport { useLangs } from \"~/contexts/langsContext\";\r\nimport { getInputDateFromString, getStringDateValue } from \"~/utils/forms\";\r\n\r\ninterface DateInputProps {\r\n  name: string,\r\n  defaultValue: Date | null,\r\n  title?: string,\r\n  onChange: React.Dispatch<React.SetStateAction<Date | null>>,\r\n  disablePast?: boolean\r\n}\r\n\r\nconst DateInputField = styled.input`\r\n  font-size: 0.8rem;\r\n  line-height: 2rem;\r\n  padding: 0rem 1rem;\r\n  border: 1.5px solid ${styles.colors.gray[30]};\r\n  border-radius: 0.3rem;\r\n  outline: none;\r\n  width: 5ch;\r\n  &:focus {\r\n    border: 1.5px solid ${styles.colors.gray[50]};\r\n  }\r\n`;\r\n\r\nconst Calendar = styled.div`\r\n  width: 15rem;\r\n  height: 15rem;\r\n  padding: 0.5rem 1rem;\r\n  position: absolute;\r\n  right: 0;\r\n  margin-top: 0.3rem;\r\n  background-color: ${styles.colors.white};\r\n  border: 1px solid ${styles.colors.gray[140]}40;\r\n  box-shadow: ${styles.shadows[0]};\r\n  border-radius: 0.5rem;\r\n  z-index: 6;\r\n  @media(max-width: 500px) {\r\n    position: fixed;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n`;\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0.3rem 0rem 0.1rem;\r\n  gap: 0.4rem;\r\n`;\r\n\r\nconst Body = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(7, minmax(0, 1fr));\r\n`;\r\n\r\nconst Button = styled.button<{ selected?: boolean }>`\r\n  border-radius: 100%;\r\n  height: 2rem;\r\n  width: 2rem;\r\n  border: none;\r\n  cursor: pointer;\r\n  color: ${props => props.selected ? styles.colors.white : styles.colors.black};\r\n  &:disabled {\r\n    color: ${styles.colors.gray[60]};\r\n  }\r\n  &:hover {\r\n    background-color: ${props => props.selected ? styles.colors.primary : styles.colors.gray[20]};\r\n  }\r\n  background-color: ${props => props.selected ? styles.colors.primary : styles.colors.white};\r\n`;\r\n\r\ninterface YearMonth {\r\n  year: number;\r\n  month: number;\r\n}\r\n\r\nconst getMaxDayOfMonth = (year: number, month: number) => (\r\n  month === 1 && year % 400 === 0 ? 29 : \r\n  month === 1 && year % 100 === 0 ? 28 : \r\n  month === 1 && year % 4 === 0 ? 29 : \r\n  [3, 5, 8, 10].includes(month) ? 30 : \r\n  31\r\n)\r\n\r\nconst getDateFromParts = (year: number, month: number, date: number) => (\r\n  `${year?.toString()}-${month < 9 ? '0' : ''}${(month + 1).toString()}-${date < 10 ? '0' : ''}${date?.toString()}`\r\n)\r\n\r\nconst getYearMonthFromValue = (str: string): YearMonth => ({ year: parseInt(str.split('-')[0]), month: parseInt(str.split('-')[1]) - 1 });\r\n\r\ninterface DayButtonProps {\r\n  date: number,\r\n  onClick: () => void,\r\n  selected?: boolean,\r\n  disabled?: boolean\r\n}\r\n\r\nconst Wrap = styled.button`\r\n  padding: 0.5rem 0.8rem;\r\n  display: flex;\r\n  gap: 1rem;\r\n  margin: 0;\r\n  cursor: pointer;\r\n  align-items: center;\r\n  border: 1.5px solid ${styles.colors.gray[140]}40;\r\n  border-radius: 0.5rem;\r\n  background-color: ${styles.colors.white};\r\n`;\r\n\r\nconst DateDisplay = styled.p`\r\n  margin: 0;\r\n  font-size: 0.9rem;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Month = styled.p`\r\n  margin: 0;\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nconst HeaderButton = styled.button`\r\n  border: none;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 1.2rem;\r\n  border-radius: 0.3rem;\r\n  &>svg {\r\n    height: 1.1rem;\r\n  }\r\n  &:hover {\r\n    background-color: ${styles.colors.gray[20]};\r\n  }\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: 5;\r\n`;\r\n\r\nconst RelativeWrapper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nconst DayButton: React.FC<DayButtonProps> = ({ disabled, date, selected, onClick }: DayButtonProps) => <Button disabled={disabled} selected={selected} onClick={(e) => {\r\n  e.preventDefault();\r\n  onClick();\r\n}}>{date.toString()}</Button>\r\n\r\nexport const DateInput: React.FC<DateInputProps> = ({ disablePast, name, defaultValue, title, onChange }: DateInputProps) => {\r\n\r\n  const [ value, setValue ] = React.useState<string>(getInputDateFromString(defaultValue));\r\n  const [ { year, month }, setYearMonth ] = React.useState<YearMonth>({ year: (new Date()).getFullYear(), month: (new Date().getMonth()) });\r\n  const [ date, setDate ] = React.useState<number | null>((new Date()).getDate());\r\n  const [ showCalendar, setShowCalendar ] = React.useState(false);\r\n\r\n  const { translations: l } = useLangs();\r\n\r\n  React.useEffect(() => {\r\n    setValue(date ? getDateFromParts(year, month, date) : '');\r\n    onChange(date ? new Date(year, month, date) : null)\r\n  }, [date])\r\n\r\n  const startPadding = (new Date(year, month, 1)).getDay() == 0 ? 6 : (new Date(year, month, 1)).getDay() - 1;\r\n  const maxDayOfPreviousMonth = getMaxDayOfMonth(month > 0 ? year : year - 1, month > 0 ? month - 1 : month + 11);\r\n\r\n  const days = [...Array(getMaxDayOfMonth(year, month)).keys()];\r\n  const endPadding = 7 - (days.length + startPadding) % 7;\r\n\r\n  return <RelativeWrapper>\r\n    {title && <label>{title}</label>}\r\n    <Wrap onClick={(e) => {\r\n      e.preventDefault();\r\n      setShowCalendar(!showCalendar);\r\n    }}>\r\n      <CalendarIcon height={'1rem'} />\r\n      <DateDisplay>{getStringDateValue(new Date(value))}</DateDisplay>\r\n    </Wrap>\r\n    { showCalendar && <>\r\n      <Overlay onClick={() => {\r\n        setShowCalendar(false);\r\n      }} />\r\n      <Calendar>\r\n        <Header>\r\n          <HeaderButton onClick={(e) => {\r\n            e.preventDefault();\r\n            setYearMonth({\r\n              year: month == 0 ? year - 1 : year,\r\n              month: month == 0 ? 11 : month - 1\r\n            });\r\n          }}><AngleLeftIcon /></HeaderButton>\r\n          <Month>{l.months[month]}</Month>\r\n          <HeaderButton onClick={(e) => {\r\n            e.preventDefault();\r\n            setYearMonth({\r\n              year: month == 11 ? year + 1 : year,\r\n              month: month == 11 ? 0 : month + 1\r\n            });\r\n          }}><AngleRightIcon /></HeaderButton>\r\n        </Header>\r\n        <Body>\r\n          { [...Array(startPadding).keys()].map((_, i) => maxDayOfPreviousMonth - i).reverse().map(d => <DayButton\r\n            disabled={true}\r\n            key={d}\r\n            onClick={() => {\r\n              setYearMonth({\r\n                year,\r\n                month: month - 1\r\n              });\r\n              setDate(d);\r\n              setShowCalendar(false);\r\n            }}\r\n            date={d}\r\n          />) }\r\n          { days.map(d => <DayButton\r\n            key={d + 32}\r\n            disabled={disablePast && (new Date().getDate() > d + 1 && new Date().getMonth() == month) || (new Date().getMonth() > month && new Date().getFullYear() == year) || new Date().getFullYear() > year}\r\n            selected={d + 1 == date && getYearMonthFromValue(value).month == month && getYearMonthFromValue(value).year == year}\r\n            date={d + 1}\r\n            onClick={() => {\r\n              setDate(d + 1);\r\n              setShowCalendar(false);\r\n            }}\r\n          />) }\r\n          { [...Array(endPadding).keys()].map(d => <DayButton\r\n            disabled={true}\r\n            key={d + 64}\r\n            date={d + 1}\r\n            onClick={() => {\r\n              setDate(d + 1);\r\n              setYearMonth({\r\n                year,\r\n                month: month + 1\r\n              });\r\n              setShowCalendar(false);\r\n            }}\r\n          />) }\r\n        </Body>\r\n      </Calendar>\r\n    </>}\r\n    <input name={name} type='date' value={value} readOnly={true} hidden={true} />\r\n  </RelativeWrapper>\r\n\r\n}\r\n", "import { SVGProps } from 'react';\r\nimport { styles } from '~/constants/styles';\r\n\r\nconst AngleLeftIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    viewBox=\"0 0 256 512\"\r\n    style={{\r\n      height: props.height\r\n    }}\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M192 448c-8.188 0-16.38-3.125-22.62-9.375l-160-160c-12.5-12.5-12.5-32.75 0-45.25l160-160c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25L77.25 256l137.4 137.4c12.5 12.5 12.5 32.75 0 45.25C208.4 444.9 200.2 448 192 448z\"\r\n      fill={props.fill ?? styles.colors.black}\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default AngleLeftIcon;", "import { SVGProps } from 'react';\r\nimport { styles } from '~/constants/styles';\r\n\r\nconst CalendarIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    viewBox=\"0 0 448 512\"\r\n    style={{\r\n      height: props.height\r\n    }}\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M160 32V64H288V32C288 14.33 302.3 0 320 0C337.7 0 352 14.33 352 32V64H400C426.5 64 448 85.49 448 112V160H0V112C0 85.49 21.49 64 48 64H96V32C96 14.33 110.3 0 128 0C145.7 0 160 14.33 160 32zM0 192H448V464C448 490.5 426.5 512 400 512H48C21.49 512 0 490.5 0 464V192zM64 304C64 312.8 71.16 320 80 320H112C120.8 320 128 312.8 128 304V272C128 263.2 120.8 256 112 256H80C71.16 256 64 263.2 64 272V304zM192 304C192 312.8 199.2 320 208 320H240C248.8 320 256 312.8 256 304V272C256 263.2 248.8 256 240 256H208C199.2 256 192 263.2 192 272V304zM336 256C327.2 256 320 263.2 320 272V304C320 312.8 327.2 320 336 320H368C376.8 320 384 312.8 384 304V272C384 263.2 376.8 256 368 256H336zM64 432C64 440.8 71.16 448 80 448H112C120.8 448 128 440.8 128 432V400C128 391.2 120.8 384 112 384H80C71.16 384 64 391.2 64 400V432zM208 384C199.2 384 192 391.2 192 400V432C192 440.8 199.2 448 208 448H240C248.8 448 256 440.8 256 432V400C256 391.2 248.8 384 240 384H208zM320 432C320 440.8 327.2 448 336 448H368C376.8 448 384 440.8 384 432V400C384 391.2 376.8 384 368 384H336C327.2 384 320 391.2 320 400V432z\"\r\n      fill={props.fill ?? styles.colors.black}\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default CalendarIcon;", "import { OpeningTime, Place, Reservable, Reservation } from \"@prisma/client\"\r\nimport React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { styles } from \"~/constants/styles\"\r\nimport { useLangs } from \"~/contexts/langsContext\"\r\nimport { Res } from \"~/routes/$placeId/reserve\"\r\nimport { ReservableTypeWithTexts, ReservableWithReservations, ReservationGroupForEdit, ReservationStatus, Time, TimeSection } from \"~/types/types\"\r\nimport { areDatesEqual, getInputDateFromString, getStringTimeValue } from \"~/utils/forms\"\r\nimport { IdInput } from \"./inputs/ObjectInput\"\r\n\r\ninterface ReservableTimesProps {\r\n  reservables: (ReservableWithReservations & {\r\n    ReservableType: ReservableTypeWithTexts\r\n  })[],\r\n  date: Date,\r\n  openingTime: OpeningTime,\r\n  startName: string,\r\n  endName: string,\r\n  reservableIdName: string,\r\n  defaultReservationGroup?: ReservationGroupForEdit,\r\n  reservationIdName: string,\r\n  backup?: boolean,\r\n  reservationBackupName: string,\r\n  setResList: React.Dispatch<React.SetStateAction<Res[]>>\r\n}\r\n\r\ntype ReservableGroup = {\r\n  typeId: string\r\n  typeName: string,\r\n  reservables: (ReservableWithReservations & {\r\n    ReservableType: ReservableTypeWithTexts\r\n  })[]\r\n}\r\n\r\nexport const ReservableTimes: React.FC<ReservableTimesProps> = ({ reservationBackupName, setResList, backup = false, reservationIdName, defaultReservationGroup, reservableIdName, reservables, date, openingTime, startName, endName }: ReservableTimesProps) => {\r\n\r\n  const { lang } = useLangs();\r\n\r\n  const reservableGroups: ReservableGroup[] = [];\r\n  reservables.forEach(r => {\r\n    if (!r.ReservableType) return;\r\n    let rg = reservableGroups.find(rgx => rgx.typeId == r.ReservableType.id);\r\n    if (rg != null) {\r\n      rg.reservables.push(r);\r\n    }\r\n    else {\r\n      reservableGroups.push({\r\n        typeId: r.ReservableType.id,\r\n        typeName: r.ReservableType.multiLangName ? r.ReservableType.multiLangName[lang] : '',\r\n        reservables: [ r ]\r\n      });\r\n    }\r\n  });\r\n\r\n  console.log(reservableGroups);\r\n\r\n  return <GroupWrap>\r\n    {reservableGroups.map(rg => <ReservableGroupSection\r\n      key={rg.typeId}\r\n      reservableGroup={rg}\r\n      date={date}\r\n      openingTime={openingTime}\r\n      startName={startName}\r\n      endName={endName}\r\n      backup={backup}\r\n      reservableIdName={reservableIdName}\r\n      defaultReservation={undefined}\r\n      defaultReservationGroup={defaultReservationGroup}\r\n      reservationIdName={reservationIdName}\r\n      reservationBackupName={reservationBackupName}\r\n      setResList={setResList} />\r\n    )}\r\n  </GroupWrap>\r\n}\r\n\r\ninterface ReservableGroupSectionProps {\r\n  reservableGroup: ReservableGroup;\r\n  date: Date;\r\n  openingTime: OpeningTime;\r\n  startName: string;\r\n  endName: string;\r\n  reservableIdName: string;\r\n  defaultReservation: Reservation & {\r\n    reservable: (Reservable & {\r\n      place: (Place & {\r\n        openingTimes: OpeningTime[];\r\n        reservables: ReservableWithReservations[];\r\n      }) | null;\r\n    }) | null;\r\n  } | undefined,\r\n  defaultReservationGroup?: ReservationGroupForEdit,\r\n  reservationIdName: string,\r\n  backup?: boolean,\r\n  reservationBackupName: string,\r\n  setResList: React.Dispatch<React.SetStateAction<Res[]>>\r\n}\r\n\r\nconst TypeName = styled.h3`\r\n  align-self: end;\r\n  text-align: end;\r\n  position: sticky;\r\n  left: -30%;\r\n  font-weight: 600;\r\n  padding: 1.6rem 1rem 0.5rem;\r\n  margin-bottom: 0;\r\n  margin-top: 0;\r\n  background-color: ${styles.colors.gray[5]};\r\n`;\r\n\r\nconst Times = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 32px;\r\n  padding: 1.6rem 1rem 0.5rem;\r\n  background-color: ${styles.colors.primary_background};\r\n  & p {\r\n    width: 44px;\r\n    text-align: center;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst GroupWrap = styled.div`\r\n  display: grid;\r\n  width: 100%;\r\n  overflow-x: scroll;\r\n  grid-template-columns: max-content 1fr;\r\n  position: relative;\r\n`;\r\n\r\nconst ReservableGroupSection: React.FC<ReservableGroupSectionProps> = ({\r\n  reservableGroup, date, openingTime, startName, endName, reservableIdName, defaultReservation,\r\n  defaultReservationGroup, reservationIdName, backup, reservationBackupName, setResList\r\n}) => {\r\n\r\n  const openMinutes = getDiffBetweenTwoDates(openingTime.close, openingTime.open);\r\n  const openSinceMinutes = new Date(openingTime.open).getMinutes() + new Date(openingTime.open).getHours() * 60;\r\n  const minMin = reservableGroup.reservables[0].minimumReservationTime;\r\n  // Not used right now, might be in the future\r\n  const slotCapacity = reservableGroup.reservables[0].reservationsPerSlot;\r\n  const sections = Math.floor(openMinutes / Math.max(1, minMin));\r\n  const timeTitle = [...Array(Math.floor(sections / 2)).keys()].map(s => {\r\n    const currentMins = openSinceMinutes + openMinutes / sections * s * 2;\r\n    return getStringTimeValue(new Date(0, 0, 0, Math.floor(currentMins / 60), currentMins % 60));\r\n  });\r\n\r\n  return <>\r\n    <TypeName>{reservableGroup.typeName}</TypeName>\r\n    <Times>\r\n      {timeTitle.map((t, i) => <p key={i}>{t}</p>)}\r\n    </Times>\r\n    {reservableGroup.reservables.map(r => <ReservableSection\r\n      key={r.id}\r\n      reservable={r}\r\n      date={date}\r\n      openingTime={openingTime}\r\n      startName={startName}\r\n      endName={endName}\r\n      backup={backup}\r\n      reservableIdName={reservableIdName}\r\n      defaultReservation={defaultReservation}\r\n      reservationIdName={reservationIdName}\r\n      defaultReservationGroup={defaultReservationGroup}\r\n      reservationBackupName={reservationBackupName}\r\n      setResList={setResList}\r\n    />)}\r\n  </>\r\n}\r\n\r\nconst getTotalMinutes = (time: Time) => time.hour * 60 + time.minute;\r\n\r\nconst getTimeOfTotalMinutes = (minutes: number): Time => ({\r\n  hour: Math.floor(minutes / 60),\r\n  minute: minutes % 60,\r\n})\r\n\r\nconst doSectionsOverlap = (section1: TimeSection, section2: TimeSection | null) => {\r\n  return section2 != null && (!(getTotalMinutes(section1.end) <= getTotalMinutes(section2.start) || getTotalMinutes(section2.end) <= getTotalMinutes(section1.start)))\r\n}\r\n\r\nconst getDiffBetweenTwoDates = (close: string | Date, open: string | Date) => {\r\n  const millis = new Date(close).getTime() - new Date(open).getTime();\r\n  return millis / 1000 / 60;\r\n}\r\n\r\nconst getTimeSectionOfReservation = (reservation: Reservation) => {\r\n  return {\r\n    start: {\r\n      hour: new Date(reservation.start).getHours(),\r\n      minute: new Date(reservation.start).getMinutes(),\r\n    },\r\n    end: {\r\n      hour: new Date(reservation.end).getHours(),\r\n      minute: new Date(reservation.end).getMinutes(),\r\n    }\r\n  }\r\n}\r\n\r\nconst doDaysMatch = (date1: Date | string, date2: Date | string, date3: Date | string) => {\r\n  return (\r\n    new Date(date1).getFullYear() === new Date(date2).getFullYear() && new Date(date1).getFullYear() === new Date(date3).getFullYear() &&\r\n    new Date(date1).getMonth() === new Date(date2).getMonth() && new Date(date1).getMonth() === new Date(date3).getMonth() &&\r\n    new Date(date1).getDate() === new Date(date2).getDate() && new Date(date1).getDate() === new Date(date3).getDate()\r\n  );\r\n}\r\n\r\nconst Section = styled.button<{taken: boolean, selected: boolean}>`\r\n  border: none;\r\n  border-radius: 0.25rem;\r\n  height: 1.5rem;\r\n  flex-shrink: 0;\r\n  width: 36px;\r\n  cursor: pointer;\r\n  transition: box-shadow 0.15s cubic-bezier(0.34, 1.56, 0.64, 1);\r\n  &:hover {\r\n    box-shadow: ${styles.shadows[2]};\r\n  }\r\n  background-color: ${props => props.selected ? styles.colors.action : props.taken ? styles.colors.busy : styles.colors.gray[70]};\r\n`;\r\n\r\nconst SectionWrap = styled.div`\r\n  display: flex;\r\n  background-color: ${styles.colors.primary_background};\r\n  gap: 2px;\r\n  padding: 0.5rem 2rem 0.5rem 0;\r\n  padding-left: 2.375rem;\r\n`;\r\n\r\nconst Title = styled.p`\r\n  text-align: end;\r\n  position: sticky;\r\n  left: -30%;\r\n  padding: 0.5rem 1rem;\r\n  align-self: stretch;\r\n\r\n  margin: 0;\r\n  font-weight: 500;\r\n  background-color: ${styles.colors.gray[5]};\r\n`;\r\n\r\nconst CannotReserve = styled.div`\r\n  margin: 0;\r\n  font-weight: 500;\r\n  font-size: 0.8rem;\r\n  height: 1.5rem;\r\n`;\r\n\r\n\r\ninterface ReservableSectionProps {\r\n  reservable: (ReservableWithReservations & {\r\n    ReservableType: ReservableTypeWithTexts\r\n  });\r\n  date: Date;\r\n  openingTime: OpeningTime;\r\n  startName: string;\r\n  endName: string;\r\n  reservableIdName: string;\r\n  defaultReservation: Reservation & {\r\n    reservable: (Reservable & {\r\n      place: (Place & {\r\n        openingTimes: OpeningTime[];\r\n        reservables: ReservableWithReservations[];\r\n      }) | null;\r\n    }) | null;\r\n  } | undefined,\r\n  defaultReservationGroup?: ReservationGroupForEdit,\r\n  reservationIdName: string,\r\n  backup?: boolean,\r\n  reservationBackupName: string,\r\n  setResList: React.Dispatch<React.SetStateAction<Res[]>>\r\n}\r\n\r\nconst ReservableSection: React.FC<ReservableSectionProps> = ({ defaultReservationGroup, setResList, reservationBackupName, backup, reservationIdName, defaultReservation, reservableIdName, reservable, date, openingTime, startName, endName }: ReservableSectionProps) => {\r\n\r\n  const openMinutes = getDiffBetweenTwoDates(openingTime.close, openingTime.open);\r\n  const openSinceMinutes = new Date(openingTime.open).getMinutes() + new Date(openingTime.open).getHours() * 60;\r\n  const minMin = reservable.minimumReservationTime;\r\n  const sections = Math.floor(openMinutes / Math.max(1, minMin));\r\n  const timeSections = [...Array(sections).keys()].map(s => ({\r\n    start: { minute: Math.round((s * minMin + openSinceMinutes) % 60), hour: Math.floor((s * minMin + openSinceMinutes) / 60) },\r\n    end: { minute: Math.round(((s + 1) * minMin + openSinceMinutes) % 60), hour: Math.floor(((s + 1) * minMin + openSinceMinutes) / 60) }\r\n  }));\r\n\r\n  const [ selectedRange, setSelectedRange ] = React.useState<TimeSection | null>(defaultReservation ? getTimeSectionOfReservation(defaultReservation) : null);\r\n  const [ selectedDate, setSelectedDate ] = React.useState<Date>(date);\r\n\r\n  const maxReservableDate = new Date();\r\n  maxReservableDate.setDate(maxReservableDate.getDate() + reservable.reservableDaysAhead);\r\n\r\n  return <>\r\n    <Title>{reservable.name}</Title>\r\n    <SectionWrap>\r\n      { date.getTime() > maxReservableDate.getTime() ? <CannotReserve>You cannot yet reserve this far ahead.</CannotReserve> : timeSections.map(s => (\r\n        <Section\r\n          taken={reservable.reservations.filter(\r\n            r => (\r\n              doDaysMatch(date, r.start, r.end) &&                                  // Is the reservation on the same?\r\n              doSectionsOverlap(getTimeSectionOfReservation(r), s) &&               // Is the reservation during the same time?\r\n              !defaultReservationGroup?.reservations.find(dr => dr.id == r.id) &&   // Is it done by someone else?\r\n              r.status != ReservationStatus.Cancelled                               // Is it active?\r\n            )\r\n          ).length >= reservable.reservationsPerSlot}\r\n          key={getTotalMinutes(s.start)}\r\n          selected={selectedRange != null && areDatesEqual(date, selectedDate) && getTotalMinutes(s.start) >= getTotalMinutes(selectedRange.start) && getTotalMinutes(s.start) < getTotalMinutes(selectedRange.end)}\r\n          onClick={(e) => {\r\n            let newRange: TimeSection | null = null;\r\n            if (selectedRange == null || date != selectedDate) {\r\n              newRange = s;\r\n            }\r\n            else if (getTotalMinutes(s.start) >= getTotalMinutes(selectedRange.end)) {\r\n              newRange = { start: selectedRange.start, end: s.end };\r\n            }\r\n            else if (getTotalMinutes(s.start) < getTotalMinutes(selectedRange.start)) {\r\n              newRange = { start: s.start, end: getTimeOfTotalMinutes(getTotalMinutes(selectedRange.start) + minMin) };\r\n            }\r\n            else if (getTotalMinutes(selectedRange.start) == getTotalMinutes(s.start) && getTotalMinutes(s.end) == getTotalMinutes(selectedRange.end)) {\r\n              newRange = null;\r\n            }\r\n            else if (getTotalMinutes(selectedRange.start) <= getTotalMinutes(s.start) && getTotalMinutes(s.start) <= getTotalMinutes(selectedRange.end)) {\r\n              newRange = { start: selectedRange.start, end: s.end };\r\n            }\r\n            const overlap = reservable.reservations.filter(\r\n              r => (\r\n                doDaysMatch(date, r.start, r.end) &&                                  // Is the reservation on the same?\r\n                doSectionsOverlap(getTimeSectionOfReservation(r), s) &&               // Is the reservation during the same time?\r\n                !defaultReservationGroup?.reservations.find(dr => dr.id == r.id) &&   // Is it done by someone else?\r\n                r.status != ReservationStatus.Cancelled                               // Is it active?\r\n              )\r\n            ).length >= reservable.reservationsPerSlot;\r\n            setSelectedRange(overlap ? selectedRange : newRange);\r\n            setSelectedDate(overlap ? selectedDate : date);\r\n            setResList(resList => {\r\n              const r = overlap ? selectedRange: newRange;\r\n              const d = overlap ? selectedDate: date;\r\n              const startDate = r ? new Date(d.getFullYear(), d.getMonth(), d.getDate(), r.start.hour, r.start.minute) : null;\r\n              const endDate = r ? new Date(d.getFullYear(), d.getMonth(), d.getDate(), r.end.hour, r.end.minute) : null;\r\n              const obj = (startDate?.getTime() ?? 0) < (endDate?.getTime() ?? 0) ? { reservableId: reservable.id, startTime: startDate, endTime: endDate, isBackup: backup ?? false } : null;\r\n              const arr =  resList.filter(rx => rx.reservableId != reservable.id || rx.isBackup != backup);\r\n              if (obj != null) arr.push(obj);\r\n              return arr;\r\n            })\r\n            e.preventDefault();\r\n          }}\r\n        ></Section>\r\n      )) }\r\n      {/* Combine these into just start and end dateTime inputs*/}\r\n      {selectedRange && <IdInput name={reservationBackupName} value={backup ? '1' : '0'} />}\r\n      {selectedRange && <IdInput name={reservationIdName} value={defaultReservation ? defaultReservation.id : '-1'} /> }\r\n      {selectedRange && <input hidden={true} readOnly={true} name={startName} type='datetime-local' value={selectedRange ?\r\n        new Date(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate(), selectedRange.start.hour, selectedRange.start.minute - new Date().getTimezoneOffset()).toISOString().slice(0, 16) : ''\r\n      } /> }\r\n      {selectedRange && <input hidden={true} readOnly={true} name={endName} type='datetime-local' value={selectedRange ?\r\n        new Date(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate(), selectedRange.end.hour, selectedRange.end.minute - new Date().getTimezoneOffset()).toISOString().slice(0, 16) : ''\r\n      } /> }\r\n      {selectedRange && <IdInput name={reservableIdName} value={reservable.id} />}\r\n      {/* <input readOnly={true} name={startName} type='time' value={getStringTimeValue(new Date(0, 0, 0, selectedRange?.start.hour, selectedRange?.start.minute))} />\r\n      <input readOnly={true} name={endName} type='time' value={getStringTimeValue(new Date(0, 0, 0, selectedRange?.end.hour, selectedRange?.end.minute))} />\r\n      <input readOnly={true} type='date' value={getInputDateFromString(selectedDate)} /> */}\r\n    </SectionWrap>\r\n  </>\r\n}", "import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { styles } from \"~/constants/styles\";\r\nimport { Reservable } from \"~/models/reservable.server\";\r\nimport { Reservation } from \"~/models/reservation.server\";\r\nimport { Res } from \"~/routes/$placeId/reserve\";\r\nimport { ReservableTypeWithTexts } from \"~/types/types\";\r\nimport { getStringDateValue, getStringTimeValue } from \"~/utils/forms\";\r\nimport { Indicator } from \"./place/facilities-indicator\";\r\nimport { MainButton, MainButtonBtn, SecondaryButtonBtn } from \"./place/place-summary\";\r\n\r\ninterface ConfirmationDialogProps {\r\n  hidden: boolean,\r\n  onConfirm: () => void,\r\n  title: string,\r\n  text: string,\r\n  confirmText: string,\r\n  cancelText: string,\r\n  close: () => void,\r\n  subHeaderText: string,\r\n  resList: Res[],\r\n  reservables: (Reservable & {\r\n    reservations: Reservation[];\r\n  } & {\r\n      ReservableType: ReservableTypeWithTexts;\r\n  })[],\r\n  backupTitle: string,\r\n  backupText1: React.ReactNode,\r\n  backupText2: React.ReactNode,\r\n}\r\n\r\nconst Wrap = styled.div<{ hidden: boolean }>`\r\n  position: fixed;\r\n  visibility: ${props => props.hidden ? 'hidden' : 'visible'};\r\n  transition: opacity 0.15s ease-in-out, transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);\r\n  transform: scale(0.9);\r\n  opacity: 0;\r\n  z-index: 10;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Window = styled.div`\r\n  background-color: ${styles.colors.white};\r\n  box-shadow: ${styles.shadows[0]};\r\n  width: 968px;\r\n  display: flex;\r\n  max-width: 100%;\r\n  border-radius: 1rem;\r\n  @media (max-width: 650px) {\r\n    width: 100%;\r\n    border-radius: 0;\r\n  }\r\n  flex-direction: column;\r\n  gap: 1.3rem;\r\n  padding: 1.5rem;\r\n  z-index: 8;\r\n  position: relative;\r\n`;\r\n\r\nconst Backdrop = styled.div<{ hidden?: boolean }>`\r\n  position: fixed;\r\n  z-index: 7;\r\n  display: ${props => props.hidden ? 'none' : ''};\r\n  background-color: ${styles.colors.black}40;\r\n  top: 0;\r\n  left: 0;\r\n  transform-origin: center;\r\n  transform: scale(150%);\r\n  width: 100vw;\r\n  height: 100vh;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  margin: 0px;\r\n  font-size: 1.375rem;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  margin: 0px;\r\n  font-weight: 500;\r\n  font-size: 0.875rem;\r\n`;\r\n\r\nconst ButtonRow = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 1.5rem;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst SlotList = styled.div`\r\n  padding: 1rem 1.6rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (min-width: 500px) {\r\n    border-radius: 0.5rem;\r\n  }\r\n  gap: 1.5rem;\r\n  background-color: ${styles.colors.primary};\r\n`;\r\n\r\nconst BackupSlotList = styled(SlotList)`\r\n  background-color: ${styles.colors.gray[5]};\r\n`;\r\n\r\nconst ResE = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  @media (max-width: 400px) {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n  }\r\n`;\r\n\r\nconst SlotListTitle = styled.div`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst WhiteSlotListTitle = styled(SlotListTitle)`\r\n  color: ${styles.colors.white};\r\n`;\r\n\r\nconst BackupSlotText = styled.p`\r\n\r\n`;\r\n\r\nconst SlotText = styled(BackupSlotText)`\r\n  color: ${styles.colors.white};  \r\n`;\r\n\r\nconst FlexSL = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  column-gap: 1rem;\r\n  row-gap: 0.4rem;\r\n  flex-wrap: wrap;\r\n  & > p {\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport const ReserveConfirmationDialog: React.FC<ConfirmationDialogProps> = ({ subHeaderText, reservables, resList, hidden, title, backupTitle, backupText1, backupText2, confirmText, cancelText, onConfirm, close }) => {\r\n\r\n  const wrap = React.useRef<HTMLDivElement>(null);\r\n\r\n  React.useEffect(() => {\r\n    setTimeout(() => {\r\n      if (wrap.current) {\r\n        wrap.current.style.opacity = hidden ? '0' : '1';\r\n        wrap.current.style.transform = hidden ? 'scale(0.9)' : 'scale(1)';\r\n      }\r\n    }, 100);\r\n  }, [hidden]);\r\n\r\n  return <Wrap hidden={hidden} ref={wrap}>\r\n    <Backdrop onClick={close} />\r\n    <Window>\r\n      <Title>{title}</Title>\r\n      <Text>{subHeaderText}</Text>\r\n      { resList.filter(r => !r.isBackup).length > 0 && <SlotList>\r\n        <WhiteSlotListTitle>{resList.filter(r => r.isBackup).length > 0 ? `Preferred timeslot${resList.filter(r => !r.isBackup).length > 1 ? 's' : ''}` :`Picked timeslot${resList.filter(r => !r.isBackup).length > 1 ? 's' : ''}`}</WhiteSlotListTitle>\r\n        { resList.filter(r => !r.isBackup).map(r => r.startTime && r.endTime && <ResE>\r\n          <Indicator style={{ padding: '0.5rem', whiteSpace: 'nowrap' }}>{reservables.find(x => x.id == r.reservableId)?.name}</Indicator>\r\n          <FlexSL>\r\n            <SlotText>Date: {getStringDateValue(r.startTime)}</SlotText>\r\n            <SlotText>Time: {getStringTimeValue(r.startTime)} - {getStringTimeValue(new Date(r.endTime))}</SlotText>\r\n          </FlexSL>\r\n        </ResE>) }\r\n      </SlotList> }\r\n      { resList.filter(r => r.isBackup).length > 0 && <BackupSlotList>\r\n        <SlotListTitle>{'Backup timeslots'}</SlotListTitle>\r\n        { resList.filter(r => r.isBackup).map(r => r.startTime && r.endTime && <ResE>\r\n          <Indicator style={{ padding: '0.5rem' }}>{reservables.find(x => x.id == r.reservableId)?.name}</Indicator>\r\n          <FlexSL>\r\n            <BackupSlotText>Date: {getStringDateValue(r.startTime)}</BackupSlotText>\r\n            <BackupSlotText>Time: {getStringTimeValue(r.startTime)} - {getStringTimeValue(new Date(r.endTime))}</BackupSlotText>\r\n          </FlexSL>\r\n        </ResE>) }\r\n      </BackupSlotList> }\r\n      <Title>{backupTitle}</Title>\r\n      <Text>{backupText1}</Text>\r\n      <Text>{backupText2}</Text>\r\n      <ButtonRow>\r\n        <SecondaryButtonBtn onClick={(e) => {\r\n          e.preventDefault();\r\n          close();\r\n        }}>{cancelText}</SecondaryButtonBtn>\r\n        <MainButtonBtn onClick={(e) => {\r\n          onConfirm();\r\n          close();\r\n          e.preventDefault();\r\n        }}>{confirmText}</MainButtonBtn>\r\n      </ButtonRow>\r\n    </Window>\r\n  </Wrap>\r\n}", "import type { Reservation } from \"@prisma/client\";\r\n\r\nimport { prisma } from \"~/db.server\";\r\nimport { ReservationStatus } from \"~/types/types\";\r\n\r\nexport type { Reservation } from \"@prisma/client\";\r\n\r\nexport const getReservation = async ({ id }: Pick<Reservation, 'id'>) => (await prisma.reservation.findFirst({\r\n  where: { id },\r\n}));\r\n\r\nexport const getReservationList = async () => (await prisma.reservation.findMany({\r\n}));\r\n\r\nexport const createReservation = async ({ backup, reservationGroupId, reservableId, start, end }: Pick<Reservation, 'backup' | 'reservationGroupId' | 'reservableId' | 'start' | 'end'>) => (await prisma.reservation.create({\r\n  data: {\r\n    reservableId, reservationGroupId, start, end, backup\r\n  },\r\n}));\r\n\r\nexport const updateReservation = async ({ id, backup, reservationGroupId, reservableId, start, end }: Pick<Reservation, 'id' | 'backup' | 'reservationGroupId' | 'reservableId' | 'start' | 'end'>) => (await prisma.reservation.update({\r\n  where: {\r\n    id\r\n  },\r\n  data: {\r\n    reservableId, reservationGroupId, start, end, backup\r\n  }\r\n}));\r\n\r\nconst getStatusOfReservation = async({ reservationGroupId }: Pick<Reservation, 'reservationGroupId'>) => (await prisma.reservation.findFirst({\r\n  where: {\r\n    reservationGroupId\r\n  },\r\n  select: {\r\n    status: true\r\n  }\r\n}))\r\n\r\nexport const setStatusOfReservation = async({ id, status }: Pick<Reservation, 'id' | 'status'>) => (await prisma.reservation.update({\r\n  where: {\r\n    id\r\n  },\r\n  data: {\r\n    status\r\n  }\r\n}))\r\n\r\nexport const setStatusOfReservationsInGroup = async ({ reservationGroupId, status }: Pick<Reservation, 'reservationGroupId' | 'status'>) => {\r\n  const r = await getStatusOfReservation({ reservationGroupId });\r\n  return await prisma.reservation.updateMany({\r\n    where: {\r\n      reservationGroupId\r\n    },\r\n    data: {\r\n      status,\r\n      previousStatus: r?.status\r\n    }\r\n  })\r\n};\r\n\r\nexport const changeReservationStatus = async ({ id, status }: Pick<Reservation, 'id' | 'status'>) => (await prisma.reservation.update({\r\n  where: {\r\n    id\r\n  },\r\n  data: {\r\n    status\r\n  }\r\n}));\r\n\r\nexport const deleteReservation = ({ id }: Pick<Reservation, 'id'>) => (prisma.reservation.deleteMany({\r\n    where: { id },\r\n}));\r\n", "import type { ReservationGroup } from \"@prisma/client\";\r\n\r\nimport { prisma } from \"~/db.server\";\r\n\r\nexport type { ReservationGroup } from \"@prisma/client\";\r\n\r\nexport const getReservationGroup = async ({ id }: Pick<ReservationGroup, 'id'>) => (await prisma.reservationGroup.findFirst({\r\n  where: { id },\r\n  include: {\r\n    reservations: {\r\n      include: {\r\n        reservable: {\r\n          include: {\r\n            place: {\r\n              include: {\r\n                openingTimes: true,\r\n                reservables: {\r\n                  include: {\r\n                    reservations: true,\r\n                    ReservableType: {\r\n                      include: {\r\n                        multiLangName: true\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}));\r\n\r\nexport const getReservationGroupForConfirmationEmail = async ({ id }: Pick<ReservationGroup, 'id'>) => (await prisma.reservationGroup.findFirst({\r\n  where: { id },\r\n  include: {\r\n    user: true,\r\n    reservations: {\r\n      include: {\r\n        reservable: {\r\n          include: {\r\n            place: true\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}));\r\n\r\nexport const getReservationGroupList = async () => (await prisma.reservationGroup.findMany({\r\n  include: {\r\n    user: true,\r\n    reservations: {\r\n      include: {\r\n        reservable: {\r\n          include: {\r\n            place: {\r\n              include: {\r\n                company: true\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}));\r\n\r\nexport const createReservationGroup = async ({ note, userId }: Pick<ReservationGroup, 'note' | 'userId'>) => (await prisma.reservationGroup.create({\r\n  data: {\r\n    note, userId\r\n  },\r\n}));\r\n\r\nexport const updateReservationGroup = async ({ id, note, userId }: Pick<ReservationGroup, 'id' | 'note' | 'userId'>) => (await prisma.reservationGroup.update({\r\n  where: {\r\n    id\r\n  },\r\n  data: {\r\n    note, userId\r\n  },\r\n  include: {\r\n    reservations: true\r\n  }\r\n}));\r\n\r\nexport const deleteReservationGroup = ({ id }: Pick<ReservationGroup, 'id'>) => (prisma.reservationGroup.deleteMany({\r\n    where: { id },\r\n}));\r\n", "import { OpeningTime } from \"@prisma/client\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport type { LoaderFunction } from \"@remix-run/server-runtime\";\r\nimport { json } from \"@remix-run/server-runtime\";\r\nimport styled from \"styled-components\";\r\nimport AnglesRightIcon from \"~/assets/icons/AnglesRight\";\r\nimport { MainButton } from \"~/components/place/place-summary\";\r\nimport { styles } from \"~/constants/styles\";\r\nimport { getPlace, Place } from \"~/models/place.server\";\r\nimport { Reservable } from \"~/models/reservable.server\";\r\n\r\nconst Wrap = styled.div`\r\n  padding: 2rem;\r\n  border-radius: 1.5rem;\r\n  margin-top: 2rem;\r\n  box-sizing: border-box;\r\n  max-width: 968px;\r\n  width: 100%;\r\n  margin: 0px auto;\r\n`;\r\n\r\nconst Title = styled.h4`\r\n  font-size: 1.3rem;\r\n  margin: 0px;\r\n`;\r\n\r\nconst DetailsWrap = styled.div`\r\n\r\n`;\r\n\r\nconst TimesWrap = styled.div`\r\n  flex-shrink: 0;\r\n  background-color: ${styles.colors.primary};\r\n  color: ${styles.colors.white};\r\n  padding: 1.5rem 1.25rem;\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nconst Desc = styled.p`\r\n\r\n`;\r\n\r\nconst OpeningDay = styled.p`\r\n  font-weight: bold;\r\n  font-size: 0.75rem;\r\n  margin: 0;\r\n`;\r\n\r\nconst OpeningTime = styled.p`\r\n  font-size: 1rem;\r\n  margin: 0;\r\n  &::first-letter {\r\n    text-transform:capitalize;\r\n  }\r\n`;\r\n\r\ninterface PlaceDetailsLoaderData {\r\n  place: (Place & {\r\n    reservables: Reservable[];\r\n    openingTimes: OpeningTime[];\r\n  })\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ params }) => {\r\n  return json({ place: await getPlace({ id: params.placeId ?? '' }) });\r\n}\r\n\r\nconst GalleryImage = styled.img`\r\n  object-fit: cover;\r\n  width: 20rem;\r\n  aspect-ratio: 1;\r\n  max-width: 90%;\r\n`;\r\n\r\nconst Gallery = styled.div`\r\n  overflow-x: scroll;\r\n  width: 100%;\r\n  border-radius: 0.5rem;\r\n  margin-top: 1rem;\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst FlexApart = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 3rem;\r\n  gap: 2rem;\r\n  @media (max-width: 800px) {\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n  }\r\n`;\r\n\r\nconst TimesGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  align-items: center;\r\n  gap: 1rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport default function PlaceDetails({}) {\r\n\r\n  const { place } = useLoaderData<PlaceDetailsLoaderData>();\r\n\r\n  const timeStr = (date: Date) => {\r\n    return `${new Date(date).getHours()}:${new Date(date).getMinutes()}`;\r\n  }\r\n\r\n  const daysOfWeek = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];\r\n\r\n  console.log(place.description != '' ? place.description : 'No description');\r\n\r\n  return <Wrap>\r\n    <FlexApart>\r\n      <Title>Make a reservation</Title>\r\n      <MainButton inSearch={false} to={`/${place.id}/reserve`} >Reserve<AnglesRightIcon height='1.25rem' /></MainButton>  \r\n    </FlexApart>\r\n    <FlexApart style={{ alignItems: 'flex-start' }}>\r\n      <DetailsWrap>\r\n        <Title>Description</Title>\r\n        <Desc>{place.description != '' ? place.description :  <i>No description</i>}</Desc>\r\n        <Title>How do I get there?</Title>\r\n        <Desc>{place.howToGetThere != '' ? place.howToGetThere :  <i>Just follow Google Maps :)</i>}</Desc>\r\n      </DetailsWrap>\r\n      <TimesWrap>\r\n        <Title>Opening Times</Title>\r\n        <TimesGrid>\r\n          { place.openingTimes ? place.openingTimes.sort((a, b) => a.day - b.day).map(o => <div key={o.id} >\r\n            <OpeningDay>{daysOfWeek[o.day].split('')[0].toUpperCase() + daysOfWeek[o.day].split('').slice(1).join('')}</OpeningDay>\r\n            <OpeningTime>{timeStr(o.open)} - {timeStr(o.close)}</OpeningTime>\r\n          </div>) : null }\r\n        </TimesGrid>\r\n      </TimesWrap>\r\n    </FlexApart>\r\n    { place.galleryPicUrls.length > 0 && <>\r\n      <Title>Gallery</Title>\r\n      <Gallery>\r\n        {place.galleryPicUrls.map((p, i) => <GalleryImage key={i} src={p} />)}\r\n      </Gallery>\r\n    </>}\r\n  </Wrap>\r\n}", "import { Outlet, useActionData, useLoaderData, useSubmit } from '@remix-run/react';\r\nimport { LoaderFunction } from '@remix-run/server-runtime';\r\nimport { getUserByUsername } from '~/models/user.server';\r\nimport { requireUsernameAndAdmin } from '~/utils/session.server';\r\nimport { Place, Reservable, Reservation, ReservationGroup, User } from '@prisma/client';\r\nimport { ReservableTypeWithTexts, ReservationStatus } from '~/types/types';\r\nimport { ReservationGroupSummary } from '~/components/profile/reservation-group-summary';\r\nimport styled from 'styled-components';\r\nimport { styles } from '~/constants/styles';\r\n\r\nexport interface ProfileLoaderData {\r\n  user: User & {\r\n    reservationGroups: (ReservationGroup & {\r\n      reservations: (Reservation & {\r\n        reservable: (Reservable & {\r\n          place: Place,\r\n          ReservableType: ReservableTypeWithTexts\r\n        }) | null;\r\n      })[];\r\n    })[];\r\n  } | null\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const user = await getUserByUsername({ username: (await requireUsernameAndAdmin(request)).username });\r\n  if (user) {\r\n    user.passwordHash = '';\r\n  }\r\n  return { user: user };\r\n}\r\n\r\nconst ReservationsWrap = styled.div`\r\n  padding: 2rem 0.5rem;\r\n  max-width: 968px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst ReservationsTitle = styled.h4`\r\n  margin-top: 0;\r\n  @media (min-width: 500px) {\r\n    font-size: 1.8rem;\r\n  }\r\n  margin-left: 1rem;\r\n`;\r\n\r\nconst NoReservations = styled.p`\r\n  margin-left: 1rem;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport default function Profile() {\r\n\r\n  const { user } = useLoaderData<ProfileLoaderData>();\r\n  const submit = useSubmit();\r\n\r\n  const cancelRg = (form: HTMLFormElement) => {\r\n    submit(form, { replace: true })\r\n  }\r\n\r\n  const reservationGroups = user?.reservationGroups.filter(rg => rg.reservations.length > 0);\r\n\r\n  return (\r\n    <div>\r\n      <Outlet />\r\n      <ReservationsWrap>\r\n        <ReservationsTitle>Your Reservations</ReservationsTitle>\r\n        { reservationGroups?.length == 0 && <NoReservations>You don't have any reservations :'(. Go ahead and make some!</NoReservations> }\r\n        { reservationGroups?.map(rg => <div key={rg.id}>\r\n          <>\r\n            <ReservationGroupSummary onCancel={(rgId, formRef) => {\r\n              setTimeout(() => {\r\n                cancelRg(formRef);\r\n              }, 450);\r\n            }} reservationGroup={rg} />\r\n          </>\r\n        </div>) }\r\n      </ReservationsWrap>\r\n    </div>\r\n  )\r\n}", "import { Place, Reservable, Reservation, ReservationGroup } from \"@prisma/client\"\r\nimport { Form, Link } from \"@remix-run/react\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { styles } from \"~/constants/styles\";\r\nimport { ReservableTypeWithTexts, ReservationStatus as R } from \"~/types/types\"\r\nimport { Button } from \"../button\";\r\nimport { ConfirmationDialog } from \"../confirmation-dialog\";\r\nimport { IdInput } from \"../inputs/ObjectInput\";\r\nimport { PlaceImage } from \"../place/place-image\";\r\nimport { SecondaryButtonBtn } from \"../place/place-summary\";\r\nimport { ReservationSummary } from \"./reservation-summary\"\r\n\r\ninterface ReservationGroupSummaryProps {\r\n  reservationGroup: (ReservationGroup & {\r\n    reservations: (Reservation & {\r\n      reservable: (Reservable & {\r\n        place: Place,\r\n        ReservableType: ReservableTypeWithTexts\r\n      }) | null;\r\n    })[];\r\n  }),\r\n  onCancel: (reservationGroupId: string, formRef: HTMLFormElement) => void\r\n}\r\n\r\nconst Title = styled(Link)`\r\n  margin: 0;\r\n  font-weight: bold;\r\n  text-decoration: none;\r\n  color: ${styles.colors.black};\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nconst NoteTitle = styled.p`\r\n  font-weight: bold;\r\n  font-size: 0.9rem;\r\n  margin: 0;\r\n  color: ${styles.colors.action};\r\n`;\r\n\r\nconst Value = styled.p`\r\n  font-size: 1.2rem;\r\n  margin-top: 0.2rem;\r\n  margin-bottom: 0;\r\n`;\r\n\r\nconst Wrap = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 9rem auto;\r\n  @media (min-width: 550px) {\r\n    grid-template-rows: unset;\r\n    grid-template-columns: 11rem auto;\r\n  }\r\n  overflow: hidden;\r\n  gap: 0.87rem;\r\n  transition:\r\n    height 0.3s cubic-bezier(0.33, 1, 0.68, 1),\r\n    padding 0.3s cubic-bezier(0.33, 1, 0.68, 1),\r\n    margin 0.3s cubic-bezier(0.33, 1, 0.68, 1),\r\n    opacity 0.3s cubic-bezier(0.33, 1, 0.68, 1);\r\n  border-radius: 0.6rem;\r\n  background-color: ${styles.colors.gray[5]};\r\n  padding: 1.3rem 1rem;\r\n  margin-top: 1rem;\r\n  /* &>* {\r\n    flex-shrink: 0;\r\n  } */\r\n`;\r\n\r\nconst CancelWrap = styled.div`\r\n  width: 100%;\r\n  @media (min-width: 550px) {\r\n    width: auto;\r\n    align-self: flex-end;\r\n  }\r\n`;\r\n\r\nconst TitleStatus = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  @media (max-width: 550px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 1rem;\r\n  }\r\n`;\r\n\r\nconst SlotTitle = styled.p`\r\n  margin: 0;\r\n`;\r\n\r\nconst InnerWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.87rem;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst Status = styled.p`\r\n  text-transform: uppercase;\r\n  font-weight: 600;\r\n  font-size: 0.9rem;\r\n  padding: 0.4rem 1rem;\r\n  border-radius: 0.25rem;\r\n  margin: 0;\r\n`;\r\n\r\nconst Line = styled.div`\r\n  height: 1px;\r\n  width: 100%;\r\n  background-color: ${styles.colors.gray[30]};\r\n`;\r\n\r\nexport const ReservationGroupSummary: React.FC<ReservationGroupSummaryProps> = ({ reservationGroup: rg, onCancel }) => {\r\n\r\n  const ref = React.useRef<HTMLDivElement>(null);\r\n  const formRef = React.useRef<HTMLFormElement>(null);\r\n\r\n  const [ showConfirmation, setShowConfirmation ] = React.useState<boolean>(false);\r\n\r\n  const cancelReservation = () => {\r\n    if (ref.current) {\r\n      ref.current.style.height = `${ref.current.clientHeight - parseFloat(window.getComputedStyle(ref.current).paddingTop) - parseFloat(window.getComputedStyle(ref.current).paddingBottom)}px`;\r\n      setTimeout(() => {\r\n        if (ref.current) {\r\n          ref.current.style.height = '0px';\r\n          ref.current.style.paddingTop = '0px';\r\n          ref.current.style.marginTop = '0px';\r\n          ref.current.style.opacity = '0';\r\n          ref.current.style.paddingBottom = '0px';\r\n        }\r\n      }, 100);\r\n    }\r\n    if (formRef.current) onCancel(rg.id, formRef.current);\r\n  }\r\n\r\n  const prefs = rg.reservations.filter(r => !r.backup).length;\r\n  const backups = rg.reservations.filter(r => r.backup).length;\r\n  console.log(rg);\r\n  // Options: \r\n  // Just main option       Waiting\r\n  // Just main option       Confirmed\r\n  // Just main option       Unavailable\r\n  // Main + backup option       Waiting\r\n  // Main + backup option       Main confirmed\r\n  // Main + backup option       Backup confirmed\r\n  // Main + backup option       Unavailable\r\n  const prefStatus = rg.reservations.filter(r => !r.backup)[prefs - 1].status;\r\n  const backupStatus = backups > 0 ? rg.reservations.filter(r => r.backup)[backups - 1].status : null;\r\n  const text = (\r\n    prefStatus == R.AwaitingConfirmation || backupStatus == R.AwaitingConfirmation ? 'Awaiting confirmation' : \r\n    prefStatus == R.Confirmed && backupStatus == null ? 'Confirmed' : \r\n    prefStatus == R.Rejected && backupStatus == null ? 'Unavailable' : \r\n    prefStatus == R.Confirmed && backupStatus == R.Cancelled ? 'Preferred Confirmed' : \r\n    prefStatus == R.Rejected && backupStatus == R.Confirmed ? 'Backup Confirmed' : \r\n    prefStatus == R.Rejected && backupStatus == R.Rejected ? 'Unavailable' :\r\n    prefStatus == R.Cancelled && backupStatus == R.Cancelled ? 'Cancelled' : ''\r\n  );\r\n\r\n  const backgroundColor = (\r\n    prefStatus == R.AwaitingConfirmation || backupStatus == R.AwaitingConfirmation ? styles.colors.warn : \r\n    prefStatus == R.Confirmed && backupStatus == null ? styles.colors.free : \r\n    prefStatus == R.Rejected && backupStatus == null ? styles.colors.busy : \r\n    prefStatus == R.Confirmed && backupStatus == R.Cancelled ? styles.colors.free : \r\n    prefStatus == R.Rejected && backupStatus == R.Confirmed ? styles.colors.free : \r\n    prefStatus == R.Rejected && backupStatus == R.Rejected ? styles.colors.busy : \r\n    prefStatus == R.Cancelled && backupStatus == R.Cancelled ? styles.colors.gray[70] : ''\r\n  );\r\n\r\n  const color = (\r\n    prefStatus == R.AwaitingConfirmation || backupStatus == R.AwaitingConfirmation ? styles.colors.black : \r\n    prefStatus == R.Confirmed && backupStatus == null ? styles.colors.black : \r\n    prefStatus == R.Rejected && backupStatus == null ? styles.colors.white : \r\n    prefStatus == R.Confirmed && backupStatus == R.Cancelled ? styles.colors.black : \r\n    prefStatus == R.Rejected && backupStatus == R.Confirmed ? styles.colors.black : \r\n    prefStatus == R.Rejected && backupStatus == R.Rejected ? styles.colors.white : \r\n    prefStatus == R.Cancelled && backupStatus == R.Cancelled ? styles.colors.black : ''\r\n  );\r\n\r\n  return <>\r\n    <ConfirmationDialog\r\n      title='Confirm cancellation' \r\n      text='Are you sure you want to cancel your reservation? (This cannot be undone!)'\r\n      hidden={!showConfirmation}\r\n      onConfirm={() => {\r\n        cancelReservation();\r\n      }}\r\n      close={() => {\r\n        setShowConfirmation(false);\r\n      }}\r\n      confirmText={'Cancel my reservation'}\r\n      cancelText={'Keep my reservation'}\r\n    />\r\n    <Wrap key={rg.id} ref={ref}>\r\n      <PlaceImage shape='square' imageUrl={rg.reservations[0].reservable?.place.profilePicUrl} />\r\n      <InnerWrap>\r\n        <TitleStatus>\r\n        <Title to={`/${rg.reservations[0].reservable?.place.id}`}>{rg.reservations.length > 0 ? rg.reservations[0].reservable?.place.name : 'Reservation'}</Title>\r\n          <Status style={{\r\n            backgroundColor: backgroundColor,\r\n            color: color,\r\n          }}>{\r\n            text\r\n          }</Status>\r\n        </TitleStatus>\r\n        {prefs > 0 && <>\r\n          <SlotTitle style={text == 'Backup Confirmed' ? { opacity: 0.5 } : {}}>Preffered slot{prefs > 1 && 's'}:</SlotTitle>\r\n          { rg.reservations.filter(r => !r.backup).map(r => <div key={r.id}>\r\n            <ReservationSummary style={text == 'Backup Confirmed' ? { opacity: 0.5 } : {}} reservation={r} />\r\n          </div>) }\r\n          <Line />\r\n        </>}\r\n        {backups > 0 && <>\r\n          <SlotTitle style={text == 'Preferred Confirmed' ? { opacity: 0.5 } : {}}>Backup slot{backups > 1 && 's'}:</SlotTitle>\r\n          { rg.reservations.filter(r => r.backup).map(r => <div key={r.id}>\r\n            <ReservationSummary style={text == 'Preferred Confirmed' ? { opacity: 0.5 } : {}} reservation={r} />\r\n          </div>) }\r\n          <Line />\r\n        </>}\r\n        {rg.note && <div>\r\n          <NoteTitle>Note</NoteTitle>\r\n          <Value>{rg.note}</Value>\r\n        </div>}\r\n        <CancelWrap>\r\n          <SecondaryButtonBtn style={{ width: '100%' }} onClick={(e) => {\r\n            setShowConfirmation(true);\r\n          }}>Cancel reservation</SecondaryButtonBtn>\r\n        </CancelWrap>\r\n      </InnerWrap>\r\n      <Form ref={formRef} method='post' action='/profile/cancelReservation' style={{ visibility: 'hidden' }}>\r\n        <IdInput name='rgId' value={rg.id} />\r\n      </Form>\r\n    </Wrap>\r\n  </>\r\n}", "import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { styles } from \"~/constants/styles\";\r\nimport { MainButton, MainButtonBtn, SecondaryButtonBtn } from \"./place/place-summary\";\r\n\r\ninterface ConfirmationDialogProps {\r\n  hidden: boolean,\r\n  onConfirm: () => void,\r\n  title: string,\r\n  text: string,\r\n  confirmText: string,\r\n  cancelText: string,\r\n  close: () => void\r\n}\r\n\r\nconst Wrap = styled.div<{ hidden: boolean }>`\r\n  position: fixed;\r\n  visibility: ${props => props.hidden ? 'hidden' : 'visible'};\r\n  transition: opacity 0.15s ease-in-out, transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);\r\n  transform: scale(0.9);\r\n  opacity: 0;\r\n  z-index: 10;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Window = styled.div`\r\n  background-color: ${styles.colors.white};\r\n  box-shadow: ${styles.shadows[0]};\r\n  width: 32rem;\r\n  display: flex;\r\n  max-width: 100%;\r\n  border-radius: 1rem;\r\n  @media (max-width: 650px) {\r\n    width: 100%;\r\n    border-radius: 0;\r\n  }\r\n  flex-direction: column;\r\n  gap: 1.3rem;\r\n  padding: 1.5rem;\r\n  z-index: 8;\r\n`;\r\n\r\nconst Backdrop = styled.div<{ hidden?: boolean }>`\r\n  position: fixed;\r\n  z-index: 7;\r\n  display: ${props => props.hidden ? 'none' : ''};\r\n  background-color: ${styles.colors.black}40;\r\n  top: 0;\r\n  left: 0;\r\n  transform-origin: center;\r\n  transform: scale(150%);\r\n  width: 100vw;\r\n  height: 100vh;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  margin: 0px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  margin: 0px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst ButtonRow = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 1.5rem;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const ConfirmationDialog: React.FC<ConfirmationDialogProps> = ({ hidden, title, text, confirmText, cancelText, onConfirm, close }) => {\r\n\r\n  const wrap = React.useRef<HTMLDivElement>(null);\r\n\r\n  React.useEffect(() => {\r\n    setTimeout(() => {\r\n      if (wrap.current) {\r\n        wrap.current.style.opacity = hidden ? '0' : '1';\r\n        wrap.current.style.transform = hidden ? 'scale(0.9)' : 'scale(1)';\r\n      }\r\n    }, 100);\r\n  }, [hidden]);\r\n\r\n  return <Wrap hidden={hidden} ref={wrap}>\r\n    <Backdrop onClick={close} />\r\n    <Window>\r\n      <Title>{title}</Title>\r\n      <Text>{text}</Text>\r\n      <ButtonRow>\r\n        <SecondaryButtonBtn onClick={(e) => {\r\n          e.preventDefault();\r\n          close();\r\n        }}>{cancelText}</SecondaryButtonBtn>\r\n        <MainButtonBtn onClick={(e) => {\r\n          onConfirm();\r\n          close();\r\n          e.preventDefault();\r\n        }}>{confirmText}</MainButtonBtn>\r\n      </ButtonRow>\r\n    </Window>\r\n  </Wrap>\r\n}", "import { Place, Reservable, Reservation } from \"@prisma/client\"\r\nimport styled from \"styled-components\";\r\nimport CalendarIcon from \"~/assets/icons/Calendar\";\r\nimport ClockIcon from \"~/assets/icons/Clock\";\r\nimport { styles } from \"~/constants/styles\";\r\nimport { useLangs } from \"~/contexts/langsContext\";\r\nimport { ReservableTypeWithTexts, ReservationStatus as R } from \"~/types/types\"\r\nimport { getStringTimeValue } from \"~/utils/forms\";\r\nimport { Amount, Indicator } from \"../place/facilities-indicator\";\r\n\r\ninterface ReservationSummaryProps {\r\n  reservation: Reservation & {\r\n    reservable: (Reservable & {\r\n      ReservableType: ReservableTypeWithTexts\r\n      place: Place\r\n    }) | null;\r\n  },\r\n  style: React.CSSProperties\r\n}\r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  gap: 1rem;\r\n`;\r\n\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  &>div {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    gap: 0.7rem;\r\n  }\r\n`;\r\n\r\nconst Value = styled.p`\r\n  font-size: 0.9125rem;\r\n  margin-top: 0.2rem;\r\n  font-weight: 500;\r\n  margin-bottom: 0;\r\n`;\r\n\r\nexport const ReservationSummary: React.FC<ReservationSummaryProps> = ({ reservation: r, style }) => {\r\n\r\n  const { lang } = useLangs();\r\n\r\n  return <Wrap style={style}>\r\n    { r?.reservable?.ReservableType.multiLangName && <Indicator style={{ padding: '0.5rem 1rem' }} key={r.id}>{r.reservable.ReservableType.multiLangName[lang]}</Indicator>}\r\n    <Flex>\r\n      <div>\r\n        <CalendarIcon height={'1rem'} /><Value>{new Date(r.start).toLocaleDateString()}</Value>\r\n      </div>\r\n      <div>\r\n        <ClockIcon height={'1rem'} /><Value>{getStringTimeValue(new Date(r.start))} - {getStringTimeValue(new Date(r.end))}</Value>\r\n      </div>\r\n    </Flex>\r\n  </Wrap>\r\n}", "import { ActionFunction, redirect } from '@remix-run/server-runtime'\r\nimport { setStatusOfReservationsInGroup } from '~/models/reservation.server';\r\nimport { ReservationStatus } from '~/types/types';\r\nimport { sendCancellationEmail } from '~/utils/emails.server';\r\nimport { getFormEssentials } from '~/utils/forms';\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n\r\n  const { getFormItem } = await getFormEssentials(request);\r\n  const reservationGroupId = getFormItem('rgId');\r\n\r\n  await setStatusOfReservationsInGroup({ reservationGroupId, status: ReservationStatus.Cancelled });\r\n\r\n  await sendCancellationEmail();\r\n  \r\n  return redirect('/profile');\r\n}\r\n\r\nexport default function CancelReservation() {\r\n  return (\r\n    <div></div>\r\n  )\r\n}", "import { Place, Reservable, Reservation, ReservationGroup, User } from '@prisma/client';\r\nimport { useLoaderData } from '@remix-run/react';\r\nimport type { LoaderFunction } from '@remix-run/server-runtime'\r\nimport { AccountSummary } from '~/components/profile/account-summary';\r\nimport { getUserByUsername } from '~/models/user.server';\r\nimport { requireUsernameAndAdmin } from '~/utils/session.server';\r\nimport { ProfileLoaderData } from '../profile';\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const user = await getUserByUsername({ username: (await requireUsernameAndAdmin(request)).username });\r\n  if (user) {\r\n    user.passwordHash = '';\r\n  }\r\n  return { user: user };\r\n}\r\n\r\nexport default function ProfileIndex() {\r\n\r\n  const { user } = useLoaderData<ProfileLoaderData>();\r\n\r\n  return <AccountSummary user={user ?? null} editing={false} />\r\n}", "import { ActionFunction } from '@remix-run/node';\r\nimport { useLoaderData } from '@remix-run/react';\r\nimport { LoaderFunction, redirect } from '@remix-run/server-runtime'\r\nimport { AccountSummary } from '~/components/profile/account-summary'\r\nimport { checkForUserByEmail, checkForUserByUsername, getUserByUsername, updateUser } from '~/models/user.server';\r\nimport { getFormEssentials } from '~/utils/forms';\r\nimport { requireUsernameAndAdmin } from '~/utils/session.server';\r\nimport { ProfileLoaderData } from '../profile';\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const user = await getUserByUsername({ username: (await requireUsernameAndAdmin(request)).username });\r\n  if (user) {\r\n    user.passwordHash = '';\r\n  }\r\n  return { user: user };\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const { getFormItem } = await getFormEssentials(request);\r\n\r\n  const id = getFormItem('id');\r\n  const firstName = getFormItem('firstName');\r\n  const lastName = getFormItem('lastName');\r\n  // const username = getFormItem('username');\r\n  // const email = getFormItem('email');\r\n  const phone = getFormItem('phone');\r\n\r\n  // const dcCheck = [await checkForUserByEmail({ email }), await checkForUserByEmail({ username })];\r\n  // for (let i = 0; i < dcCheck.length; i++) {\r\n  //   if (dcCheck[i] != null && dcCheck[i]?.id != id) return {};\r\n  // }\r\n\r\n  if (id && firstName && lastName && /*username && email &&*/ phone) {\r\n    await updateUser({\r\n      id, firstName, lastName, /*username, email,*/ phone\r\n    });\r\n    return redirect('/profile');\r\n  }\r\n\r\n  return {};\r\n}\r\n\r\nexport default function ProfileEdit() {\r\n\r\n  const { user } = useLoaderData<ProfileLoaderData>();\r\n\r\n  return <AccountSummary editing={true} user={user ?? null} />\r\n}", "import type { ActionFunction } from '@remix-run/server-runtime'\r\nimport { logout } from '~/utils/session.server';\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const form = await request.formData();\r\n  const redirectUrl = form.get('redirectUrl')?.toString();\r\n\r\n  return logout(request, redirectUrl ?? '/');\r\n}\r\n\r\nexport default function Logout() {\r\n  return (\r\n    <></>\r\n  )\r\n}", "import type { LoaderFunction } from \"@remix-run/server-runtime\";\r\nimport { json } from \"@remix-run/server-runtime\";\r\nimport { useLoaderData, useSearchParams } from \"@remix-run/react\";\r\nimport { getNewPlaces, Place } from \"~/models/place.server\";\r\nimport styled from \"styled-components\";\r\nimport { PlaceSummary } from \"~/components/place/place-summary\";\r\nimport { styles } from \"~/constants/styles\";\r\nimport { OpeningTime, Reservable, Search } from \"@prisma/client\";\r\nimport { SearchUI } from \"~/components/search/search-ui\";\r\nimport { getAllLocations } from \"~/models/location.server\";\r\nimport { getTagList } from \"~/models/tag.server\";\r\nimport { getCategoryList } from \"~/models/category.server\";\r\nimport { CategoryWithTexts, LocationWithEverything, ReservableTypeWithTexts, TagWithTexts } from \"~/types/types\";\r\nimport { WidthRestrictor } from \"~/root\";\r\nimport { IconRow } from \"~/components/icon-row\";\r\nimport HeartIcon from \"~/assets/icons/Heart\";\r\nimport { RecentSearch } from \"~/components/recent-search\";\r\nimport { getUsernameAndAdmin } from \"~/utils/session.server\";\r\nimport { getSearchHistory } from \"~/models/user.server\";\r\n\r\ninterface LoaderData {\r\n  locations: LocationWithEverything[],\r\n  tags: TagWithTexts[],\r\n  categories: CategoryWithTexts[],\r\n  places: (Place & {\r\n    openingTimes: OpeningTime[];\r\n    reservables: Reservable & {\r\n      ReservableType: ReservableTypeWithTexts\r\n    }[],\r\n    tags: TagWithTexts[]\r\n  })[],\r\n  searchHistory: (Search & {\r\n    location: LocationWithEverything | null;\r\n    Categories: CategoryWithTexts[];\r\n    Tags: TagWithTexts[];\r\n  })[] | null;\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const url = new URL(request.url);\r\n  const searchTerm = url.searchParams.get('searchTerm');\r\n  const location =  url.searchParams.get('selectedLocation');\r\n  const tags = url.searchParams.getAll('tags[]');\r\n  const categories = url.searchParams.getAll('categories[]');\r\n\r\n  const usernameAndAdmin = await getUsernameAndAdmin(request);\r\n\r\n  return json({\r\n    places: await getNewPlaces(),\r\n    locations: await getAllLocations(),\r\n    tags: await getTagList({ nameFragment: '' }),\r\n    categories: await getCategoryList({ nameFragment: '' }),\r\n    searchHistory: usernameAndAdmin.username ? (await getSearchHistory({ username: usernameAndAdmin.username }))?.searchHistory : null\r\n  });\r\n};\r\n\r\nconst Title = styled.h6`\r\n  font-size: 2.625rem;\r\n  @media (max-width: 800px) {\r\n    font-size: 2rem;\r\n  }\r\n  @media (max-width: 550px) {\r\n    padding: 0 1rem;\r\n  }\r\n  @media (max-width: 400px) {\r\n    font-size: 1.5rem;\r\n  }\r\n  text-align: center;\r\n  margin: 0 0 0.625rem 0;\r\n  color: ${styles.colors.white};\r\n`;\r\n\r\nconst TopSegment = styled.div`\r\n  padding: 2.45rem 0 2.375rem;\r\n  @media (max-width: 800px) {\r\n    padding: 1.45rem 0.75rem 2rem;\r\n  }\r\n  @media (max-width: 550px) {\r\n    padding: 1.45rem 0rem 2rem;\r\n  }\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: ${styles.colors.primary};\r\n  overflow-x: hidden;\r\n`;\r\n\r\nconst MainSegment = styled.div`\r\n  padding: 3rem 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst WelcomeWrap = styled.div`\r\n  background-color: ${styles.colors.primary_background};\r\n  @media (min-width: 550px) {\r\n    border-radius: 1rem;\r\n  }\r\n  padding: 2rem;\r\n  position: relative;\r\n`;\r\n\r\nconst WelcomeTitle = styled.h4`\r\n  margin: 0 0 2rem 0;\r\n  font-size: 1.3rem;\r\n  font-size: 700;\r\n`;\r\n\r\nconst SectionWrap = styled.div`\r\n`;\r\n\r\nconst SectionTitle = styled.h4`\r\n  margin: 2rem 0 2rem 2rem;\r\n  font-size: 1.3rem;\r\n  font-size: 700;\r\n`;\r\n\r\nconst WelcomeText = styled.p`\r\n  margin: 0 0 1rem;\r\n  font-weight: 500;\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nconst HeartWrap = styled.div`\r\n  position: absolute;\r\n  bottom: 1rem;\r\n  right: 5rem;\r\n  transform: rotate(35deg);\r\n`;\r\n\r\nconst SearchHistory = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, minmax(0, 1fr));\r\n  @media (max-width: 900px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  gap: 1.25rem;\r\n`;\r\n\r\nconst It = styled.i`\r\n  margin-left: 2rem;\r\n`;\r\n\r\nexport default function Places() {\r\n  \r\n  const { places, locations, tags, categories, searchHistory } = useLoaderData<LoaderData>();\r\n\r\n  const searchParams = useSearchParams()[0];\r\n  return (\r\n    <div>\r\n      <TopSegment>\r\n        <WidthRestrictor> \r\n          <Title>Book a spot anywhere. Right here.</Title>\r\n          <IconRow />\r\n          <SearchUI\r\n            searchParams={searchParams}\r\n            locations={locations}\r\n            tags={tags}\r\n            categories={categories}\r\n          />\r\n        </WidthRestrictor>\r\n      </TopSegment>\r\n      <MainSegment>\r\n        <WidthRestrictor>\r\n          <WelcomeWrap>\r\n            <WelcomeTitle>Figuring things out? Us too!</WelcomeTitle>\r\n            <WelcomeText>Our goal is to simplify booking activies, anywhere you are. But we are just getting started and we need your help to make it all happen.</WelcomeText>\r\n            <WelcomeText>How can you help? Make a reservation. Or share this website with your friends and family. That\u2019s all we ask for.</WelcomeText>\r\n            <HeartWrap>\r\n              <HeartIcon height={'2.375rem'} fill={styles.colors.action_light} />\r\n            </HeartWrap>\r\n          </WelcomeWrap>\r\n          { searchHistory && <SectionWrap>\r\n            <SectionTitle>Your Recent Searches</SectionTitle>\r\n            <SearchHistory>\r\n            { searchHistory.length == 0 ? <It>You haven't yet searched for anything. Give it a try!</It> : null }\r\n            {searchHistory.map((s) => <RecentSearch key={s.id} searchPhrase={s.phrase} location={s.location} categories={s.Categories} tags={s.Tags}>\r\n            </RecentSearch>)}\r\n            </SearchHistory>\r\n          </SectionWrap>}\r\n          <SectionWrap>\r\n            <SectionTitle>Newly Listed Places</SectionTitle>\r\n            {places.filter(p => !p.hidden).map((place) => (\r\n              <PlaceSummary place={place} key={place.id} />\r\n            ))}\r\n          </SectionWrap>\r\n        </WidthRestrictor>\r\n      </MainSegment>\r\n    </div>\r\n  );\r\n}", "import type { Location, MultilingualDesc, MultilingualName } from \"@prisma/client\";\r\n\r\nimport { prisma } from \"~/db.server\";\r\n\r\nexport type { Location } from \"@prisma/client\";\r\n\r\nexport const createLocation = async ({ multiLangCity, multiLangCountry }: { multiLangCountry: MultilingualName, multiLangCity: MultilingualDesc }) => (await prisma.location.create({\r\n  data: {\r\n    multiLangCity: {\r\n      create: {\r\n        czech: multiLangCity.czech,\r\n        english: multiLangCity.english\r\n      }\r\n    },\r\n    multiLangCountry: {\r\n      create: {\r\n        czech: multiLangCountry.czech,\r\n        english: multiLangCountry.english\r\n      }\r\n    },\r\n    cityCountry: multiLangCity.english + multiLangCountry.english\r\n  },\r\n}));\r\n\r\nexport const updateLocation = async ({ id, multiLangCity, multiLangCountry }: { id: string, multiLangCountry: MultilingualName, multiLangCity: MultilingualDesc }) => (await prisma.location.update({\r\n  where: {\r\n    id\r\n  },\r\n  data: {\r\n    multiLangCity: {\r\n      update: {\r\n        czech: multiLangCity.czech,\r\n        english: multiLangCity.english\r\n      }\r\n    },\r\n    multiLangCountry: {\r\n      update: {\r\n        czech: multiLangCountry.czech,\r\n        english: multiLangCountry.english\r\n      }\r\n    },\r\n    cityCountry: multiLangCity.english + multiLangCountry.english\r\n  },\r\n}));\r\n\r\nexport const getLocation = async ({ id }: Pick<Location, 'id'>) => (await prisma.location.findFirst({\r\n  where: { id },\r\n  include: {\r\n    places: true,\r\n    multiLangCity: true,\r\n    multiLangCountry: true\r\n  }\r\n}));\r\n\r\nexport const getLocationByName = async ({ cityCountry }: Pick<Location, 'cityCountry'>) => (await prisma.location.findFirst({\r\n  where: { cityCountry },\r\n  include: {\r\n    places: true,\r\n    multiLangCity: true,\r\n    multiLangCountry: true\r\n  }\r\n}));\r\n\r\nexport const getLocationList = async ({ cityCountry: nameFragment }: Pick<Location, 'cityCountry'>) => (await prisma.location.findMany({\r\n  // TODO: Get this to work in multiple languages\r\n  // (not needed for now because there will be like 1 location)\r\n  where: { cityCountry: { contains: nameFragment, mode: 'insensitive' } },\r\n  include: {\r\n    places: true,\r\n    multiLangCity: true,\r\n    multiLangCountry: true\r\n  }\r\n}));\r\n\r\nexport const getAllLocations = async () => (await prisma.location.findMany({\r\n  include: {\r\n    places: true,\r\n    multiLangCity: true,\r\n    multiLangCountry: true\r\n  }\r\n}));\r\n\r\nexport const deleteLocation = ({ id }: Pick<Location, 'id'>) => (prisma.location.deleteMany({\r\n    where: { id },\r\n}));\r\n", "import type { MultilingualDesc, MultilingualName, Tag } from \"@prisma/client\";\r\n\r\nimport { prisma } from \"~/db.server\";\r\n\r\nexport type { Tag } from \"@prisma/client\";\r\n\r\nexport const createTag = async ({ multiLangName, multiLangDesc }: { multiLangName: MultilingualName, multiLangDesc: MultilingualDesc }) => (await prisma.tag.create({\r\n  data: {\r\n    multiLangDesc: {\r\n      create: {\r\n        czech: multiLangDesc.czech,\r\n        english: multiLangDesc.english\r\n      }\r\n    },\r\n    multiLangName: {\r\n      create: {\r\n        czech: multiLangName.czech,\r\n        english: multiLangName.english\r\n      }\r\n    }\r\n  },\r\n}));\r\n\r\nexport const updateTag = async ({ id, multiLangName, multiLangDesc }: { id: string, multiLangName: MultilingualName, multiLangDesc: MultilingualDesc }) => (await prisma.tag.update({\r\n  where: {\r\n    id\r\n  },\r\n  data: {\r\n    multiLangDesc: {\r\n      update: {\r\n        czech: multiLangDesc.czech,\r\n        english: multiLangDesc.english\r\n      }\r\n    },\r\n    multiLangName: {\r\n      update: {\r\n        czech: multiLangName.czech,\r\n        english: multiLangName.english\r\n      }\r\n    }\r\n  },\r\n}));\r\n\r\nexport const getTag = async ({ id }: Pick<Tag, 'id'>) => (await prisma.tag.findFirst({\r\n  where: { id },\r\n  include: {\r\n    places: true,\r\n    multiLangName: true,\r\n    multiLangDesc: true\r\n  }\r\n}));\r\n\r\nexport const getTagList = async ({ nameFragment }: { nameFragment: string }) => (await prisma.tag.findMany({\r\n  where: {\r\n    OR: [{\r\n      multiLangName: {\r\n        english: {\r\n          contains: nameFragment ?? '',\r\n          mode: 'insensitive'\r\n        }\r\n      }\r\n    }, {\r\n      multiLangName: {\r\n        czech: {\r\n          contains: nameFragment ?? '',\r\n          mode: 'insensitive'\r\n        }\r\n      }\r\n    }]\r\n  },\r\n  include: {\r\n    places: true,\r\n    multiLangName: true,\r\n    multiLangDesc: true\r\n  }\r\n}));\r\n\r\nexport const getAllTags = async () => (await prisma.tag.findMany({\r\n  include: {\r\n    places: true,\r\n    multiLangName: true,\r\n    multiLangDesc: true\r\n  }\r\n}));\r\n\r\n\r\n\r\nexport const deleteTag = ({ id }: Pick<Tag, 'id'>) => (prisma.tag.deleteMany({\r\n    where: { id },\r\n}));\r\n", "import type { Category, MultilingualName } from \"@prisma/client\";\r\n\r\nimport { prisma } from \"~/db.server\";\r\n\r\nexport type { Category } from \"@prisma/client\";\r\n\r\nexport const createCategory = async ({ multiLangName }: { multiLangName: MultilingualName }) => (await prisma.category.create({\r\n  data: {\r\n    multiLangName: {\r\n      create: {\r\n        czech: multiLangName.czech,\r\n        english: multiLangName.english\r\n      }\r\n    }\r\n  },\r\n}));\r\n\r\nexport const updateCategory = async ({ id, multiLangName }: { id: string, multiLangName: MultilingualName }) => (await prisma.category.update({\r\n  where: {\r\n    id\r\n  },\r\n  data: {\r\n    multiLangName: {\r\n      update: {\r\n        czech: multiLangName.czech,\r\n        english: multiLangName.english\r\n      }\r\n    }\r\n  },\r\n}));\r\n\r\n\r\nexport const getCategory = async ({ id }: Pick<Category, 'id'>) => (await prisma.category.findFirst({\r\n  where: { id },\r\n  include: {\r\n    places: true,\r\n    multiLangName: true\r\n  }\r\n}));\r\n\r\nexport const getCategoryList = async ({ nameFragment }: { nameFragment: string }) => (await prisma.category.findMany({\r\n  where: {\r\n    OR: [{\r\n      multiLangName: {\r\n        english: {\r\n          contains: nameFragment ?? '',\r\n          mode: 'insensitive'\r\n        }\r\n      }\r\n    }, {\r\n      multiLangName: {\r\n        czech: {\r\n          contains: nameFragment ?? '',\r\n          mode: 'insensitive'\r\n        }\r\n      }\r\n    }]\r\n  },\r\n  include: {\r\n    places: true,\r\n    multiLangName: true\r\n  }\r\n}));\r\n\r\nexport const getAllCategorys = async () => (await prisma.category.findMany({\r\n  include: {\r\n    places: true,\r\n    multiLangName: true\r\n  }\r\n}));\r\n\r\nexport const deleteCategory = ({ id }: Pick<Category, 'id'>) => (prisma.category.deleteMany({\r\n    where: { id },\r\n}));\r\n", "import { Form, useSubmit } from \"@remix-run/react\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport LocationIcon from \"~/assets/icons/Location\";\r\nimport SearchIcon from \"~/assets/icons/Search\";\r\nimport TableListIcon from \"~/assets/icons/TableList\";\r\nimport TagsIcon from \"~/assets/icons/Tags\";\r\nimport { styles } from \"~/constants/styles\";\r\nimport { useLangs } from \"~/contexts/langsContext\";\r\nimport { CategoryWithTexts, LocationWithEverything, TagWithTexts } from \"~/types/types\";\r\nimport { IdInput } from \"./inputs/ObjectInput\";\r\n\r\ninterface RecentSearchProps {\r\n  searchPhrase: string,\r\n  location: LocationWithEverything | null,\r\n  categories: CategoryWithTexts[],\r\n  tags: TagWithTexts[]\r\n}\r\n\r\nconst Wrap = styled.button`\r\n  background-color: ${styles.colors.primary};\r\n  border-radius: 0.5rem;\r\n  cursor: pointer;\r\n  display: block;\r\n  border: none;\r\n  text-align: start;\r\n  color: white;\r\n  padding: 1.125rem;\r\n  margin: 0;\r\n  transition: transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);\r\n  & svg {\r\n    flex-shrink: 0;\r\n  }\r\n  &:hover {\r\n    transform: scale(1.02);\r\n  }\r\n  @media (max-width: 550px) {\r\n    border-radius: 0;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h5`\r\n  font-size: 1.25rem;\r\n  margin: 0 0 1.1rem 0;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, minmax(0, 1fr));\r\n  grid-template-rows: repeat(2, minmax(0, auto));\r\n  @media (max-width: 450px) {\r\n    grid-template-columns: minmax(0, 1fr);\r\n    grid-template-rows: repeat(4, minmax(0, auto));\r\n  }\r\n  gap: 1.25rem;\r\n`;\r\n\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.8125rem;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  font-size: 1rem;\r\n  margin: 0;\r\n`;\r\n\r\nexport const RecentSearch: React.FC<RecentSearchProps> = ({ searchPhrase, location, categories, tags }) => {\r\n\r\n  const { lang } = useLangs();\r\n  const s = useSubmit();\r\n  const form = React.useRef<HTMLFormElement>(null)\r\n\r\n  return <Wrap onClick={() => {\r\n    if (form.current) {\r\n      s(form.current);\r\n    }\r\n  }}>\r\n    <Form method='get' action='/search' ref={form}>\r\n      <IdInput name='selectedLocation' value={location?.cityCountry ?? ''} />\r\n      { categories.map(c => <IdInput key={c.id} value={c.id} name='categories[]' />) }\r\n      { tags.map(t => <IdInput key={t.id} value={t.id} name='tags[]' />) }\r\n      <IdInput name='searchTerm' value={searchPhrase} />\r\n      <IdInput name='dontSave' value={'1'} />\r\n    </Form>\r\n    <Title>{searchPhrase != '' ? `\"${searchPhrase}\"` : categories.length == 1 ? (categories[0].multiLangName && categories[0].multiLangName[lang]) : 'All Activities'} {location?.multiLangCity && `in ${location.multiLangCity[lang]}`}</Title>\r\n    <Grid>\r\n      <Flex>\r\n        {location?.multiLangCity &&  <LocationIcon fill={styles.colors.white} height={'1.25rem'} />}\r\n        {location?.multiLangCity && location?.multiLangCity[lang]}{(location?.multiLangCity || location?.multiLangCountry) && ','} {location?.multiLangCountry && location?.multiLangCountry[lang]}\r\n      </Flex>\r\n      <Flex>\r\n        {(categories.length > 0) && <TableListIcon fill={styles.colors.white} height={'1.25rem'} />}\r\n        {categories.map(c => (c?.multiLangName ? c.multiLangName[lang] : '')).join(', ')}\r\n      </Flex>\r\n      <Flex>\r\n        <SearchIcon fill={styles.colors.white} height={'1.25rem'} />\r\n        <Text>{searchPhrase == '' ? <i>No search phrase</i> : searchPhrase}</Text>\r\n      </Flex>\r\n      <Flex>\r\n        {(tags.length > 0) && <TagsIcon fill={styles.colors.white} height={'1.25rem'} />}\r\n        {tags.map(t => (t?.multiLangName ? t.multiLangName[lang] : '')).join(', ')}\r\n      </Flex>\r\n    </Grid>\r\n  </Wrap>\r\n}", "import { SVGProps } from 'react';\r\nimport { styles } from '~/constants/styles';\r\n\r\nconst TableListIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    viewBox=\"0 0 512 512\"\r\n    style={{\r\n      height: props.height\r\n    }}\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M0 96C0 60.65 28.65 32 64 32H448C483.3 32 512 60.65 512 96V416C512 451.3 483.3 480 448 480H64C28.65 480 0 451.3 0 416V96zM64 160H128V96H64V160zM448 96H192V160H448V96zM64 288H128V224H64V288zM448 224H192V288H448V224zM64 416H128V352H64V416zM448 352H192V416H448V352z\"\r\n      fill={props.fill ?? styles.colors.black}\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default TableListIcon;", "import { SVGProps } from 'react';\r\nimport { styles } from '~/constants/styles';\r\n\r\nconst TagsIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    viewBox=\"0 0 512 512\"\r\n    style={{\r\n      height: props.height\r\n    }}\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M472.8 168.4C525.1 221.4 525.1 306.6 472.8 359.6L360.8 472.9C351.5 482.3 336.3 482.4 326.9 473.1C317.4 463.8 317.4 448.6 326.7 439.1L438.6 325.9C472.5 291.6 472.5 236.4 438.6 202.1L310.9 72.87C301.5 63.44 301.6 48.25 311.1 38.93C320.5 29.61 335.7 29.7 344.1 39.13L472.8 168.4zM.0003 229.5V80C.0003 53.49 21.49 32 48 32H197.5C214.5 32 230.7 38.74 242.7 50.75L410.7 218.7C435.7 243.7 435.7 284.3 410.7 309.3L277.3 442.7C252.3 467.7 211.7 467.7 186.7 442.7L18.75 274.7C6.743 262.7 0 246.5 0 229.5L.0003 229.5zM112 112C94.33 112 80 126.3 80 144C80 161.7 94.33 176 112 176C129.7 176 144 161.7 144 144C144 126.3 129.7 112 112 112z\"\r\n      fill={props.fill ?? styles.colors.black}\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default TagsIcon;", "import type { LoaderFunction } from \"@remix-run/server-runtime\";\r\nimport { json } from \"@remix-run/server-runtime\";\r\nimport { Link, useLoaderData, useSearchParams } from \"@remix-run/react\";\r\nimport { getPlaceList, Place } from \"~/models/place.server\";\r\nimport styled from \"styled-components\";\r\nimport { SearchBar } from \"~/components/search/search-bar\";\r\nimport { PlaceSummary } from \"~/components/place/place-summary\";\r\nimport { styles } from \"~/constants/styles\";\r\nimport { Category, Location, OpeningTime, Reservable, Tag } from \"@prisma/client\";\r\nimport { getAllLocations, getLocation, getLocationByName } from \"~/models/location.server\";\r\nimport { getTagList } from \"~/models/tag.server\";\r\nimport { getCategoryList } from \"~/models/category.server\";\r\nimport { CategoryWithTexts, LocationWithEverything, LocationWithTexts, ReservableTypeWithTexts, TagWithTexts } from \"~/types/types\";\r\nimport { IconRow } from \"~/components/icon-row\";\r\nimport { addToSearchHistory } from \"~/models/user.server\";\r\nimport { getUsernameAndAdmin } from \"~/utils/session.server\";\r\nimport { WidthRestrictor } from \"~/root\";\r\nimport { SearchUI } from \"~/components/search/search-ui\";\r\n\r\ninterface LoaderData {\r\n  locations: LocationWithEverything[],\r\n  tags: TagWithTexts[],\r\n  categories: CategoryWithTexts[],\r\n  places: (Place & {\r\n    tags: TagWithTexts[];\r\n    openingTimes: OpeningTime[];\r\n    reservables: Reservable & {\r\n      ReservableType: ReservableTypeWithTexts\r\n    }[]\r\n  })[]\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const url = new URL(request.url);\r\n  const searchTerm = url.searchParams.get('searchTerm');\r\n  const location =  url.searchParams.get('selectedLocation');\r\n  const dontSave =  url.searchParams.get('dontSave');\r\n  const tags = url.searchParams.getAll('tags[]');\r\n  const categories = url.searchParams.getAll('categories[]');\r\n  const usernameAndAdmin = await getUsernameAndAdmin(request);\r\n\r\n  if (usernameAndAdmin.username != null && dontSave != '1') await addToSearchHistory({\r\n    username: usernameAndAdmin.username,\r\n    phrase: searchTerm ?? '',\r\n    locationId: location ? (await getLocationByName({ cityCountry: location }))?.id ?? null : null,\r\n    tagIds: tags,\r\n    categoryIds: categories\r\n  })\r\n\r\n  return json({\r\n    places: await getPlaceList({ name: searchTerm ?? '', cityCountry: !location || location == '' ? undefined : location, tagIds: tags, catIds: categories }),\r\n    locations: await getAllLocations(),\r\n    tags: await getTagList({ nameFragment: '' }),\r\n    categories: await getCategoryList({ nameFragment: '' }),\r\n  });\r\n};\r\n\r\nconst Title = styled.h6`\r\n  font-size: 1.7rem;\r\n  margin: 0 0 1.5rem 0;\r\n  @media (max-width: 800px) {\r\n    padding: 0rem 2rem;\r\n  }\r\n`;\r\n\r\nconst TopSegment = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: ${styles.colors.primary};\r\n`;\r\n\r\nconst MainSegment = styled.div`\r\n  padding: 3rem 0;\r\n  display: grid;\r\n  gap: 2rem;\r\n  align-items: flex-start;\r\n  grid-template-columns: 22rem 1fr;\r\n  @media (max-width: 800px) {\r\n    grid-template-columns: 100%;\r\n    grid-template-rows: auto 1fr;\r\n  }\r\n`;\r\n\r\nconst PlacesColumn = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport default function Search() {\r\n  \r\n  const { places, locations, tags, categories } = useLoaderData<LoaderData>();\r\n\r\n  console.log(places);\r\n\r\n  const searchParams = useSearchParams()[0];\r\n  return (\r\n    <div>\r\n      <TopSegment>\r\n        <IconRow />\r\n      </TopSegment>\r\n      <WidthRestrictor width={'1368px'}>\r\n        <MainSegment>\r\n          <SearchUI\r\n            searchParams={searchParams}\r\n            locations={locations}\r\n            tags={tags}\r\n            categories={categories}\r\n            narrowView={true}\r\n          />\r\n          <PlacesColumn>\r\n            <Title>Search Results</Title>\r\n            {places.filter(p => !p.hidden).map((place) => (\r\n              <PlaceSummary place={place} key={place.id} inSearch={true} />\r\n            ))}\r\n          </PlacesColumn>\r\n        </MainSegment>\r\n      </WidthRestrictor>\r\n    </div>\r\n  );\r\n}", "import { Link, useLoaderData } from \"@remix-run/react\";\r\n// import { LinkWithLoader } from \"~/components/LinkWithLoader\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1>\r\n        Welcome to the best place in the world.\r\n      </h1>\r\n      <Link to={'/'} >See place list.</Link>\r\n    </div>\r\n  );\r\n}", "import { Link, NavLink, Outlet, useLoaderData } from '@remix-run/react'\r\nimport { json, LoaderFunction } from '@remix-run/server-runtime'\r\nimport styled from 'styled-components';\r\nimport { styles } from '~/constants/styles';\r\nimport { UnstyledLink } from '~/root';\r\n// import { LinkWithLoader } from '~/components/LinkWithLoader';\r\nimport { requireUsernameAndAdmin } from '~/utils/session.server'\r\n\r\ninterface AdminLoaderData {\r\n  forbidden: boolean\r\n}\r\n\r\nconst forbidden = (data: AdminLoaderData) => json(data, { status: 403 });\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const { admin } = await requireUsernameAndAdmin(request);\r\n  if (admin === true) {\r\n    return {}\r\n  }\r\n  return forbidden({ forbidden: true });\r\n}\r\n\r\nconst AdminHeader = styled.div`\r\n  background-color: ${styles.colors.gray[10]};\r\n  display: flex;\r\n  gap: 2rem;\r\n`;\r\n\r\nconst TabButton = styled(UnstyledLink)`\r\n  color: ${styles.colors.black};\r\n  display: block;\r\n  padding: 1rem 1.5rem;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nexport default function Admin() {\r\n  return useLoaderData<AdminLoaderData>().forbidden ? \r\n    <div>Iiii dont think ur an admin m8</div> : <>\r\n    <AdminHeader>\r\n      <TabButton to='/admin/reservations'>Reservations</TabButton>\r\n      <TabButton to='/admin/places'>Places</TabButton>\r\n      <TabButton to='/admin/companies'>Companies</TabButton>\r\n      <TabButton to='/admin/tags'>Tags</TabButton>\r\n      <TabButton to='/admin/categories'>Categories</TabButton>\r\n      <TabButton to='/admin/locations'>Locations</TabButton>\r\n      <TabButton to='/admin/reservableTypes'>Reservable types</TabButton>\r\n    </AdminHeader>\r\n    <div>\r\n      <Outlet />\r\n    </div>\r\n  </>\r\n}", "import { ReservableType, MultilingualName } from '@prisma/client';\r\nimport { Form, useLoaderData } from '@remix-run/react';\r\nimport { ActionFunction, json, LoaderFunction, redirect } from '@remix-run/server-runtime';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { IdInput } from '~/components/inputs/ObjectInput';\r\nimport { TextInput } from '~/components/inputs/TextInput';\r\nimport { useLangs } from '~/contexts/langsContext';\r\nimport { getReservableType, updateReservableType } from '~/models/reservableType.server';\r\nimport { ReservableTypeWithTexts } from '~/types/types';\r\nimport { getFormEssentials } from '~/utils/forms';\r\n\r\ninterface LoaderData {\r\n  reservableType: ReservableTypeWithTexts | null;\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request, params }) => {\r\n  if (!params.reservableTypeId) return json({})\r\n  const x = { reservableType: await getReservableType({ id: params.reservableTypeId }) };\r\n  return json({ reservableType: await getReservableType({ id: params.reservableTypeId }) });\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n\r\n  const { getFormItem, getFormItems } = await getFormEssentials(request);\r\n\r\n  const reservableType: MultilingualName = {\r\n    // this is not the reservableTypeid, dont worry\r\n    id: '-1',\r\n    czech: getFormItem('nameCzech'),\r\n    english: getFormItem('nameEnglish'),\r\n  }\r\n\r\n  await updateReservableType({ multiLangName: reservableType, id: getFormItem('id') });\r\n\r\n  return redirect('/admin/reservableTypes');\r\n\r\n}\r\n\r\nconst ArrayInputWrap = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport default function AdminReservableTypeDetail() {\r\n\r\n  const { reservableType } = useLoaderData<LoaderData>();\r\n\r\n  const { lang } = useLangs();\r\n\r\n  return (\r\n    <div>\r\n      <p>RESERVABLE TYPE {reservableType?.multiLangName && reservableType?.multiLangName[lang]}</p>\r\n      <Form method='post'>\r\n\r\n        <IdInput name='id' value={reservableType?.id ?? ''} />        \r\n        <TextInput name='nameEnglish' title='Name (English)' defaultValue={reservableType?.multiLangName?.english ?? ''} />\r\n        <TextInput name='nameCzech' title='Name (Czech)' defaultValue={reservableType?.multiLangName?.czech ?? ''} />\r\n\r\n        <input type='submit'/>\r\n      </Form>\r\n    </div>\r\n  )\r\n}", "import type { ReservableType, MultilingualName } from \"@prisma/client\";\r\n\r\nimport { prisma } from \"~/db.server\";\r\n\r\nexport type { ReservableType } from \"@prisma/client\";\r\n\r\nexport const createReservableType = async ({ multiLangName }: { multiLangName: MultilingualName }) => (await prisma.reservableType.create({\r\n  data: {\r\n    multiLangName: {\r\n      create: {\r\n        czech: multiLangName.czech,\r\n        english: multiLangName.english\r\n      }\r\n    }\r\n  },\r\n}));\r\n\r\nexport const updateReservableType = async ({ id, multiLangName }: { id: string, multiLangName: MultilingualName }) => (await prisma.reservableType.update({\r\n  where: {\r\n    id\r\n  },\r\n  data: {\r\n    multiLangName: {\r\n      update: {\r\n        czech: multiLangName.czech,\r\n        english: multiLangName.english\r\n      }\r\n    }\r\n  },\r\n}));\r\n\r\n\r\nexport const getReservableType = async ({ id }: Pick<ReservableType, 'id'>) => (await prisma.reservableType.findFirst({\r\n  where: { id },\r\n  include: {\r\n    multiLangName: true\r\n  }\r\n}));\r\n\r\nexport const getReservableTypeList = async ({ nameFragment }: { nameFragment: string }) => (await prisma.reservableType.findMany({\r\n  where: {\r\n    OR: [{\r\n      multiLangName: {\r\n        english: {\r\n          contains: nameFragment ?? '',\r\n          mode: 'insensitive'\r\n        }\r\n      }\r\n    }, {\r\n      multiLangName: {\r\n        czech: {\r\n          contains: nameFragment ?? '',\r\n          mode: 'insensitive'\r\n        }\r\n      }\r\n    }]\r\n  },\r\n  include: {\r\n    multiLangName: true\r\n  }\r\n}));\r\n\r\nexport const getAllReservableTypes = async () => (await prisma.reservableType.findMany({\r\n  include: {\r\n    multiLangName: true\r\n  }\r\n}));\r\n\r\nexport const deleteReservableType = ({ id }: Pick<ReservableType, 'id'>) => (prisma.reservableType.deleteMany({\r\n    where: { id },\r\n}));\r\n", "import { ReservableType } from '@prisma/client';\r\nimport { Link, useLoaderData } from '@remix-run/react';\r\nimport type { LoaderFunction } from '@remix-run/server-runtime';\r\nimport { useLangs } from '~/contexts/langsContext';\r\nimport { getReservableTypeList } from '~/models/reservableType.server';\r\nimport { ReservableTypeWithTexts } from '~/types/types';\r\n\r\ninterface LoaderData {\r\n  categories: ReservableTypeWithTexts[];\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request, params }) => {\r\n  const categories = await getReservableTypeList({ nameFragment: params.reservableTypeId ?? '' });\r\n  return { categories }\r\n}\r\n\r\nexport default function CategoriesAdminIndex() {\r\n\r\n  const { categories } = useLoaderData<LoaderData>();\r\n\r\n  const { lang } = useLangs();\r\n\r\n  return <>\r\n    <div>\r\n      { categories.map(c => <div key={c.id}>\r\n        <p>Name: {c.multiLangName && c.multiLangName[lang]}</p>\r\n        <Link to={`/admin/reservableTypes/${c.id}`}>View / Edit</Link>\r\n      </div>) }\r\n      <Link to={'/admin/reservableTypes/new'} >New reservable type</Link>\r\n    </div>\r\n  </>\r\n}", "import { Company, MultilingualName } from '@prisma/client';\r\nimport { Form, useActionData } from '@remix-run/react';\r\nimport { ActionFunction, LoaderFunction, redirect } from '@remix-run/server-runtime';\r\nimport styled from 'styled-components';\r\nimport { NullLiteral } from 'typescript';\r\nimport { IdInput } from '~/components/inputs/ObjectInput';\r\nimport { TextInput } from '~/components/inputs/TextInput';\r\nimport { createReservableType } from '~/models/reservableType.server';\r\nimport { badRequest, getFormEssentials } from '~/utils/forms';\r\n\r\ninterface ReservableTypeActionData {\r\n  field?: {\r\n    nameCzech: string | null;\r\n    nameEnglish: string | null;\r\n  }\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request, params }) => {\r\n  return {};\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n\r\n  const { getFormItem, getFormItems } = await getFormEssentials(request);\r\n\r\n  const reservableType: MultilingualName = {\r\n    id: '-1',\r\n    czech: getFormItem('nameCzech'),\r\n    english: getFormItem('nameEnglish'),\r\n  }\r\n\r\n  if (!reservableType.english || !reservableType.czech) {\r\n    return badRequest<ReservableTypeActionData>({ field: { nameCzech: reservableType.czech, nameEnglish: reservableType.english } });\r\n  }\r\n\r\n  await createReservableType({ multiLangName: reservableType });\r\n\r\n  return redirect('/admin/reservableTypes');\r\n\r\n}\r\n\r\nexport default function AdminCompanyDetail() {\r\n\r\n  const a = useActionData<ReservableTypeActionData>();\r\n\r\n  return (\r\n    <div>\r\n      <p>RESERVABLE TYPE {a?.field?.nameEnglish ?? ''}</p>\r\n      <Form method='post'>\r\n\r\n        <IdInput name='id' value={'-1'} />        \r\n        <TextInput name='nameCzech' title='Name (Czech)' defaultValue={a?.field?.nameCzech ?? ''} />\r\n        <TextInput name='nameEnglish' title='Name (English)' defaultValue={a?.field?.nameEnglish ?? ''} />\r\n\r\n        <input type='submit'/>\r\n      </Form>\r\n    </div>\r\n  )\r\n}", "import { Outlet } from \"@remix-run/react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrap = styled.div`\r\n  \r\n`;\r\n\r\nexport default function ReservationsAdmin() {\r\n  return <Wrap>\r\n    <Outlet />\r\n  </Wrap>\r\n}", "import { OpeningTime, Place, Reservable, Reservation, ReservationGroup } from '@prisma/client';\r\nimport { Form, useActionData, useLoaderData, useParams } from '@remix-run/react';\r\nimport { ActionFunction, LoaderFunction, redirect } from '@remix-run/server-runtime'\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { DateInput } from '~/components/inputs/DateInput';\r\nimport { IdInput } from '~/components/inputs/ObjectInput';\r\nimport { TextInput } from '~/components/inputs/TextInput';\r\nimport { ReservableTimes } from '~/components/reservable-times';\r\nimport { createReservation, deleteReservation, updateReservation } from '~/models/reservation.server';\r\nimport { getReservationGroup, updateReservationGroup } from '~/models/reservationGroup.server';\r\nimport { Res } from '~/routes/$placeId/reserve';\r\nimport { ReservableWithReservations, ReservationGroupForEdit } from '~/types/types';\r\nimport { badRequest, getDayOfWeek } from '~/utils/forms';\r\n\r\ninterface LoaderData {\r\n  reservationGroup: ReservationGroupForEdit\r\n}\r\n\r\nexport type ReserveActionData = {\r\n  formError?: string;\r\n  fields?: {\r\n    note: string;\r\n    userId: string;\r\n    placeId: string;\r\n  };\r\n};\r\n\r\nexport const loader: LoaderFunction = async ({ params }) => {\r\n  \r\n  // yes this is correct, just want to keep the file structure\r\n  // consistent and the address bar should say 'reservations',\r\n  // not 'reservationGroups'\r\n  // | | |\r\n  // v v v\r\n  const reservationGroupId = params.reservationId;\r\n  const rGroup = await getReservationGroup({ id: reservationGroupId ?? '' });\r\n\r\n  return { reservationGroup: rGroup };\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const form = await request.formData();\r\n  const note = form.get('note')?.toString();\r\n  const placeId = form.get('placeId')?.toString();\r\n  const userId = form.get('userId')?.toString();\r\n  const rgId = form.get('rgId')?.toString();\r\n\r\n  const reservableId = form.getAll('reservableId[]').map(r => r.toString());\r\n  const reservationId = form.getAll('reservationId[]').map(r => r.toString());\r\n  const reservationBackup = form.getAll('reservationBackup[]').map(r => r.toString());\r\n  const dateTimeStart = form.getAll('start[]').map(r => r.toString());\r\n  const dateTimeEnd = form.getAll('end[]').map(r => r.toString());\r\n\r\n  // You need to repeat the validation here!!!!!!\r\n\r\n  if (!dateTimeEnd || !dateTimeStart || !note || !placeId || !userId || !reservableId || note == '') {\r\n    return badRequest({\r\n      fields: {\r\n        note: note ?? '', placeId: placeId ?? '', userId: userId ?? ''\r\n      },\r\n      formError: 'Fill everything in pls.'\r\n    })\r\n  }\r\n\r\n  const resGroup = await updateReservationGroup({ id: rgId ?? '', note, userId });\r\n  const promises: Promise<object>[] = []\r\n  dateTimeStart.forEach((d, i) => {\r\n    if (reservationId[i] == '-1') {\r\n      promises.push(createReservation({ backup: reservationBackup[i] == '1', start: new Date(dateTimeStart[i]), end: new Date(dateTimeEnd[i]), reservableId: reservableId[i] ?? null, reservationGroupId: resGroup.id ?? null }));\r\n    }\r\n    else {\r\n      promises.push(updateReservation({ id: reservationId[i], backup: reservationBackup[i] == '1',  start: new Date(dateTimeStart[i]), end: new Date(dateTimeEnd[i]), reservableId: reservableId[i] ?? null, reservationGroupId: resGroup.id ?? null }));\r\n    }\r\n  });\r\n  // These reservationId(s) only get sent when a time is selected\r\n  // So if our resGroup has ids, which are not here,\r\n  // they need to be deleted\r\n  resGroup.reservations.map(r => r.id).forEach(id => {\r\n    if (!reservationId.includes(id)) {\r\n      promises.push(deleteReservation({ id }));\r\n    }\r\n  })\r\n  await Promise.all(promises);\r\n\r\n  // Here you can return actionData instead to show a confirmation dialog and then\r\n  // redirect to the details from there or something\r\n  return redirect(`/admin/reservations`);\r\n}\r\n\r\nconst getDiffBetweenTwoDates = (close: string | Date, open: string | Date) => {\r\n  const millis = new Date(close).getTime() - new Date(open).getTime();\r\n  return millis / 1000 / 60;\r\n}\r\n\r\nconst Title = styled.h4`\r\n  \r\n`;\r\n\r\nexport default function EditReservation() {\r\n\r\n  const { reservationGroup } = useLoaderData<LoaderData>();\r\n  const [ resList, setResList ] = useState<Res[]>([]);\r\n  const place = reservationGroup?.reservations && reservationGroup.reservations.length > 0 ? reservationGroup?.reservations[0].reservable?.place : null;\r\n\r\n  const actionData = useActionData<ReserveActionData>();\r\n\r\n  const [ date, setDate ] = React.useState<Date | null>(null);\r\n\r\n  return reservationGroup?.userId && place && <Form method='post'>\r\n    <Title>Edit reservation</Title>\r\n    <IdInput name={'userId'} value={reservationGroup.userId} /> \r\n    <IdInput name={'placeId'} value={place.id} />\r\n    <IdInput name={'rgId'} value={reservationGroup.id} />\r\n    <TextInput name={'note'} title={'Note'} defaultValue={reservationGroup.note} />\r\n    <DateInput name={'date'} defaultValue={date} title={'Date'} onChange={setDate} />\r\n    { date && place?.reservables && <ReservableTimes\r\n      reservationBackupName={'reservationBackup[]'}\r\n      reservables={place.reservables}\r\n      date={date}\r\n      openingTime={place.openingTimes.sort((a, b) => a.day - b.day)[getDayOfWeek(date)]}\r\n      startName={'start[]'}\r\n      endName={'end[]'}\r\n      reservableIdName={'reservableId[]'}\r\n      defaultReservationGroup={reservationGroup}\r\n      reservationIdName={'reservationId[]'}\r\n      setResList={setResList}\r\n    /> }\r\n    <p>Backup timeslots (if any):</p>\r\n    { date && place?.reservables && <ReservableTimes\r\n      reservationBackupName={'reservationBackup[]'}\r\n      backup={true}\r\n      reservables={place.reservables}\r\n      date={date}\r\n      openingTime={place.openingTimes.sort((a, b) => a.day - b.day)[getDayOfWeek(date)]}\r\n      startName={'start[]'}\r\n      endName={'end[]'}\r\n      reservableIdName={'reservableId[]'}\r\n      defaultReservationGroup={reservationGroup}\r\n      reservationIdName={'reservationId[]'}\r\n      setResList={setResList}\r\n    /> }\r\n    {\r\n      actionData?.formError && <p>{actionData.formError ?? ''}</p>\r\n    }\r\n    <input type='submit' />\r\n  </Form>\r\n}", "import { Company, Reservable, Reservation } from '@prisma/client';\r\nimport { useLoaderData, useSubmit } from '@remix-run/react';\r\nimport { ActionFunction, json, LoaderFunction } from '@remix-run/server-runtime'\r\nimport styled from 'styled-components';\r\nimport { AdminReservationGroupSummary } from '~/components/admin/reservation-group-summary';\r\nimport { IdInput } from '~/components/inputs/ObjectInput';\r\nimport { ReservationGroupSummary } from '~/components/profile/reservation-group-summary';\r\nimport { Place } from '~/models/place.server';\r\nimport { changeReservationStatus, setStatusOfReservation, setStatusOfReservationsInGroup, updateReservation } from '~/models/reservation.server';\r\nimport { getReservationGroup, getReservationGroupForConfirmationEmail, getReservationGroupList, ReservationGroup } from '~/models/reservationGroup.server'\r\nimport { User } from '~/models/user.server';\r\nimport { ReservationStatus } from '~/types/types';\r\nimport { sendStatusUpdateEmail } from '~/utils/emails.server';\r\n\r\ninterface ReservationsAdminLoaderData {\r\n  reservationGroups: (ReservationGroup & {\r\n    user: User | null;\r\n    reservations: (Reservation & {\r\n        reservable: (Reservable & {\r\n            place: (Place & {\r\n              company: Company | null;\r\n            });\r\n        }) | null;\r\n    })[];\r\n  })[]\r\n}\r\n\r\n\r\nexport const loader: LoaderFunction = async () => {\r\n  const reservationGroups = await getReservationGroupList();\r\n  return json({ reservationGroups });\r\n}\r\n\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const formData = await request.formData();\r\n  // TODO: Validation\r\n  const reservationGroupId = formData.get('rgId')?.toString();\r\n  const action = formData.get('action')?.toString();\r\n\r\n  console.log(\"what dont we have\");\r\n\r\n  if (!reservationGroupId || !action) {\r\n    // return error message\r\n    return {}\r\n  }\r\n\r\n  const reservationGroup = await getReservationGroupForConfirmationEmail({ id: reservationGroupId });\r\n\r\n  const promises: Promise<object>[] = [];\r\n  console.log(reservationGroup);\r\n  \r\n  reservationGroup?.reservations.forEach(r => {\r\n    console.log('r');\r\n    if (action == 'confirm_preferred') {\r\n      if (!r.backup) {\r\n        promises.push(setStatusOfReservation({ id: r.id, status: ReservationStatus.Confirmed }));\r\n      }\r\n      else {\r\n        promises.push(setStatusOfReservation({ id: r.id, status: ReservationStatus.Cancelled }));\r\n      }\r\n    } else if (action == 'unavailable') {\r\n      promises.push(setStatusOfReservation({ id: r.id, status: ReservationStatus.Rejected }));\r\n    } else if (action == 'confirm_backup') {\r\n      if (r.backup) {\r\n        promises.push(setStatusOfReservation({ id: r.id, status: ReservationStatus.Confirmed }));\r\n      }\r\n      else {\r\n        promises.push(setStatusOfReservation({ id: r.id, status: ReservationStatus.Rejected }));\r\n      }\r\n    }\r\n  });\r\n\r\n  await Promise.all(promises);\r\n\r\n  if (reservationGroup?.user && reservationGroup?.reservations[0].reservable?.place) { \r\n    if (action == 'confirm_preferred') {\r\n      await sendStatusUpdateEmail(\r\n        reservationGroup?.user?.email,\r\n        'confirm_preferred',\r\n        reservationGroup?.reservations[0].reservable?.place,\r\n        reservationGroup.reservations[0].start\r\n      );\r\n    } else if (action == 'unavailable') {\r\n      await sendStatusUpdateEmail(\r\n        reservationGroup?.user?.email,\r\n        'unavailable',\r\n        reservationGroup?.reservations[0].reservable?.place,\r\n        reservationGroup.reservations[0].start\r\n      );\r\n    } else if (action == 'confirm_backup') {\r\n      await sendStatusUpdateEmail(\r\n        reservationGroup?.user?.email,\r\n        'confirm_backup',\r\n        reservationGroup?.reservations[0].reservable?.place,\r\n        reservationGroup.reservations[0].start\r\n      );\r\n    }\r\n  }\r\n\r\n  return {}\r\n}\r\n\r\nconst Title = styled.h4`\r\n  \r\n`;\r\n\r\nexport default function ReservationAdminList() {\r\n\r\n  const { reservationGroups } = useLoaderData<ReservationsAdminLoaderData>();\r\n\r\n  return <>\r\n    <Title>Reservations</Title>\r\n    { reservationGroups.map(rg => <AdminReservationGroupSummary key={rg.id} reservationGroup={rg} />) }\r\n  </>\r\n}", "import { Company, Place, Reservable, Reservation, ReservationGroup, User } from \"@prisma/client\"\r\nimport { Form, Link } from \"@remix-run/react\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { styles } from \"~/constants/styles\";\r\nimport { ReservationStatus } from \"~/types/types\"\r\nimport { Button } from \"../button\";\r\nimport { IdInput } from \"../inputs/ObjectInput\";\r\nimport { SingleSelectorInput } from \"../inputs/SingleSelectorInput\";\r\nimport { ReservationSummary } from \"../profile/reservation-summary\"\r\nimport { AdminReservationSummary } from \"./reservation-summary\";\r\n\r\ninterface ReservationGroupSummaryProps {\r\n  reservationGroup: (ReservationGroup & {\r\n    user: User | null;\r\n    reservations: (Reservation & {\r\n        reservable: (Reservable & {\r\n            place: (Place & {\r\n              company: Company | null;\r\n            });\r\n        }) | null;\r\n    })[];\r\n  });\r\n}\r\n\r\nconst Title = styled.h5`\r\n  margin: 0;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nconst InfoTitle = styled.p`\r\n  font-weight: bold;\r\n  font-size: 0.9rem;\r\n  margin: 0;\r\n  margin-top: 1.5rem;\r\n  color: ${styles.colors.action};\r\n`;\r\n\r\nconst Value = styled.p`\r\n  font-size: 1.2rem;\r\n  margin-top: 0.2rem;\r\n  margin-bottom: 0;\r\n`;\r\n\r\nconst SummaryInfoWrap = styled.div`\r\n  display: flex;\r\n  gap: 2rem;\r\n`;\r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  overflow: hidden;\r\n  transition:\r\n    height 0.3s cubic-bezier(0.33, 1, 0.68, 1),\r\n    padding 0.3s cubic-bezier(0.33, 1, 0.68, 1),\r\n    margin 0.3s cubic-bezier(0.33, 1, 0.68, 1),\r\n    opacity 0.3s cubic-bezier(0.33, 1, 0.68, 1);\r\n  box-shadow: ${styles.shadows[0]};\r\n  border-radius: 0.6rem;\r\n  background-color: ${styles.colors.white};\r\n  padding: 1.3rem 1rem;\r\n  align-items: flex-start;\r\n  justify-content: space-between;\r\n  margin-top: 1rem;\r\n  &>* {\r\n    flex-shrink: 0;\r\n  }\r\n`;\r\n\r\nconst UpdateStatus = styled.button`\r\n  display: block;\r\n  margin: 1rem 0rem;\r\n`;\r\n\r\nconst InnerWrap = styled.div`\r\n`;\r\n\r\nexport const AdminReservationGroupSummary: React.FC<ReservationGroupSummaryProps> = ({ reservationGroup: rg }) => {\r\n\r\n  const ref = React.useRef<HTMLDivElement>(null);\r\n\r\n  const actions = [{\r\n    text: \"Confirm preferred\",\r\n    value: \"confirm_preferred\",\r\n  }, {\r\n    text: \"Set as unavailable\",\r\n    value: \"unavailable\",\r\n  }];\r\n\r\n  if (!!rg.reservations.find(r => r.backup)) {\r\n    actions.push({\r\n      text: \"Confirm backup\",\r\n      value: \"confirm_backup\",\r\n    });\r\n  }\r\n\r\n  return <>\r\n    <Wrap key={rg.id} ref={ref}>\r\n      <InnerWrap>\r\n        <Title>{rg.user?.username}</Title>\r\n        { rg.reservations.map(r => <div key={r.id}>\r\n          <AdminReservationSummary reservation={r} />\r\n        </div>) }\r\n        <SummaryInfoWrap>\r\n          <div>\r\n            <InfoTitle>Created</InfoTitle>\r\n            <Value>{new Date(rg.createdAt).toDateString()}, {new Date(rg.createdAt).toTimeString()}</Value>\r\n          </div>\r\n          <div>\r\n            <InfoTitle>Note to business</InfoTitle>\r\n            <Value>{rg.note}</Value>\r\n          </div>\r\n        </SummaryInfoWrap>\r\n        { rg.reservations.length > 0 && !rg.reservations.find(r => r.status == ReservationStatus.Cancelled || r.status == ReservationStatus.Confirmed || r.status == ReservationStatus.Rejected) && <Form method='post' action='/admin/reservations?index'>\r\n          <SingleSelectorInput name='action' possibleValuesAndTexts={actions} defaultValueAndText={null} />\r\n          <IdInput name='rgId' value={rg.id} />\r\n          <p>Select a status in the input above and then hit \"Update status\". This WILL SEND AN EMAIL to the user!</p>\r\n          <UpdateStatus>Update status</UpdateStatus>\r\n        </Form> }\r\n        <Link to={`/admin/reservations/${rg.id}`}>Edit</Link>\r\n      </InnerWrap>\r\n    </Wrap>\r\n  </>\r\n}", "import { Company, Place, Reservable, Reservation } from \"@prisma/client\"\r\nimport { Form } from \"@remix-run/react\";\r\nimport styled from \"styled-components\";\r\nimport { styles } from \"~/constants/styles\";\r\nimport { ReservationStatus } from \"~/types/types\"\r\nimport { getStringTimeValue } from \"~/utils/forms\";\r\nimport { IdInput } from \"../inputs/ObjectInput\";\r\n\r\ninterface ReservationSummaryProps {\r\n  reservation: (Reservation & {\r\n    reservable: (Reservable & {\r\n        place: (Place & {\r\n          company: Company | null;\r\n        });\r\n    }) | null;\r\n  });\r\n}\r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  gap: 2rem;\r\n`;\r\n\r\nconst Title = styled.p`\r\n  font-weight: bold;\r\n  font-size: 0.9rem;\r\n  margin: 0;\r\n  margin-top: 1rem;\r\n  color: ${styles.colors.action};\r\n`;\r\n\r\nconst Value = styled.p`\r\n  font-size: 1.2rem;\r\n  margin-top: 0.2rem;\r\n  margin-bottom: 0;\r\n`;\r\n\r\nexport const AdminReservationSummary: React.FC<ReservationSummaryProps> = ({ reservation: r }) => {\r\n\r\n  return <Wrap>\r\n    {/* <div>\r\n      <Title>Company</Title>\r\n      <Value>{r.reservable?.place.company?.name ?? ''}</Value>\r\n    </div> */}\r\n    <div>\r\n      <Title>Place</Title>\r\n      <Value>{r.reservable?.place.name}</Value>\r\n    </div>\r\n    <div>\r\n      <Title>Facility</Title>\r\n      <Value>{r.reservable?.name}</Value>\r\n    </div>\r\n    <div>\r\n      <Title>Start</Title>\r\n      <Value>{new Date(r.start).toLocaleDateString()} - {getStringTimeValue(new Date(r.start))}</Value>\r\n    </div>\r\n    <div>\r\n      <Title>End</Title>\r\n      <Value>{new Date(r.end).toLocaleDateString()} - {getStringTimeValue(new Date(r.end))}</Value>\r\n    </div>\r\n    <div>\r\n      <Title>Status</Title>\r\n      <Value>{\r\n        (r.status) == ReservationStatus.AwaitingConfirmation ? 'Awaiting confirmation' : \r\n        (r.status) == ReservationStatus.Confirmed ? 'Confirmed' : \r\n        (r.status) == ReservationStatus.Rejected ? 'Rejected' : \r\n        (r.status) == ReservationStatus.Cancelled ? 'Cancelled' : \r\n        (r.status) == ReservationStatus.Paid ? 'Paid' :\r\n        (r.status) == ReservationStatus.Past ? 'Past' : '' \r\n      }</Value>\r\n    </div>\r\n    <div>\r\n      <Title>Previous Status</Title>\r\n      <Value>{\r\n        (r.previousStatus) == ReservationStatus.AwaitingConfirmation ? 'Awaiting confirmation' : \r\n        (r.previousStatus) == ReservationStatus.Confirmed ? 'Confirmed' : \r\n        (r.previousStatus) == ReservationStatus.Rejected ? 'Rejected' : \r\n        (r.previousStatus) == ReservationStatus.Cancelled ? 'Cancelled' : \r\n        (r.previousStatus) == ReservationStatus.Paid ? 'Paid' :\r\n        (r.previousStatus) == ReservationStatus.Past ? 'Past' : '' \r\n      }</Value>\r\n    </div>\r\n    { r.backup && <div>\r\n      <Title>Backup</Title>\r\n      <Value>This slot is a backup.</Value>\r\n    </div> }\r\n  </Wrap>\r\n}", "import { Category } from '@prisma/client';\r\nimport { Outlet, useLoaderData } from '@remix-run/react';\r\nimport type { LoaderFunction } from '@remix-run/server-runtime';\r\n\r\ninterface PlacesAdminLoaderData {\r\n  \r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request, params }) => {\r\n  return {}\r\n}\r\n\r\nexport default function CompaniesAdmin() {\r\n\r\n  return <>\r\n    <div>CATEGORY ADMIN</div>\r\n    <Outlet />\r\n  </>\r\n}", "import { Category, MultilingualName } from '@prisma/client';\r\nimport { Form, useLoaderData } from '@remix-run/react';\r\nimport { ActionFunction, json, LoaderFunction, redirect } from '@remix-run/server-runtime';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { IdInput } from '~/components/inputs/ObjectInput';\r\nimport { TextInput } from '~/components/inputs/TextInput';\r\nimport { useLangs } from '~/contexts/langsContext';\r\nimport { getCategory, updateCategory } from '~/models/category.server';\r\nimport { CategoryWithTexts } from '~/types/types';\r\nimport { getFormEssentials } from '~/utils/forms';\r\n\r\ninterface AdminPlaceDetailLoaderData {\r\n  category: CategoryWithTexts | null;\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request, params }) => {\r\n  if (!params.categoryId) return json({})\r\n  const x = { category: await getCategory({ id: params.categoryId }) };\r\n  return json({ category: await getCategory({ id: params.categoryId }) });\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n\r\n  const { getFormItem, getFormItems } = await getFormEssentials(request);\r\n\r\n  const category: MultilingualName = {\r\n    // this is not the categoryid, dont worry\r\n    id: '-1',\r\n    czech: getFormItem('nameCzech'),\r\n    english: getFormItem('nameEnglish'),\r\n  }\r\n\r\n  await updateCategory({ multiLangName: category, id: getFormItem('id') });\r\n\r\n  return redirect('/admin/categories');\r\n\r\n}\r\n\r\nconst ArrayInputWrap = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport default function AdminCategoryDetail() {\r\n\r\n  const { category } = useLoaderData<AdminPlaceDetailLoaderData>();\r\n\r\n  const { lang } = useLangs();\r\n\r\n  return (\r\n    <div>\r\n      <p>CATEGORY {category?.multiLangName && category?.multiLangName[lang]}</p>\r\n      <Form method='post'>\r\n\r\n        <IdInput name='id' value={category?.id ?? ''} />        \r\n        <TextInput name='nameEnglish' title='Name (English)' defaultValue={category?.multiLangName?.english ?? ''} />\r\n        <TextInput name='nameCzech' title='Name (Czech)' defaultValue={category?.multiLangName?.czech ?? ''} />\r\n\r\n        <input type='submit'/>\r\n      </Form>\r\n    </div>\r\n  )\r\n}", "import { Category } from '@prisma/client';\r\nimport { Link, useLoaderData } from '@remix-run/react';\r\nimport type { LoaderFunction } from '@remix-run/server-runtime';\r\nimport { useLangs } from '~/contexts/langsContext';\r\nimport { getCategoryList } from '~/models/category.server';\r\nimport { CategoryWithTexts } from '~/types/types';\r\n\r\ninterface CategoriesAdminLoaderData {\r\n  categories: CategoryWithTexts[];\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request, params }) => {\r\n  const categories = await getCategoryList({ nameFragment: params.categoryId ?? '' });\r\n  return { categories }\r\n}\r\n\r\nexport default function CategoriesAdminIndex() {\r\n\r\n  const { categories } = useLoaderData<CategoriesAdminLoaderData>();\r\n\r\n  const { lang } = useLangs();\r\n\r\n  return <>\r\n    <div>\r\n      { categories.map(c => <div key={c.id}>\r\n        <p>Name: {c.multiLangName && c.multiLangName[lang]}</p>\r\n        <Link to={`/admin/categories/${c.id}`}>View / Edit</Link>\r\n      </div>) }\r\n      <Link to={'/admin/categories/new'} >New category</Link>\r\n    </div>\r\n  </>\r\n}", "import { Company, MultilingualName } from '@prisma/client';\r\nimport { Form, useActionData } from '@remix-run/react';\r\nimport { ActionFunction, LoaderFunction, redirect } from '@remix-run/server-runtime';\r\nimport styled from 'styled-components';\r\nimport { NullLiteral } from 'typescript';\r\nimport { IdInput } from '~/components/inputs/ObjectInput';\r\nimport { TextInput } from '~/components/inputs/TextInput';\r\nimport { createCategory } from '~/models/category.server';\r\nimport { badRequest, getFormEssentials } from '~/utils/forms';\r\n\r\ninterface CategoryActionData {\r\n  field?: {\r\n    nameCzech: string | null;\r\n    nameEnglish: string | null;\r\n  }\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request, params }) => {\r\n  return {};\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n\r\n  const { getFormItem, getFormItems } = await getFormEssentials(request);\r\n\r\n  const category: MultilingualName = {\r\n    id: '-1',\r\n    czech: getFormItem('nameCzech'),\r\n    english: getFormItem('nameEnglish'),\r\n  }\r\n\r\n  if (!category.english || !category.czech) {\r\n    return badRequest<CategoryActionData>({ field: { nameCzech: category.czech, nameEnglish: category.english } });\r\n  }\r\n\r\n  await createCategory({ multiLangName: category });\r\n\r\n  return redirect('/admin/categories');\r\n\r\n}\r\n\r\nconst ArrayInputWrap = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport default function AdminCompanyDetail() {\r\n\r\n  const a = useActionData<CategoryActionData>();\r\n\r\n  return (\r\n    <div>\r\n      <p>CATEGORY {a?.field?.nameEnglish ?? ''}</p>\r\n      <Form method='post'>\r\n\r\n        <IdInput name='id' value={'-1'} />        \r\n        <TextInput name='nameCzech' title='Name (Czech)' defaultValue={a?.field?.nameCzech ?? ''} />\r\n        <TextInput name='nameEnglish' title='Name (English)' defaultValue={a?.field?.nameEnglish ?? ''} />\r\n\r\n        <input type='submit'/>\r\n      </Form>\r\n    </div>\r\n  )\r\n}", "import { Company } from '@prisma/client';\r\nimport { Outlet, useLoaderData } from '@remix-run/react';\r\nimport type { LoaderFunction } from '@remix-run/server-runtime';\r\n\r\ninterface PlacesAdminLoaderData {\r\n  companies: Company[];\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request, params }) => {\r\n  return {}\r\n}\r\n\r\nexport default function CompaniesAdmin() {\r\n\r\n  const { companies } = useLoaderData<PlacesAdminLoaderData>();\r\n\r\n  return <>\r\n    <div>COMPANY ADMIN</div>\r\n    <Outlet />\r\n  </>\r\n}", "import { Company } from '@prisma/client';\r\nimport { Form, useLoaderData } from '@remix-run/react';\r\nimport { ActionFunction, json, LoaderFunction, redirect } from '@remix-run/server-runtime';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { IdInput } from '~/components/inputs/ObjectInput';\r\nimport { TextInput } from '~/components/inputs/TextInput';\r\nimport { getCompany, updateCompany } from '~/models/company.server';\r\nimport { getFormEssentials } from '~/utils/forms';\r\n\r\ninterface AdminPlaceDetailLoaderData {\r\n  company: Company;\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request, params }) => {\r\n  if (!params.companyId) return json({})\r\n  const x = { company: await getCompany({ id: params.companyId }) };\r\n  return json({ company: await getCompany({ id: params.companyId }) });\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n\r\n  const { getFormItem, getFormItems } = await getFormEssentials(request);\r\n\r\n  const company: Pick<Company, 'id' | 'name'> = {\r\n    id: getFormItem('id'),\r\n    name: getFormItem('name')\r\n  }\r\n\r\n  await updateCompany(company);\r\n\r\n  return redirect('/admin/companies');\r\n\r\n}\r\n\r\nconst ArrayInputWrap = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport default function AdminCompanyDetail() {\r\n\r\n  const { company: defaultPlace } = useLoaderData<AdminPlaceDetailLoaderData>();\r\n\r\n  const [ company, setCompany ] = useState<Company>(defaultPlace);\r\n\r\n  return (\r\n    <div>\r\n      <p>COMPANY {company.name}</p>\r\n      <Form method='post'>\r\n\r\n        <IdInput name='id' value={company?.id} />        \r\n        <TextInput name='name' title='Name' defaultValue={company?.name} />\r\n\r\n        <input type='submit'/>\r\n      </Form>\r\n    </div>\r\n  )\r\n}", "import type { Company } from \"@prisma/client\";\r\n\r\nimport { prisma } from \"~/db.server\";\r\n\r\nexport type { Company } from \"@prisma/client\";\r\n\r\nexport const getCompany = async ({ id }: Pick<Company, 'id'>) => (await prisma.company.findFirst({\r\n  where: { id },\r\n  include: {\r\n    places: true\r\n  }\r\n}));\r\n\r\nexport const getCompanyList = async ({ name: nameFragment }: Pick<Company, 'name'>) => (await prisma.company.findMany({\r\n  where: { name: { contains: nameFragment, mode: 'insensitive' } },\r\n  include: {\r\n    places: true\r\n  }\r\n}));\r\n\r\nexport const getAllCompanys = async () => (await prisma.company.findMany({\r\n  include: {\r\n    places: true\r\n  }\r\n}));\r\n\r\nexport const createCompany = async ({ name }: Pick<Company, 'name'>) => (await prisma.company.create({\r\n  data: {\r\n    name\r\n  },\r\n}));\r\n\r\nexport const updateCompany = async ({ id, name }: Pick<Company, 'id' | 'name'>) => (await prisma.company.update({\r\n  where: {\r\n    id\r\n  },\r\n  data: {\r\n    name\r\n  }\r\n}));\r\n\r\nexport const deleteCompany = ({ id }: Pick<Company, 'id'>) => (prisma.company.deleteMany({\r\n    where: { id },\r\n}));\r\n", "import { Company } from '@prisma/client';\r\nimport { Link, useLoaderData } from '@remix-run/react';\r\nimport type { LoaderFunction } from '@remix-run/server-runtime';\r\nimport { getCompanyList } from '~/models/company.server';\r\n\r\ninterface PlacesAdminLoaderData {\r\n  companies: Company[];\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request, params }) => {\r\n  const companies = await getCompanyList({ name: params.companyId ?? '' });\r\n  return { companies }\r\n}\r\n\r\nexport default function CompaniesAdminIndex() {\r\n\r\n  const { companies } = useLoaderData<PlacesAdminLoaderData>();\r\n\r\n  return <>\r\n    <div>\r\n      { companies.map(c => <div key={c.id}>\r\n        <p>Name: {c.name}</p>\r\n        <Link to={`/admin/companies/${c.id}`}>View / Edit</Link>\r\n      </div>) }\r\n      <Link to={'/admin/companies/new'} >New company</Link>\r\n    </div>\r\n  </>\r\n}", "import { Company } from '@prisma/client';\r\nimport { Form, useActionData, useLoaderData } from '@remix-run/react';\r\nimport { ActionFunction, LoaderFunction, redirect } from '@remix-run/server-runtime';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { IdInput } from '~/components/inputs/ObjectInput';\r\nimport { TextInput } from '~/components/inputs/TextInput';\r\nimport { createCompany } from '~/models/company.server';\r\nimport { badRequest, getFormEssentials } from '~/utils/forms';\r\n\r\ninterface CompanyActionData {\r\n  field?: {\r\n    name: string | null\r\n  }\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request, params }) => {\r\n  return {};\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n\r\n  const { getFormItem, getFormItems } = await getFormEssentials(request);\r\n\r\n  const company: Pick<Company, 'id' | 'name'> = {\r\n    id: getFormItem('id'),\r\n    name: getFormItem('name')\r\n  }\r\n\r\n  if (!company.id || !company.name) {\r\n    return badRequest<CompanyActionData>({ field: { name: company.name } });\r\n  }\r\n\r\n  await createCompany(company);\r\n\r\n  return redirect('/admin/companies');\r\n\r\n}\r\n\r\nconst ArrayInputWrap = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport default function AdminCompanyDetail() {\r\n\r\n  const a = useActionData<CompanyActionData>();\r\n\r\n  const company = { id: '-1', name: a?.field?.name };\r\n\r\n  return (\r\n    <div>\r\n      <p>COMPANY {company.name}</p>\r\n      <Form method='post'>\r\n\r\n        <IdInput name='id' value={'-1'} />        \r\n        <TextInput name='name' title='Name' defaultValue={company.name ?? ''} />\r\n\r\n        <input type='submit'/>\r\n      </Form>\r\n    </div>\r\n  )\r\n}", "import { Outlet } from '@remix-run/react';\r\nimport type { LoaderFunction } from '@remix-run/server-runtime';\r\n\r\nexport const loader: LoaderFunction = async ({ request, params }) => {\r\n  return {}\r\n}\r\n\r\nexport default function TagAdmin() {\r\n\r\n  return <>\r\n    <div>LOCATION ADMIN</div>\r\n    <Outlet />\r\n  </>\r\n}", "import { Location, MultilingualDesc, MultilingualName } from '@prisma/client';\r\nimport { Form, useLoaderData } from '@remix-run/react';\r\nimport { ActionFunction, json, LoaderFunction, redirect } from '@remix-run/server-runtime';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { IdInput } from '~/components/inputs/ObjectInput';\r\nimport { TextInput } from '~/components/inputs/TextInput';\r\nimport { useLangs } from '~/contexts/langsContext';\r\nimport { getLocation, updateLocation } from '~/models/location.server';\r\nimport { LocationWithTexts } from '~/types/types';\r\nimport { getFormEssentials } from '~/utils/forms';\r\n\r\ninterface AdminLocationDetailLoaderData {\r\n  location: LocationWithTexts | null;\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request, params }) => {\r\n  if (!params.locationId) return json({})\r\n  return json({ location: await getLocation({ id: params.locationId }) });\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n\r\n  const { getFormItem, getFormItems } = await getFormEssentials(request);\r\n\r\n  const location: Pick<Location, 'id'> & {\r\n    multiLangCountry: MultilingualName\r\n    multiLangCity: MultilingualDesc\r\n  } = {\r\n    id: getFormItem('id'),\r\n    multiLangCity: {\r\n      id: '-1',\r\n      czech: getFormItem('cityCzech'),\r\n      english: getFormItem('cityEnglish'),\r\n    },\r\n    multiLangCountry: {\r\n      id: '-1',\r\n      czech: getFormItem('countryCzech'),\r\n      english: getFormItem('countryEnglish'),\r\n    },\r\n  }\r\n\r\n  console.log(\"just before update\");\r\n  console.log(location)\r\n  await updateLocation(location);\r\n\r\n  return redirect('/admin/locations');\r\n\r\n}\r\n\r\nconst ArrayInputWrap = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport default function AdminLocationDetail() {\r\n\r\n  const { location } = useLoaderData<AdminLocationDetailLoaderData>();\r\n\r\n  const { lang } = useLangs();\r\n\r\n  return (\r\n    location && <div>\r\n      <p>LOCATION: {location?.multiLangCity && location?.multiLangCity[lang]} in {location?.multiLangCountry && location?.multiLangCountry[lang]}</p>\r\n      <Form method='post'>\r\n\r\n        <IdInput name='id' value={location?.id} />        \r\n        <TextInput name='cityCzech' title='City (Czech)' defaultValue={location?.multiLangCity?.czech ?? ''} />\r\n        <TextInput name='countryCzech' title='Country (Czech)' defaultValue={location?.multiLangCountry?.czech ?? ''} />\r\n        <TextInput name='cityEnglish' title='City (English)' defaultValue={location?.multiLangCity?.english ?? ''} />\r\n        <TextInput name='countryEnglish' title='Country (English)' defaultValue={location?.multiLangCountry?.english ?? ''} />\r\n\r\n        <input type='submit'/>\r\n      </Form>\r\n    </div>\r\n  )\r\n}", "import { Location } from '@prisma/client';\r\nimport { Link, useLoaderData } from '@remix-run/react';\r\nimport type { LoaderFunction } from '@remix-run/server-runtime';\r\nimport { useLangs } from '~/contexts/langsContext';\r\nimport { getAllLocations } from '~/models/location.server';\r\nimport { LocationWithTexts } from '~/types/types';\r\n\r\ninterface LocationsAdminLoaderData {\r\n  locations: LocationWithTexts[];\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request, params }) => {\r\n  const locations = await getAllLocations();\r\n  return { locations }\r\n}\r\n\r\nexport default function CompaniesAdminIndex() {\r\n\r\n  const { locations } = useLoaderData<LocationsAdminLoaderData>();\r\n\r\n  const { lang } = useLangs();\r\n\r\n  return <>\r\n    <div>\r\n      { locations.map(l => <div key={l.id}>\r\n        <p>City: {l.multiLangCity && l.multiLangCity[lang]}</p>\r\n        <p>Country: {l.multiLangCountry && l.multiLangCountry[lang]}</p>\r\n        <Link to={`/admin/locations/${l.id}`}>View / Edit</Link>\r\n      </div>) }\r\n      <Link to={'/admin/locations/new'} >New location</Link>\r\n    </div>\r\n  </>\r\n}", "import { Location, MultilingualDesc, MultilingualName } from '@prisma/client';\r\nimport { Form, useActionData, useLoaderData } from '@remix-run/react';\r\nimport { ActionFunction, LoaderFunction, redirect } from '@remix-run/server-runtime';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { IdInput } from '~/components/inputs/ObjectInput';\r\nimport { TextInput } from '~/components/inputs/TextInput';\r\nimport { createLocation } from '~/models/location.server';\r\nimport { badRequest, getFormEssentials } from '~/utils/forms';\r\n\r\ninterface LocationActionData {\r\n  field?: {\r\n    cityCzech: string | null,\r\n    countryCzech: string | null,\r\n    cityEnglish: string | null,\r\n    countryEnglish: string | null\r\n  }\r\n}\r\n\r\ninterface LocationToCreate {\r\n  multiLangCity: MultilingualDesc,\r\n  multiLangCountry: MultilingualName,\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request, params }) => {\r\n  return {};\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n\r\n  const { getFormItem, getFormItems } = await getFormEssentials(request);\r\n\r\n  const location: LocationToCreate = {\r\n    multiLangCity: {\r\n      id: '-1',\r\n      czech: getFormItem('cityCzech'),\r\n      english: getFormItem('cityEnglish'),\r\n    },\r\n    multiLangCountry: {\r\n      id: '-1',\r\n      czech: getFormItem('countryCzech'),\r\n      english: getFormItem('countryEnglish'),\r\n    }\r\n  }\r\n\r\n  if (!location.multiLangCity.czech || !location.multiLangCity.english || !location.multiLangCountry.czech || !location.multiLangCountry.english) {\r\n    return badRequest<LocationActionData>({ field: {\r\n      cityCzech: location.multiLangCity.czech,\r\n      countryCzech: location.multiLangCountry.czech,\r\n      cityEnglish: location.multiLangCity.english,\r\n      countryEnglish: location.multiLangCountry.english, \r\n    } });\r\n  }\r\n\r\n  await createLocation(location);\r\n\r\n  return redirect('/admin/locations');\r\n\r\n}\r\n\r\nconst ArrayInputWrap = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport default function AdminLocationNew() {\r\n\r\n  const a = useActionData<LocationActionData>();\r\n\r\n  return (\r\n    <div>\r\n      <p>TAG {a?.field?.cityEnglish}</p>\r\n      <Form method='post'>\r\n\r\n        <IdInput name='id' value={'-1'} />        \r\n        <TextInput name='cityCzech' title='City (Czech)' defaultValue={a?.field?.cityCzech ?? ''} />\r\n        <TextInput name='countryCzech' title='Country (Czech)' defaultValue={a?.field?.countryCzech ?? ''} />\r\n        <TextInput name='cityEnglish' title='City (English)' defaultValue={a?.field?.cityEnglish ?? ''} />\r\n        <TextInput name='countryEnglish' title='Country (English)' defaultValue={a?.field?.countryEnglish ?? ''} />\r\n\r\n        <input type='submit'/>\r\n      </Form>\r\n    </div>\r\n  )\r\n}", "import { Company, Reservable } from '@prisma/client';\r\nimport { Outlet, useLoaderData } from '@remix-run/react';\r\nimport type { LoaderFunction } from '@remix-run/server-runtime';\r\nimport { Place } from '~/models/place.server';\r\n\r\ninterface PlacesAdminLoaderData {\r\n  places: (Place & {\r\n    reservables: Reservable[];\r\n    company: Company | null;\r\n})[]\r\n}\r\n\r\nexport const loader: LoaderFunction = async () => {\r\n  return {}\r\n}\r\n\r\nexport default function PlacesAdmin() {\r\n\r\n  const { places } = useLoaderData<PlacesAdminLoaderData>();\r\n\r\n  return <>\r\n    <div>PLACE ADMIN</div>\r\n    <Outlet />\r\n  </>\r\n}", "import { Category, Company, Location, OpeningTime, Reservable, Tag } from '@prisma/client';\r\nimport { unstable_createMemoryUploadHandler, unstable_parseMultipartFormData, UploadHandler } from '@remix-run/node';\r\nimport { Form, useLoaderData } from '@remix-run/react';\r\nimport { ActionFunction, json, LoaderFunction, redirect } from '@remix-run/server-runtime';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button } from '~/components/button';\r\nimport { ArrayInput } from '~/components/inputs/ArrayInput';\r\nimport { ImageInput } from '~/components/inputs/ImageInput';\r\nimport { MultiSelectorInput } from '~/components/inputs/MultiSelectorInput';\r\nimport { NumberInput } from '~/components/inputs/NumberInput';\r\nimport { IdInput } from '~/components/inputs/ObjectInput';\r\nimport { SingleSelectorInput } from '~/components/inputs/SingleSelectorInput';\r\nimport { TextInput } from '~/components/inputs/TextInput';\r\nimport { TimeInput } from '~/components/inputs/TimeInput';\r\nimport { useLangs } from '~/contexts/langsContext';\r\nimport { getCategoryList } from '~/models/category.server';\r\nimport { getCompanyList } from '~/models/company.server';\r\nimport { getLocationList } from '~/models/location.server';\r\nimport { updateOpeningTime } from '~/models/openingTime.server';\r\nimport { addToPlaceGalleryPics, getPlace, Place, removeFromPlaceGalleryPics, updatePlace, updatePlaceProfilePic } from '~/models/place.server';\r\nimport { createReservable, deleteReservable, updateReservable } from '~/models/reservable.server';\r\nimport { getTagList } from '~/models/tag.server';\r\nimport { CategoryWithTexts, LocationWithTexts, PlaceForEdit, ReservableTypeWithTexts, TagWithTexts } from '~/types/types';\r\nimport { getDateObjectFromTimeString, getFormEssentials } from '~/utils/forms';\r\nimport { deleteImageFromS3, uploadImageToS3 } from '~/utils/s3.server';\r\nimport crypto from 'crypto'\r\nimport { getReservableTypeList } from '~/models/reservableType.server';\r\nimport { PutObjectRequest } from 'aws-sdk/clients/s3';\r\nimport { s3 } from '~/db.server';\r\n\r\ninterface AdminPlaceDetailLoaderData {\r\n  place: PlaceForEdit;\r\n  companies: Company[];\r\n  tags: TagWithTexts[];\r\n  categories: CategoryWithTexts[];\r\n  locations: LocationWithTexts[];\r\n  reservableTypes: ReservableTypeWithTexts[];\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request, params }) => {\r\n  if (!params.placeId) return json({})\r\n  return json({\r\n    place: await getPlace({ id: params.placeId }),\r\n    companies: await getCompanyList({ name: '' }),\r\n    tags: await getTagList({ nameFragment: '' }),\r\n    categories: await getCategoryList({ nameFragment: '' }),\r\n    reservableTypes: await getReservableTypeList({ nameFragment: '' }),\r\n    locations: await getLocationList({ cityCountry: '' })\r\n  });\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n\r\n  const getFormItem = (name: string) => imgForm.get(name)?.toString() ?? '';\r\n  const getFormItems = (key: string) => imgForm.getAll(key).map(r => r.toString());\r\n\r\n  const uploadHandlerY = unstable_createMemoryUploadHandler({\r\n    maxFileSize: 500_000\r\n  });\r\n\r\n  const imgForm = await unstable_parseMultipartFormData(\r\n    request,\r\n    uploadHandlerY\r\n  )\r\n\r\n  const profilePic = imgForm.get('profilePic') as File;\r\n  const galleryPics = imgForm.getAll('galleryPic[]') as File[];\r\n  console.log(profilePic);\r\n  console.log(galleryPics);\r\n  const extension = profilePic ? profilePic.name.split('.')[profilePic.name.split('.').length - 1] : '';\r\n  const acceptableTypes = ['jpeg', 'jpg', 'png', 'webp', 'gif'];\r\n  const profilePicUrl = acceptableTypes.includes(extension) ? await uploadImageToS3(profilePic, `${crypto.randomUUID()}.${extension}`) : '';\r\n  const galleryPicUrlPromises: (Promise<string>)[] = [];\r\n  galleryPics.forEach((p) => {\r\n    const extensionG = p.name.split('.')[p.name.split('.').length - 1];\r\n    const acceptableTypes = ['jpeg', 'jpg', 'png', 'webp', 'gif'];\r\n    if (!acceptableTypes.includes(extensionG)) {\r\n      return;\r\n    }\r\n    galleryPicUrlPromises.push(uploadImageToS3(p, `${crypto.randomUUID()}.${extensionG}`));\r\n  });\r\n  const galleryPicUrls = await Promise.all(galleryPicUrlPromises);\r\n  console.log(profilePicUrl);\r\n  console.log(galleryPicUrls);\r\n\r\n  const place: Pick<Place, 'id' | 'name' | 'companyId' | 'hidden' | 'description' | 'street' | 'city' | 'postCode' | 'howToGetThere'> & {\r\n    addedTagIds: string[],\r\n    removedTagIds: string[],\r\n    addedCategoryIds: string[],\r\n    removedCategoryIds: string[],\r\n    locationId: string\r\n  } = {\r\n    id: getFormItem('id'),\r\n    name: getFormItem('name'),\r\n    description: getFormItem('description'),\r\n    companyId: getFormItem('companyId'),\r\n    hidden: getFormItem('hidden') == '1',\r\n    addedTagIds: getFormItems('addedTagIds[]'),\r\n    removedTagIds: getFormItems('removedTagIds[]'),\r\n    addedCategoryIds: getFormItems('addedCategoryIds[]'),\r\n    removedCategoryIds: getFormItems('removedCategoryIds[]'),\r\n    locationId: getFormItem('locationId'),\r\n    street: getFormItem('street'),\r\n    city: getFormItem('city'),\r\n    postCode: getFormItem('postCode'),\r\n    howToGetThere: getFormItem('howToGetThere'),\r\n\r\n  }\r\n\r\n  const reservables: Pick<Reservable, 'id' | 'name' | 'placeId' | 'minimumReservationTime' | 'reservationsPerSlot' | 'reservableDaysAhead' | 'reservableTypeId'>[] = getFormItems('reservableId[]').map((id, i) => {\r\n    return {\r\n      id,\r\n      name: getFormItems('reservableName[]')[i],\r\n      reservableTypeId: getFormItems('reservableTypeId[]')[i],\r\n      minimumReservationTime: parseInt(getFormItems('minimumReservationTime[]')[i]),\r\n      reservationsPerSlot: parseInt(getFormItems('reservationsPerSlot[]')[i]),\r\n      reservableDaysAhead: parseInt(getFormItems('reservableDaysAhead[]')[i]),\r\n      placeId: place.id\r\n    }\r\n  });\r\n\r\n  const openingTimes: Pick<OpeningTime, 'id' | 'open' | 'close' | 'day'>[] = getFormItems('openingTime[]').map((id, i) => {\r\n    return {\r\n      id,\r\n      open: getDateObjectFromTimeString(getFormItems('open[]')[i]),\r\n      close: getDateObjectFromTimeString(getFormItems('close[]')[i]),\r\n      day: parseInt(getFormItems('day[]')[i])\r\n    }\r\n  });\r\n\r\n  const deletedReservableIds = getFormItems('deletedReservable[]');\r\n  const deletedGalleryPicUrls = getFormItems('deletedGalleryPicUrls[]');\r\n  const keysToDelete = deletedGalleryPicUrls.map(u => u.split('/')[u.split('/').length - 1]);\r\n\r\n  const promises: Promise<object>[] = [\r\n    ...reservables.map(r => r.id == '-1' ? createReservable(r) : updateReservable(r)),\r\n    ...openingTimes.sort((a, b) => a.day - b.day).map(ot => updateOpeningTime(ot)),\r\n    ...deletedReservableIds.map(id => deleteReservable({ id })),\r\n    updatePlace(place)\r\n  ];\r\n\r\n  if (profilePicUrl && profilePicUrl != '') promises.push(updatePlaceProfilePic({ id: place.id, profilePicUrl }));\r\n  if (galleryPicUrls && galleryPicUrls.length > 0) promises.push(addToPlaceGalleryPics({ id: place.id, galleryPicUrls }));\r\n  if (deletedGalleryPicUrls && deletedGalleryPicUrls.length > 0) promises.push(removeFromPlaceGalleryPics({ id: place.id, galleryPicUrls: deletedGalleryPicUrls }));\r\n\r\n  console.log(\"Keys to delete\");\r\n  console.log(keysToDelete);\r\n  console.log(deletedGalleryPicUrls);\r\n  if (keysToDelete && keysToDelete.length > 0) keysToDelete.forEach(k => {console.log(k); promises.push(deleteImageFromS3(k))});\r\n\r\n  await Promise.all(promises);\r\n\r\n  return redirect('/admin/places');\r\n}\r\n\r\nconst ArrayInputWrap = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport default function AdminPlaceDetail() {\r\n\r\n  const { place: defaultPlace, companies, tags, locations, categories, reservableTypes } = useLoaderData<AdminPlaceDetailLoaderData>();\r\n\r\n  const [ place, setPlace ] = useState<PlaceForEdit>(defaultPlace);\r\n  const [ deletedReservables, setDeletedReservables ] = useState<string[]>([]);\r\n  const [ deletedGalleryImages, setDeletedGalleryImages ] = useState<string[]>([]);\r\n  const [ addedImages, setAddedImages ] = useState<number>(1);\r\n\r\n  const daysOfWeek = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];\r\n\r\n  const deleteReservable = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, id: string) => {\r\n    if (id != '-1') {\r\n      setDeletedReservables([...deletedReservables, id])\r\n    }\r\n    setPlace({\r\n      ...place,\r\n      reservables: [...place.reservables.filter(rx => rx.id != id)]\r\n    });\r\n  }\r\n\r\n  const addReservable = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    e.preventDefault();\r\n    setPlace({\r\n      ...place,\r\n      reservables: [\r\n        ...place.reservables,\r\n        {\r\n          id: '-1',\r\n          name: '',\r\n          createdAt: new Date(),\r\n          updatedAt: new Date(),\r\n          placeId: place.id,\r\n          minimumReservationTime: 30,\r\n          reservationsPerSlot: 1,\r\n          reservableTypeId: null,\r\n          reservableDaysAhead: 30\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  const { lang } = useLangs();\r\n\r\n  const findReservableTypeName = (id: string) => {\r\n    let s = reservableTypes.find(rp => rp.id == id);\r\n    if (s?.multiLangName) {\r\n      return s.multiLangName[lang];\r\n    }\r\n    return '';\r\n  }\r\n\r\n  return <div>\r\n    <Form method='post' encType='multipart/form-data'>\r\n\r\n      <IdInput name='id' value={place?.id} />        \r\n      <TextInput name='name' title='Name' defaultValue={place?.name} />\r\n      <TextInput name='description' title='Description' defaultValue={place?.description} />\r\n\r\n      <TextInput name='street' title='Street' defaultValue={place?.street ?? ''} />\r\n      <TextInput name='city' title='City' defaultValue={place?.city ?? ''} />\r\n      <TextInput name='postCode' title='Postcode' defaultValue={place?.postCode ?? ''} />\r\n      <TextInput name='howToGetThere' title='How to get here?' defaultValue={place?.howToGetThere ?? ''} />\r\n\r\n      <select name='hidden' defaultValue={place.hidden ? '1' : '0'}>\r\n        <option value='1'>Hidden</option>\r\n        <option value='0'>Not hidden</option>\r\n      </select>\r\n      <select name='companyId' defaultValue={place?.companyId ?? ''}>\r\n        { companies.map(c => <option key={c.id} value={c.id} >{c.name}</option>) }\r\n      </select>\r\n\r\n      <ArrayInput\r\n        arrayTitle={'Reservables'}\r\n        deletedIdsName={'deletedReservable[]'}\r\n        deletedIds={deletedReservables}\r\n        onAdd={(e) => { addReservable(e); }}\r\n        addButtonText='Add new reservable'\r\n      >\r\n        { place.reservables.map(r => <ArrayInputWrap key={r.id + r.createdAt}>\r\n          <IdInput name='reservableId[]' value={r.id} />\r\n          <TextInput title='Reservable name' name='reservableName[]' defaultValue={r.name} />\r\n          <NumberInput title='Minimum reservation interval (minutes)' name='minimumReservationTime[]' defaultValue={r.minimumReservationTime} />\r\n          <NumberInput title='Reservations per slot' name='reservationsPerSlot[]' defaultValue={r.reservationsPerSlot} />\r\n          <NumberInput title='Reservable days ahead' name='reservableDaysAhead[]' defaultValue={r.reservableDaysAhead} />\r\n          <SingleSelectorInput defaultValueAndText={\r\n            r.reservableTypeId ? { value: r.reservableTypeId, text: findReservableTypeName(r.reservableTypeId) } : null\r\n          } title='Reservable type' name='reservableTypeId[]' possibleValuesAndTexts={\r\n            reservableTypes.map(rt => ({ value: rt.id, text: rt.multiLangName ? rt.multiLangName[lang] : '' }))\r\n          } />\r\n          <Button onClick={(e) => { deleteReservable(e, r.id); }}>Delete</Button>\r\n        </ArrayInputWrap>) }\r\n      </ArrayInput>\r\n\r\n      <ArrayInput arrayTitle='Opening times'>\r\n        { place.openingTimes.sort((a, b) => a.day - b.day).map(t => <ArrayInputWrap key={t.id}>\r\n          <p>{daysOfWeek[t.day]}</p>\r\n          <IdInput name='openingTime[]' value={`${t.id}`} />\r\n          <IdInput name='day[]' value={`${t.day}`} />\r\n          <TimeInput title='Open:' name='open[]' defaultValue={new Date(t.open)} />\r\n          <TimeInput title='Close:' name='close[]' defaultValue={new Date(t.close)} />\r\n        </ArrayInputWrap>) }\r\n      </ArrayInput>\r\n\r\n      <MultiSelectorInput\r\n        possibleValuesAndTexts={tags.map(t => ({ value: t.id, text: t.multiLangName ? t.multiLangName[lang] : '' }))}\r\n        defaultValuesAndTexts={place.tags.map(t => ({ value: t.id, text: t.multiLangName ? t.multiLangName[lang] : '' }))}\r\n        removedName={'removedTagIds[]'}\r\n        addedName={'addedTagIds[]'}\r\n      />\r\n\r\n      <MultiSelectorInput\r\n        possibleValuesAndTexts={categories.map(c => ({ value: c.id, text: c.multiLangName ? c.multiLangName[lang] : '' }))}\r\n        defaultValuesAndTexts={place.categories.map(c => ({ value: c.id, text: c.multiLangName ? c.multiLangName[lang] : '' }))}\r\n        removedName={'removedCategoryIds[]'}\r\n        addedName={'addedCategoryIds[]'}\r\n      />\r\n\r\n      <SingleSelectorInput\r\n        possibleValuesAndTexts={locations.map(l => ({ value: l.id, text: `${l.multiLangCity ? l.multiLangCity[lang] : ''}, ${l.multiLangCountry ? l.multiLangCountry[lang] : ''}` }))}\r\n        name={'locationId'}\r\n        defaultValueAndText={{\r\n          value: place.Location?.id ?? '',\r\n          text: place.Location ? `${place.Location?.multiLangCity ? place.Location?.multiLangCity[lang] : ''}, ${place.Location?.multiLangCountry ? place.Location?.multiLangCountry[lang] : ''}` : ''\r\n      }} />\r\n\r\n      <p>Profile picture</p>\r\n      {place.profilePicUrl && <img loading='lazy' style={{ height: '120px', width: '120px' }} src={place.profilePicUrl} /> }\r\n      <p>Replace:</p>\r\n      <ImageInput name='profilePic' />\r\n\r\n      <p>Gallery pictures</p>\r\n      { place.galleryPicUrls.map((g, i) => (!deletedGalleryImages.includes(g) && <div key={i}>\r\n        <img loading='lazy' style={{ height: '120px', width: '120px' }} src={g ?? ''} />\r\n        <Button onClick={() => { setDeletedGalleryImages([...deletedGalleryImages, g]) }}>Delete</Button>\r\n      </div>)) }\r\n      { deletedGalleryImages.map((d, i) => <IdInput key={i} name='deletedGalleryPicUrls[]' value={d} />) }\r\n      { [...Array(addedImages).keys()].map(i => (\r\n        <ImageInput onChange={(value) => {\r\n          if (value != '') setAddedImages(addedImages + 1);\r\n        }} key={i} name='galleryPic[]' />\r\n      )) }\r\n\r\n      <input type='submit'/>\r\n    </Form>\r\n  </div>\r\n}", "import styled from \"styled-components\"\r\n\r\ninterface ButtonProps {\r\n  children?: React.ReactNode,\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => any,\r\n}\r\n\r\nconst ButtonWrap = styled.button`\r\n\r\n`;\r\n\r\nexport const Button: React.FC<ButtonProps> = ({ children, onClick }: ButtonProps) => <ButtonWrap onClick={(e) => {\r\n  e.preventDefault();\r\n  onClick(e)\r\n}}>{children}</ButtonWrap>", "import React, { PropsWithChildren } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { styles } from \"~/constants/styles\";\r\n\r\ninterface ArrayInputProps {\r\n  deletedIdsName?: string,\r\n  deletedIds?: string[],\r\n  arrayTitle: string,\r\n  children?: React.ReactNode,\r\n  onAdd?: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void,\r\n  addButtonText?: string\r\n}\r\n\r\nexport const ArrayInput: React.FC<ArrayInputProps> = <T,>({ onAdd, deletedIdsName, deletedIds, arrayTitle, children, addButtonText }: ArrayInputProps) => {\r\n\r\n  return <div>\r\n    <label>{arrayTitle}</label>\r\n    { deletedIdsName && deletedIds ? deletedIds.map(id => (\r\n      <input key={id} name={ deletedIdsName } type='text' readOnly={true} value={id} hidden={true} />\r\n    )) : null }\r\n    { children }\r\n    { onAdd && addButtonText && <button onClick={(e) => {\r\n      e.preventDefault();\r\n      onAdd(e);\r\n    }}>{addButtonText}</button> }\r\n  </div>\r\n\r\n}\r\n", "import React, { useState } from \"react\";\r\nimport { IdInput } from \"./ObjectInput\";\r\n\r\ninterface ImageInputProps {\r\n  name: string,\r\n  hidden?: boolean,\r\n  onChange?: (v: string | null | undefined) => void\r\n}\r\n\r\nexport const ImageInput: React.FC<ImageInputProps> = ({ name, hidden, onChange }) => {\r\n\r\n  const [ hasValue, setHasValue ] = useState(false);\r\n\r\n  return <div style={{ visibility: hidden ? 'hidden' : 'visible' }}>\r\n    <input type='file' name={hasValue ? name : ''} accept='.png,.jpg,.jpeg,.webp,.gif' onChange={(e) => {\r\n      setHasValue(e.currentTarget.value != null && e.currentTarget.value != '');\r\n      if (onChange) onChange(e.currentTarget.value);\r\n    }} />\r\n  </div>\r\n}", "import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { styles } from \"~/constants/styles\";\r\n\r\ninterface NumberInputProps {\r\n  name: string,\r\n  title: string,\r\n  defaultValue: number\r\n}\r\n\r\nconst NumberInputField = styled.input`\r\n  font-size: 0.8rem;\r\n  line-height: 2rem;\r\n  padding: 0rem 1rem;\r\n  border: 1.5px solid ${styles.colors.gray[30]};\r\n  border-radius: 0.3rem;\r\n  outline: none;\r\n  &:focus {\r\n    border: 1.5px solid ${styles.colors.gray[50]};\r\n  }\r\n`;\r\n\r\nexport const NumberInput: React.FC<NumberInputProps> = ({ name, title, defaultValue }: NumberInputProps) => {\r\n\r\n  const [ value, setValue ] = React.useState<number | null>(defaultValue);\r\n\r\n  return <div>\r\n    <label>{title}</label>\r\n    <NumberInputField type='text' value={value?.toString() ?? ''} onChange={(e) => {\r\n      if (e.currentTarget.value == '') {\r\n        setValue(null);\r\n      }\r\n      else if (!isNaN(parseInt(e.currentTarget.value))) {\r\n        setValue(parseInt(e.currentTarget.value));\r\n      }\r\n    }} />\r\n    <input name={name} type='number' readOnly={true} value={value ?? ''} hidden={true} />\r\n  </div>\r\n\r\n}\r\n", "import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { styles } from \"~/constants/styles\";\r\nimport { getStringTimeValue } from \"~/utils/forms\";\r\n\r\ninterface TimeInputProps {\r\n  name: string,\r\n  defaultValue: Date | null,\r\n  title: string\r\n}\r\n\r\nconst isTimePossible = (value: string): boolean => {\r\n  return /^(?:(?:[0-1]|$)(?:\\d|$)|(?:[2]|$)(?:[0-3]|$))(?::|$)(?:(?:[0-5]|$)(?:\\d|$))$/.test(value);\r\n}\r\n\r\nconst isTimeValid = (value: string): boolean => {\r\n  return /^(?:(?:[0-1])(?:\\d)|(?:[2])(?:[0-3]))(?::)(?:(?:[0-5])(?:\\d))$/.test(value);\r\n}\r\n\r\nconst TimeInputField = styled.input`\r\n  font-size: 0.8rem;\r\n  line-height: 2rem;\r\n  padding: 0rem 1rem;\r\n  border: 1.5px solid ${styles.colors.gray[30]};\r\n  border-radius: 0.3rem;\r\n  outline: none;\r\n  width: 5ch;\r\n  &:focus {\r\n    border: 1.5px solid ${styles.colors.gray[50]};\r\n  }\r\n`;\r\n\r\nexport const TimeInput: React.FC<TimeInputProps> = ({ name, defaultValue, title }: TimeInputProps) => {\r\n\r\n  const [ value, setValue ] = React.useState<string>(defaultValue ? getStringTimeValue(defaultValue) : '');\r\n  const [ isValid, setIsValid ] = React.useState<boolean>(isTimeValid(value));\r\n\r\n  React.useEffect(() => {\r\n    setIsValid(isTimeValid(value));\r\n  }, [value]);\r\n\r\n  return <div>\r\n    <label>{title}</label>\r\n    <TimeInputField type='text' value={value} onChange={(e) => {\r\n      if (isTimePossible(e.currentTarget.value)) setValue(e.currentTarget.value);\r\n    }} />\r\n    <input name={name} type='time' readOnly={true} value={value} hidden={true} />\r\n  </div>\r\n\r\n}\r\n", "import type { OpeningTime } from \"@prisma/client\";\r\n\r\nimport { prisma } from \"~/db.server\";\r\n\r\nexport type { OpeningTime } from \"@prisma/client\";\r\n\r\nexport const getOpeningTime = async ({ id }: Pick<OpeningTime, 'id'>) => (await prisma.openingTime.findFirst({\r\n  where: { id },\r\n}));\r\n\r\nexport const getOpeningTimeList = async () => (await prisma.openingTime.findMany({\r\n}));\r\n\r\nexport const createOpeningTime = async ({ placeId, day, open, close }: Pick<OpeningTime, 'open' | 'close' | 'day' | 'placeId'>) => (await prisma.openingTime.create({\r\n  data: {\r\n    placeId, day, open, close\r\n  },\r\n}));\r\n\r\nexport const updateOpeningTime = async ({ id, open, close }: Pick<OpeningTime, 'id' | 'open' | 'close'>) => (await prisma.openingTime.update({\r\n  where: {\r\n    id\r\n  },\r\n  data: {\r\n    open, close\r\n  },\r\n}));\r\n\r\nexport const deleteOpeningTime = ({ id }: Pick<OpeningTime, 'id'>) => (prisma.openingTime.deleteMany({\r\n    where: { id },\r\n}));\r\n", "import type { Reservable } from \"@prisma/client\";\r\n\r\nimport { prisma } from \"~/db.server\";\r\n\r\nexport type { Reservable } from \"@prisma/client\";\r\n\r\nexport const getReservable = async ({ id }: Pick<Reservable, 'id'>) => (await prisma.reservable.findFirst({\r\n  where: { id },\r\n}));\r\n\r\nexport const getReservableList = async () => (await prisma.reservable.findMany({\r\n}));\r\n\r\nexport const createReservable = async ({\r\n  placeId,\r\n  name,\r\n  minimumReservationTime,\r\n  reservationsPerSlot,\r\n  reservableTypeId,\r\n  reservableDaysAhead\r\n}: Pick<Reservable, 'placeId' | 'name' | 'minimumReservationTime' | 'reservationsPerSlot' | 'reservableDaysAhead' | 'reservableTypeId'>) => (await prisma.reservable.create({\r\n  data: {\r\n    placeId, name, minimumReservationTime, reservationsPerSlot, reservableTypeId, reservableDaysAhead\r\n  },\r\n}));\r\n\r\nexport const updateReservable = async ({\r\n  id,\r\n  placeId,\r\n  name,\r\n  minimumReservationTime,\r\n  reservationsPerSlot,\r\n  reservableTypeId,\r\n  reservableDaysAhead\r\n}: Pick<Reservable, 'id' | 'placeId' | 'name' | 'minimumReservationTime' | 'reservationsPerSlot' | 'reservableDaysAhead' | 'reservableTypeId'>) => (await prisma.reservable.update({\r\n  where: {\r\n    id\r\n  },\r\n  data: {\r\n    placeId, name, minimumReservationTime, reservationsPerSlot, reservableTypeId, reservableDaysAhead\r\n  }\r\n}));\r\n\r\nexport const deleteReservable = ({ id }: Pick<Reservable, 'id'>) => (prisma.reservable.deleteMany({\r\n    where: { id },\r\n}));\r\n", "import { S3 } from \"aws-sdk\"\r\nimport { InternalSymbolName } from \"typescript\";\r\nimport { s3 } from \"~/db.server\"\r\n\r\nexport const uploadImageToS3 = async (image: File, fileName: string) => {\r\n  const params: S3.PutObjectRequest = {\r\n    Bucket: 'reserveroobucket',\r\n    Body: new Uint8Array(await image.arrayBuffer()),\r\n    Key: fileName\r\n  };\r\n\r\n  return (await s3.upload(params).promise()).Location;\r\n}\r\n\r\nexport const getImageFromS3 = async (url: string) => {\r\n  const params: S3.GetObjectRequest = {\r\n    Bucket: 'reserveroobucket',\r\n    Key: 'mytestimage.png'\r\n  };\r\n\r\n  return (await s3.getObject(params).promise());\r\n}\r\n\r\nexport const deleteImageFromS3 = async (key: string) => {\r\n  const params: S3.DeleteObjectRequest = {\r\n    Bucket: 'reserveroobucket',\r\n    Key: key\r\n  };\r\n\r\n  return (await s3.deleteObject(params).promise());\r\n}", "import { Company, Reservable } from '@prisma/client';\r\nimport { Link, useLoaderData } from '@remix-run/react';\r\nimport type { LoaderFunction } from '@remix-run/server-runtime';\r\nimport { getAllPlaces, Place } from '~/models/place.server';\r\n\r\ninterface PlacesAdminLoaderData {\r\n  places: (Place & {\r\n    reservables: Reservable[];\r\n    company: Company | null;\r\n})[]\r\n}\r\n\r\nexport const loader: LoaderFunction = async () => {\r\n  const places = await getAllPlaces();\r\n  return { places }\r\n}\r\n\r\nexport default function PlacesAdminIndex() {\r\n\r\n  const { places } = useLoaderData<PlacesAdminLoaderData>();\r\n\r\n  return <>\r\n    <div>\r\n      { places.map(p => <div key={p.id}>\r\n        <p>Name (Company): {p.name} ({p.company?.name})</p>\r\n        <Link to={`/admin/places/${p.id}`}>View / Edit</Link>\r\n      </div>) }\r\n    </div>\r\n    <Link to='/admin/places/new'>New Place</Link>\r\n  </>\r\n}", "import { Company, OpeningTime, Place } from '@prisma/client';\r\nimport { Form, useActionData, useLoaderData } from '@remix-run/react';\r\nimport { ActionFunction, json, LoaderFunction, redirect } from '@remix-run/server-runtime';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { IdInput } from '~/components/inputs/ObjectInput';\r\nimport { TextInput } from '~/components/inputs/TextInput';\r\nimport { getCompanyList } from '~/models/company.server';\r\nimport { createOpeningTime } from '~/models/openingTime.server';\r\nimport { createPlace } from '~/models/place.server';\r\nimport { badRequest, getFormEssentials } from '~/utils/forms';\r\n\r\ninterface PlaceActionData {\r\n  field?: {\r\n    name: string | null,\r\n    companyId: string | null\r\n  }\r\n}\r\n\r\ninterface LoaderData {\r\n  companies: Company[]\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request, params }) => {\r\n  return json({ companies: await getCompanyList({ name: '' })});\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n\r\n  const { getFormItem } = await getFormEssentials(request);\r\n\r\n  const place: Pick<Place, 'name' | 'companyId'> = {\r\n    name: getFormItem('placeName'),\r\n    companyId: getFormItem('companyId')\r\n  }\r\n\r\n  if (!place.name) {\r\n    return badRequest<PlaceActionData>({ field: { name: place.name, companyId: place.companyId } });\r\n  }\r\n\r\n  const createdPlace = await createPlace(place);\r\n\r\n  const openingTimes: Pick<OpeningTime, 'day' | 'open' | 'close' | 'placeId'>[] = [...Array(7).keys()].map(i => ({\r\n    day: i,\r\n    open: new Date(0, 0, 0, 8, 30),\r\n    close: new Date(0, 0, 0, 16, 30),\r\n    placeId: createdPlace.id\r\n  }));\r\n\r\n  await Promise.all(openingTimes.sort((a, b) => a.day - b.day).map(o => createOpeningTime(o)));\r\n\r\n  return redirect('/admin/places');\r\n\r\n}\r\n\r\nconst ArrayInputWrap = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport default function AdminPlaceDetail() {\r\n\r\n  const a = useActionData<PlaceActionData>();\r\n  const { companies } = useLoaderData<LoaderData>();\r\n\r\n  const company = { id: '-1', name: a?.field?.name };\r\n\r\n  return (\r\n    <div>\r\n      <p>COMPANY {company.name}</p>\r\n      <Form method='post'>\r\n\r\n        <TextInput name='placeName' title='Place name' defaultValue={company.name ?? ''} />\r\n        <select name='companyId'>\r\n          { companies.map(c => <option key={c.id} value={c.id} >{c.name}</option>) }\r\n        </select>\r\n\r\n        <input type='submit'/>\r\n      </Form>\r\n    </div>\r\n  )\r\n}", "import { Tag } from '@prisma/client';\r\nimport { Outlet } from '@remix-run/react';\r\nimport type { LoaderFunction } from '@remix-run/server-runtime';\r\n\r\ninterface PlacesAdminLoaderData {\r\n  tags: Tag[];\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request, params }) => {\r\n  return {}\r\n}\r\n\r\nexport default function TagAdmin() {\r\n\r\n  return <>\r\n    <div>TAG ADMIN</div>\r\n    <Outlet />\r\n  </>\r\n}", "import { MultilingualDesc, MultilingualName, Tag } from '@prisma/client';\r\nimport { Form, useLoaderData } from '@remix-run/react';\r\nimport { ActionFunction, json, LoaderFunction, redirect } from '@remix-run/server-runtime';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { IdInput } from '~/components/inputs/ObjectInput';\r\nimport { TextInput } from '~/components/inputs/TextInput';\r\nimport { getTag, updateTag } from '~/models/tag.server';\r\nimport { TagWithTexts } from '~/types/types';\r\nimport { getFormEssentials } from '~/utils/forms';\r\n\r\ninterface AdminTagDetailLoaderData {\r\n  tag: Tag & {\r\n    multiLangName: MultilingualName | null;\r\n    multiLangDesc: MultilingualDesc | null;\r\n  };\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request, params }) => {\r\n  if (!params.tagId) return json({})\r\n  const x = { tag: await getTag({ id: params.tagId }) };\r\n  return json({ tag: await getTag({ id: params.tagId }) });\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n\r\n  const { getFormItem, getFormItems } = await getFormEssentials(request);\r\n\r\n  const tag: TagWithTexts = {\r\n    id: getFormItem('id'),\r\n    multiLangName: { id: '-1', czech: getFormItem('nameCzech'), english: getFormItem('nameEnglish') },\r\n    multiLangDesc: { id: '-1', czech: getFormItem('descriptionCzech'), english: getFormItem('nameEnglish') },\r\n  }\r\n\r\n  await updateTag(tag);\r\n\r\n  return redirect('/admin/tags');\r\n\r\n}\r\n\r\nconst ArrayInputWrap = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport default function AdminTagDetail() {\r\n\r\n  const { tag } = useLoaderData<AdminTagDetailLoaderData>();\r\n\r\n  return (\r\n    <div>\r\n      <p>TAG: {tag.multiLangName?.czech}</p>\r\n      <Form method='post'>\r\n\r\n        <IdInput name='id' value={tag?.id} />        \r\n        <TextInput name='nameCzech' title='Name (Czech)' defaultValue={tag?.multiLangName?.czech} />\r\n        <TextInput name='descriptionCzech' title='Description (Czech)' defaultValue={tag?.multiLangDesc?.czech} />\r\n        <TextInput name='nameEnglish' title='Name (English)' defaultValue={tag?.multiLangName?.english} />\r\n        <TextInput name='descriptionEnglish' title='Description (English)' defaultValue={tag?.multiLangDesc?.czech} />\r\n\r\n        <input type='submit'/>\r\n      </Form>\r\n    </div>\r\n  )\r\n}", "import { Tag } from '@prisma/client';\r\nimport { Link, useLoaderData } from '@remix-run/react';\r\nimport type { LoaderFunction } from '@remix-run/server-runtime';\r\nimport { useLangs } from '~/contexts/langsContext';\r\nimport { getAllTags } from '~/models/tag.server';\r\nimport { TagWithTexts } from '~/types/types';\r\n\r\ninterface TagsAdminLoaderData {\r\n  tags: TagWithTexts[];\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request, params }) => {\r\n  const tags = await getAllTags();\r\n  return { tags }\r\n}\r\n\r\nexport default function CompaniesAdminIndex() {\r\n\r\n  const { tags } = useLoaderData<TagsAdminLoaderData>();\r\n\r\n  const { lang } = useLangs();\r\n\r\n  return <>\r\n    <div>\r\n      { tags.map(t => <div key={t.id}>\r\n        <p>Name: {t.multiLangName && t.multiLangName[lang]}</p>\r\n        <p>Description: {t.multiLangDesc && t.multiLangDesc[lang]}</p>\r\n        <Link to={`/admin/tags/${t.id}`}>View / Edit</Link>\r\n      </div>) }\r\n      <Link to={'/admin/tags/new'} >New tag</Link>\r\n    </div>\r\n  </>\r\n}", "import { MultilingualDesc, MultilingualName, Tag } from '@prisma/client';\r\nimport { Form, useActionData, useLoaderData } from '@remix-run/react';\r\nimport { ActionFunction, LoaderFunction, redirect } from '@remix-run/server-runtime';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { IdInput } from '~/components/inputs/ObjectInput';\r\nimport { TextInput } from '~/components/inputs/TextInput';\r\nimport { createTag } from '~/models/tag.server';\r\nimport { badRequest, getFormEssentials } from '~/utils/forms';\r\n\r\ninterface TagActionData {\r\n  field?: {\r\n    nameCzech: string | null,\r\n    descriptionCzech: string | null,\r\n    nameEnglish: string | null,\r\n    descriptionEnglish: string | null\r\n  }\r\n}\r\n\r\ninterface TagCreate {\r\n  multiLangName: MultilingualName,\r\n  multiLangDesc: MultilingualDesc,\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request, params }) => {\r\n  return {};\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n\r\n  const { getFormItem, getFormItems } = await getFormEssentials(request);\r\n\r\n  // const tag: {\r\n  //   id: getFormItem('id'),\r\n  //   name: getFormItem('name'),\r\n  //   description: getFormItem('description'),\r\n  // }\r\n\r\n  const tag: TagCreate = {\r\n    multiLangName: {\r\n      id: '-1',\r\n      czech: getFormItem('nameCzech'),\r\n      english: getFormItem('nameEnglish')\r\n    },\r\n    multiLangDesc: {\r\n      id: '-1',\r\n      czech: getFormItem('descriptionCzech'),\r\n      english: getFormItem('descriptionEnglish')\r\n    }\r\n  }\r\n\r\n  if (!tag.multiLangName.english || !tag.multiLangName.czech || !tag.multiLangDesc.english || !tag.multiLangDesc.czech) {\r\n    return badRequest<TagActionData>({ field: { nameCzech: tag.multiLangName.czech, nameEnglish: tag.multiLangName.english, descriptionCzech: tag.multiLangDesc.czech, descriptionEnglish: tag.multiLangDesc.english } });\r\n  }\r\n\r\n  await createTag(tag);\r\n\r\n  return redirect('/admin/tags');\r\n\r\n}\r\n\r\nconst ArrayInputWrap = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport default function AdminTagNew() {\r\n\r\n  const a = useActionData<TagActionData>();\r\n\r\n  return (\r\n    <div>\r\n      <p>TAG {a?.field?.nameCzech}</p>\r\n      <Form method='post'>\r\n\r\n        <IdInput name='id' value={'-1'} />        \r\n        <TextInput name='nameCzech' title='Name (Czech)' defaultValue={a?.field?.nameCzech ?? ''} />\r\n        <TextInput name='nameEnglish' title='Name (English)' defaultValue={a?.field?.nameEnglish ?? ''} />\r\n        <TextInput name='descriptionCzech' title='Description (Czech)' defaultValue={a?.field?.descriptionCzech ?? ''} />\r\n        <TextInput name='descriptionEnglish' title='Description (English)' defaultValue={a?.field?.descriptionEnglish ?? ''} />\r\n\r\n        <input type='submit'/>\r\n      </Form>\r\n    </div>\r\n  )\r\n}", "import { Parallax, ParallaxLayer } from \"@react-spring/parallax\";\r\nimport { Link } from \"@remix-run/react\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { styles } from \"~/constants/styles\";\r\nimport { useWhereAreWe } from \"~/contexts/whereAreWeContext\";\r\nimport {\r\n  faCircleArrowDown,\r\n  faQuestion,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport ParallaxLayerComponent from \"~/components/parallax-layer-component\";\r\n\r\nconst parallaxLayers = [\r\n  {\r\n    question:\r\n      \"Imagine you are in a new city and you want to have some fun with your friend. What do you do?\",\r\n    offset: 1,\r\n    factor: 0.5,\r\n    speed: 0.4,\r\n  },\r\n  {\r\n    question:\r\n      \"How do you find out what activities are available? A Google search perhaps?\",\r\n    offset: 2,\r\n    factor: 0.5,\r\n    speed: 0.4,\r\n  },\r\n  {\r\n    question: \"Do yo u look at each website that pops up?\",\r\n    offset: 3,\r\n    factor: 0.5,\r\n    speed: 0.5,\r\n  },\r\n  {\r\n    question: \"How do you know each place is legit and open?\",\r\n    offset: 4,\r\n    factor: 0.5,\r\n    speed: 0.6,\r\n  },\r\n  {\r\n    question: \"Do you have to book a spot? No? Are you sure?\",\r\n    offset: 5,\r\n    factor: 0.5,\r\n    speed: 0.7,\r\n  },\r\n  { question: \"How do you book a spot?\", offset: 6, factor: 0.5, speed: 0.8 },\r\n  {\r\n    question: \"No booking system. Do you call them?\",\r\n    offset: 7,\r\n    factor: 0.5,\r\n    speed: 0.9,\r\n  },\r\n  {\r\n    question: \"Their phone is busy (or you just don\u2019t like calling people)?\",\r\n    offset: 8,\r\n    factor: 0.5,\r\n    speed: 1.1,\r\n  },\r\n];\r\n\r\nconst H1 = styled.h1`\r\n  margin-top: 4rem;\r\n  color: ${styles.colors.primary};\r\n  text-align: center;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  color: ${styles.colors.white};\r\n  background-color: ${styles.colors.primary};\r\n  border-radius: 0.4rem;\r\n  padding: 0.7rem;\r\n  cursor: pointer;\r\n  margin: 0 auto;\r\n  display: block;\r\n  border: none;\r\n`;\r\n\r\nconst Wrapper = styled.h1`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: ${styles.shadows[1]};\r\n  width: 300px;\r\n  padding: 2rem;\r\n  color: ${styles.colors.primary};\r\n  background-color: ${styles.colors.gray};\r\n`;\r\n\r\nconst ALink = styled(Link)`\r\n  text-decoration: none;\r\n`;\r\n\r\nconst Arrow = styled(FontAwesomeIcon)`\r\n  display: flex;\r\n  margin: 0 auto;\r\n  font-size: 2.5rem;\r\n  color: ${styles.colors.primary};\r\n`;\r\n\r\nconst FirstQuestionMark = styled(FontAwesomeIcon)`\r\n  right: 5rem;\r\n  margin-top: 3rem;\r\n  font-size: 2.5rem;\r\n  transform: rotate(25deg);\r\n  position: absolute;\r\n`;\r\nconst SecondQuestionMark = styled(FontAwesomeIcon)`\r\n  left: 10rem;\r\n  margin-top: 5rem;\r\n  font-size: 2.5rem;\r\n  transform: rotate(-25deg);\r\n  position: absolute;\r\n`;\r\nconst ThirdQuestionMark = styled(FontAwesomeIcon)`\r\n  left: 15rem;\r\n  margin-top: 25rem;\r\n  font-size: 2.5rem;\r\n  transform: rotate(25deg);\r\n  position: absolute;\r\n`;\r\nconst FourthQuestionMark = styled(FontAwesomeIcon)`\r\n  right: 20rem;\r\n  margin-top: 20rem;\r\n  font-size: 2.5rem;\r\n  transform: rotate(-25deg);\r\n  position: absolute;\r\n`;\r\n\r\nexport default function About() {\r\n  const { setLandingPage } = useWhereAreWe();\r\n\r\n  React.useEffect(() => {\r\n    setLandingPage(true);\r\n    return () => {\r\n      setLandingPage(false);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Parallax pages={6}>\r\n        <ParallaxLayer factor={1} speed={0.3}>\r\n          <H1>\r\n            All the\r\n            <span style={{ color: styles.colors.busy }}> activities </span>\r\n            you love in\r\n            <span style={{ color: styles.colors.busy }}> one place</span>\r\n          </H1>\r\n          <ALink to='/places'>\r\n            <Button>Check out activities</Button>\r\n          </ALink>\r\n          <H1>Why was Reserveroo created?</H1>\r\n          <Arrow icon={faCircleArrowDown}></Arrow>\r\n          <p style={{ textAlign: \"center\" }}>Scroll down</p>\r\n        </ParallaxLayer>\r\n        {parallaxLayers.map((layer) => (\r\n          <ParallaxLayerComponent\r\n            key={layer.offset}\r\n            question={layer.question}\r\n            offset={layer.offset}\r\n            factor={layer.factor}\r\n            speed={layer.speed}\r\n          ></ParallaxLayerComponent>\r\n        ))}\r\n        <ParallaxLayer sticky={{ start: 1.8, end: 9 }}>\r\n          <FirstQuestionMark icon={faQuestion}></FirstQuestionMark>\r\n        </ParallaxLayer>\r\n        <ParallaxLayer sticky={{ start: 2.8, end: 9 }}>\r\n          <SecondQuestionMark icon={faQuestion}></SecondQuestionMark>\r\n        </ParallaxLayer>\r\n        <ParallaxLayer sticky={{ start: 3.8, end: 9 }}>\r\n          <ThirdQuestionMark icon={faQuestion}></ThirdQuestionMark>\r\n        </ParallaxLayer>\r\n        <ParallaxLayer sticky={{ start: 4.8, end: 9 }}>\r\n          <FourthQuestionMark icon={faQuestion}></FourthQuestionMark>\r\n        </ParallaxLayer>\r\n      </Parallax>\r\n    </>\r\n  );\r\n}\r\n", "import { ParallaxLayer } from '@react-spring/parallax'\r\nimport React from 'react'\r\nimport styled from 'styled-components';\r\nimport { styles } from '~/constants/styles';\r\n\r\nconst Wrapper = styled.h1`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: ${styles.shadows[1]};\r\n  width: 300px;\r\n  padding: 2rem;\r\n  color: ${styles.colors.primary};\r\n  background-color: ${styles.colors.gray};\r\n`;\r\n\r\ninterface Question {\r\n  question: string;\r\n  offset: number;\r\n  factor: number;\r\n  speed: number;\r\n}\r\n\r\nconst ParallaxLayerComponent: React.FC<Question> = ({ offset, factor, speed, question }) => {\r\n  return (\r\n    <ParallaxLayer\r\n      offset={offset}\r\n      factor={factor}\r\n      speed={speed}\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        // backgroundColor: styles.colors.busy,\r\n      }}\r\n    >\r\n      <Wrapper>\r\n       {question}\r\n      </Wrapper>\r\n    </ParallaxLayer>\r\n  );\r\n}\r\n\r\nexport default ParallaxLayerComponent", "export default {'version':'075a216e','entry':{'module':'/build/entry.client-V3TZFOI6.js','imports':['/build/_shared/chunk-FKVNPCUN.js','/build/_shared/chunk-RPT4ZEQV.js','/build/_shared/chunk-FN7GJDOI.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-CE7NDLCC.js','imports':['/build/_shared/chunk-XOW3Y2UR.js','/build/_shared/chunk-4V2FDP3P.js','/build/_shared/chunk-KTL2U4DC.js','/build/_shared/chunk-PMUVGHLB.js','/build/_shared/chunk-26MBYJD5.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$placeId':{'id':'routes/$placeId','parentId':'root','path':':placeId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$placeId-DH6NZDRY.js','imports':['/build/_shared/chunk-Y7WZK7Z5.js','/build/_shared/chunk-YOZXHZK7.js','/build/_shared/chunk-E5PLFFBH.js','/build/_shared/chunk-UKX3DKWG.js','/build/_shared/chunk-XG74GX36.js','/build/_shared/chunk-NYD43ICI.js','/build/_shared/chunk-GQXZLMVL.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$placeId/index':{'id':'routes/$placeId/index','parentId':'routes/$placeId','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/$placeId/index-LC3YZ7A2.js','imports':['/build/_shared/chunk-XOW3Y2UR.js','/build/_shared/chunk-4V2FDP3P.js','/build/_shared/chunk-KTL2U4DC.js','/build/_shared/chunk-PMUVGHLB.js','/build/_shared/chunk-26MBYJD5.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$placeId/reserve':{'id':'routes/$placeId/reserve','parentId':'routes/$placeId','path':'reserve','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$placeId/reserve-4KLWDCGK.js','imports':['/build/_shared/chunk-ECYDDNUF.js','/build/_shared/chunk-QR3YEJQL.js','/build/_shared/chunk-VE2BZMH3.js','/build/_shared/chunk-JBPUE2AP.js','/build/_shared/chunk-FTM4DERH.js','/build/_shared/chunk-UO7E4SR4.js','/build/_shared/chunk-EUWCKCHD.js','/build/_shared/chunk-XOW3Y2UR.js','/build/_shared/chunk-4V2FDP3P.js','/build/_shared/chunk-KTL2U4DC.js','/build/_shared/chunk-PMUVGHLB.js','/build/_shared/chunk-26MBYJD5.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/about':{'id':'routes/about','parentId':'root','path':'about','index':undefined,'caseSensitive':undefined,'module':'/build/routes/about-4PBN66UF.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin':{'id':'routes/admin','parentId':'root','path':'admin','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin-AJWNCOO4.js','imports':['/build/_shared/chunk-EUWCKCHD.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/categories':{'id':'routes/admin/categories','parentId':'routes/admin','path':'categories','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/categories-SJWUJG5U.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/categories/$categoryId':{'id':'routes/admin/categories/$categoryId','parentId':'routes/admin/categories','path':':categoryId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/categories/$categoryId-WSTRZBMB.js','imports':['/build/_shared/chunk-BTTOKG7D.js','/build/_shared/chunk-XG74GX36.js','/build/_shared/chunk-NYD43ICI.js','/build/_shared/chunk-KTL2U4DC.js','/build/_shared/chunk-PMUVGHLB.js','/build/_shared/chunk-26MBYJD5.js','/build/_shared/chunk-GQXZLMVL.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/categories/index':{'id':'routes/admin/categories/index','parentId':'routes/admin/categories','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/admin/categories/index-V45DSY4V.js','imports':['/build/_shared/chunk-BTTOKG7D.js','/build/_shared/chunk-KTL2U4DC.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/categories/new':{'id':'routes/admin/categories/new','parentId':'routes/admin/categories','path':'new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/categories/new-NC5D55CN.js','imports':['/build/_shared/chunk-BTTOKG7D.js','/build/_shared/chunk-XG74GX36.js','/build/_shared/chunk-NYD43ICI.js','/build/_shared/chunk-PMUVGHLB.js','/build/_shared/chunk-26MBYJD5.js','/build/_shared/chunk-GQXZLMVL.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/companies':{'id':'routes/admin/companies','parentId':'routes/admin','path':'companies','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/companies-7PLOBWFX.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/companies/$companyId':{'id':'routes/admin/companies/$companyId','parentId':'routes/admin/companies','path':':companyId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/companies/$companyId-UW4RPN6S.js','imports':['/build/_shared/chunk-6VTZ5AQ7.js','/build/_shared/chunk-XG74GX36.js','/build/_shared/chunk-NYD43ICI.js','/build/_shared/chunk-PMUVGHLB.js','/build/_shared/chunk-26MBYJD5.js','/build/_shared/chunk-GQXZLMVL.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/companies/index':{'id':'routes/admin/companies/index','parentId':'routes/admin/companies','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/admin/companies/index-4BSVGDD5.js','imports':['/build/_shared/chunk-6VTZ5AQ7.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/companies/new':{'id':'routes/admin/companies/new','parentId':'routes/admin/companies','path':'new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/companies/new-GLSRUUU2.js','imports':['/build/_shared/chunk-6VTZ5AQ7.js','/build/_shared/chunk-XG74GX36.js','/build/_shared/chunk-NYD43ICI.js','/build/_shared/chunk-PMUVGHLB.js','/build/_shared/chunk-26MBYJD5.js','/build/_shared/chunk-GQXZLMVL.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/locations':{'id':'routes/admin/locations','parentId':'routes/admin','path':'locations','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/locations-QONSRLML.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/locations/$locationId':{'id':'routes/admin/locations/$locationId','parentId':'routes/admin/locations','path':':locationId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/locations/$locationId-RWTMGOML.js','imports':['/build/_shared/chunk-65DR2DTC.js','/build/_shared/chunk-XG74GX36.js','/build/_shared/chunk-NYD43ICI.js','/build/_shared/chunk-KTL2U4DC.js','/build/_shared/chunk-PMUVGHLB.js','/build/_shared/chunk-26MBYJD5.js','/build/_shared/chunk-GQXZLMVL.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/locations/index':{'id':'routes/admin/locations/index','parentId':'routes/admin/locations','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/admin/locations/index-H5D5TGZI.js','imports':['/build/_shared/chunk-65DR2DTC.js','/build/_shared/chunk-KTL2U4DC.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/locations/new':{'id':'routes/admin/locations/new','parentId':'routes/admin/locations','path':'new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/locations/new-RQAZBZBT.js','imports':['/build/_shared/chunk-65DR2DTC.js','/build/_shared/chunk-XG74GX36.js','/build/_shared/chunk-NYD43ICI.js','/build/_shared/chunk-PMUVGHLB.js','/build/_shared/chunk-26MBYJD5.js','/build/_shared/chunk-GQXZLMVL.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/places':{'id':'routes/admin/places','parentId':'routes/admin','path':'places','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/places-JI4EUBKN.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/places/$placeId':{'id':'routes/admin/places/$placeId','parentId':'routes/admin/places','path':':placeId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/places/$placeId-UUP5FXBR.js','imports':['/build/_shared/chunk-24YAGIHL.js','/build/_shared/chunk-6VTZ5AQ7.js','/build/_shared/chunk-N7PYVKJ4.js','/build/_shared/chunk-65DR2DTC.js','/build/_shared/chunk-BTTOKG7D.js','/build/_shared/chunk-VF5KXXSQ.js','/build/_shared/chunk-Y7WZK7Z5.js','/build/_shared/chunk-UKX3DKWG.js','/build/_shared/chunk-XG74GX36.js','/build/_shared/chunk-NYD43ICI.js','/build/_shared/chunk-KTL2U4DC.js','/build/_shared/chunk-PMUVGHLB.js','/build/_shared/chunk-26MBYJD5.js','/build/_shared/chunk-GQXZLMVL.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/places/index':{'id':'routes/admin/places/index','parentId':'routes/admin/places','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/admin/places/index-E537NUK4.js','imports':['/build/_shared/chunk-Y7WZK7Z5.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/places/new':{'id':'routes/admin/places/new','parentId':'routes/admin/places','path':'new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/places/new-5YUM4XQO.js','imports':['/build/_shared/chunk-24YAGIHL.js','/build/_shared/chunk-6VTZ5AQ7.js','/build/_shared/chunk-Y7WZK7Z5.js','/build/_shared/chunk-XG74GX36.js','/build/_shared/chunk-NYD43ICI.js','/build/_shared/chunk-PMUVGHLB.js','/build/_shared/chunk-26MBYJD5.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/reservableTypes/$reservableTypeId':{'id':'routes/admin/reservableTypes/$reservableTypeId','parentId':'routes/admin','path':'reservableTypes/:reservableTypeId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/reservableTypes/$reservableTypeId-ZVLRI4VO.js','imports':['/build/_shared/chunk-VF5KXXSQ.js','/build/_shared/chunk-XG74GX36.js','/build/_shared/chunk-NYD43ICI.js','/build/_shared/chunk-KTL2U4DC.js','/build/_shared/chunk-PMUVGHLB.js','/build/_shared/chunk-26MBYJD5.js','/build/_shared/chunk-GQXZLMVL.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/reservableTypes/index':{'id':'routes/admin/reservableTypes/index','parentId':'routes/admin','path':'reservableTypes','index':true,'caseSensitive':undefined,'module':'/build/routes/admin/reservableTypes/index-LINDQWCG.js','imports':['/build/_shared/chunk-VF5KXXSQ.js','/build/_shared/chunk-KTL2U4DC.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/reservableTypes/new':{'id':'routes/admin/reservableTypes/new','parentId':'routes/admin','path':'reservableTypes/new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/reservableTypes/new-FTTIQOOS.js','imports':['/build/_shared/chunk-VF5KXXSQ.js','/build/_shared/chunk-XG74GX36.js','/build/_shared/chunk-NYD43ICI.js','/build/_shared/chunk-PMUVGHLB.js','/build/_shared/chunk-26MBYJD5.js','/build/_shared/chunk-GQXZLMVL.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/reservations':{'id':'routes/admin/reservations','parentId':'routes/admin','path':'reservations','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/reservations-X7OICTUY.js','imports':['/build/_shared/chunk-26MBYJD5.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/reservations/$reservationId':{'id':'routes/admin/reservations/$reservationId','parentId':'routes/admin/reservations','path':':reservationId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/reservations/$reservationId-3YAXAVFN.js','imports':['/build/_shared/chunk-ECYDDNUF.js','/build/_shared/chunk-QR3YEJQL.js','/build/_shared/chunk-VE2BZMH3.js','/build/_shared/chunk-JBPUE2AP.js','/build/_shared/chunk-E5PLFFBH.js','/build/_shared/chunk-XG74GX36.js','/build/_shared/chunk-NYD43ICI.js','/build/_shared/chunk-KTL2U4DC.js','/build/_shared/chunk-PMUVGHLB.js','/build/_shared/chunk-GQXZLMVL.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/reservations/index':{'id':'routes/admin/reservations/index','parentId':'routes/admin/reservations','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/admin/reservations/index-UGJ3J2ZR.js','imports':['/build/_shared/chunk-QR3YEJQL.js','/build/_shared/chunk-JBPUE2AP.js','/build/_shared/chunk-FTM4DERH.js','/build/_shared/chunk-UKX3DKWG.js','/build/_shared/chunk-XG74GX36.js','/build/_shared/chunk-NYD43ICI.js','/build/_shared/chunk-PMUVGHLB.js','/build/_shared/chunk-GQXZLMVL.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/tags':{'id':'routes/admin/tags','parentId':'routes/admin','path':'tags','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/tags-CBE3DI7P.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/tags/$tagId':{'id':'routes/admin/tags/$tagId','parentId':'routes/admin/tags','path':':tagId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/tags/$tagId-S4VBNI2W.js','imports':['/build/_shared/chunk-N7PYVKJ4.js','/build/_shared/chunk-XG74GX36.js','/build/_shared/chunk-NYD43ICI.js','/build/_shared/chunk-PMUVGHLB.js','/build/_shared/chunk-26MBYJD5.js','/build/_shared/chunk-GQXZLMVL.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/tags/index':{'id':'routes/admin/tags/index','parentId':'routes/admin/tags','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/admin/tags/index-LMWBRXHM.js','imports':['/build/_shared/chunk-N7PYVKJ4.js','/build/_shared/chunk-KTL2U4DC.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/tags/new':{'id':'routes/admin/tags/new','parentId':'routes/admin/tags','path':'new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/tags/new-SBTOJTPU.js','imports':['/build/_shared/chunk-N7PYVKJ4.js','/build/_shared/chunk-XG74GX36.js','/build/_shared/chunk-NYD43ICI.js','/build/_shared/chunk-PMUVGHLB.js','/build/_shared/chunk-26MBYJD5.js','/build/_shared/chunk-GQXZLMVL.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/authenticate':{'id':'routes/authenticate','parentId':'root','path':'authenticate','index':undefined,'caseSensitive':undefined,'module':'/build/routes/authenticate-7IKAM4VF.js','imports':['/build/_shared/chunk-OL6MXRIT.js','/build/_shared/chunk-VN2XBXNN.js','/build/_shared/chunk-OJKNBJRJ.js','/build/_shared/chunk-YOZXHZK7.js','/build/_shared/chunk-E5PLFFBH.js','/build/_shared/chunk-UKX3DKWG.js','/build/_shared/chunk-XG74GX36.js','/build/_shared/chunk-NYD43ICI.js','/build/_shared/chunk-GQXZLMVL.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/authenticate/login':{'id':'routes/authenticate/login','parentId':'routes/authenticate','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/authenticate/login-NWJQ2ACQ.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/authenticate/register':{'id':'routes/authenticate/register','parentId':'routes/authenticate','path':'register','index':undefined,'caseSensitive':undefined,'module':'/build/routes/authenticate/register-JOC4TWPE.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/doneVerifyingEmail':{'id':'routes/doneVerifyingEmail','parentId':'root','path':'doneVerifyingEmail','index':undefined,'caseSensitive':undefined,'module':'/build/routes/doneVerifyingEmail-4P44TRBL.js','imports':['/build/_shared/chunk-EUWCKCHD.js','/build/_shared/chunk-GQXZLMVL.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-CQGU3DYD.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-5MGI43JZ.js','imports':['/build/_shared/chunk-EUWCKCHD.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/places':{'id':'routes/places','parentId':'root','path':'places','index':undefined,'caseSensitive':undefined,'module':'/build/routes/places-LGYJLQSZ.js','imports':['/build/_shared/chunk-N7PYVKJ4.js','/build/_shared/chunk-65DR2DTC.js','/build/_shared/chunk-BTTOKG7D.js','/build/_shared/chunk-Y7WZK7Z5.js','/build/_shared/chunk-UO7E4SR4.js','/build/_shared/chunk-EUWCKCHD.js','/build/_shared/chunk-VN2XBXNN.js','/build/_shared/chunk-YOZXHZK7.js','/build/_shared/chunk-E5PLFFBH.js','/build/_shared/chunk-UKX3DKWG.js','/build/_shared/chunk-XG74GX36.js','/build/_shared/chunk-NYD43ICI.js','/build/_shared/chunk-GQXZLMVL.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/profile':{'id':'routes/profile','parentId':'root','path':'profile','index':undefined,'caseSensitive':undefined,'module':'/build/routes/profile-LVLEJQVW.js','imports':['/build/_shared/chunk-VE2BZMH3.js','/build/_shared/chunk-UO7E4SR4.js','/build/_shared/chunk-EUWCKCHD.js','/build/_shared/chunk-YOZXHZK7.js','/build/_shared/chunk-E5PLFFBH.js','/build/_shared/chunk-UKX3DKWG.js','/build/_shared/chunk-XG74GX36.js','/build/_shared/chunk-NYD43ICI.js','/build/_shared/chunk-GQXZLMVL.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/profile/cancelReservation':{'id':'routes/profile/cancelReservation','parentId':'routes/profile','path':'cancelReservation','index':undefined,'caseSensitive':undefined,'module':'/build/routes/profile/cancelReservation-PFYQJVRX.js','imports':['/build/_shared/chunk-JBPUE2AP.js','/build/_shared/chunk-FTM4DERH.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/profile/edit':{'id':'routes/profile/edit','parentId':'routes/profile','path':'edit','index':undefined,'caseSensitive':undefined,'module':'/build/routes/profile/edit-JQ3QRJC4.js','imports':['/build/_shared/chunk-OJKNBJRJ.js','/build/_shared/chunk-XOW3Y2UR.js','/build/_shared/chunk-4V2FDP3P.js','/build/_shared/chunk-KTL2U4DC.js','/build/_shared/chunk-PMUVGHLB.js','/build/_shared/chunk-26MBYJD5.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/profile/index':{'id':'routes/profile/index','parentId':'routes/profile','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/profile/index-PIVWV76L.js','imports':['/build/_shared/chunk-OJKNBJRJ.js','/build/_shared/chunk-XOW3Y2UR.js','/build/_shared/chunk-4V2FDP3P.js','/build/_shared/chunk-KTL2U4DC.js','/build/_shared/chunk-PMUVGHLB.js','/build/_shared/chunk-26MBYJD5.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/pwd/forgot':{'id':'routes/pwd/forgot','parentId':'root','path':'pwd/forgot','index':undefined,'caseSensitive':undefined,'module':'/build/routes/pwd/forgot-G2BWPXLJ.js','imports':['/build/_shared/chunk-MIKMODGZ.js','/build/_shared/chunk-FTM4DERH.js','/build/_shared/chunk-UO7E4SR4.js','/build/_shared/chunk-EUWCKCHD.js','/build/_shared/chunk-OL6MXRIT.js','/build/_shared/chunk-VN2XBXNN.js','/build/_shared/chunk-OJKNBJRJ.js','/build/_shared/chunk-YOZXHZK7.js','/build/_shared/chunk-E5PLFFBH.js','/build/_shared/chunk-UKX3DKWG.js','/build/_shared/chunk-XG74GX36.js','/build/_shared/chunk-NYD43ICI.js','/build/_shared/chunk-GQXZLMVL.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/pwd/reset':{'id':'routes/pwd/reset','parentId':'root','path':'pwd/reset','index':undefined,'caseSensitive':undefined,'module':'/build/routes/pwd/reset-6MSXYENM.js','imports':['/build/_shared/chunk-MIKMODGZ.js','/build/_shared/chunk-FTM4DERH.js','/build/_shared/chunk-UO7E4SR4.js','/build/_shared/chunk-EUWCKCHD.js','/build/_shared/chunk-OL6MXRIT.js','/build/_shared/chunk-VN2XBXNN.js','/build/_shared/chunk-OJKNBJRJ.js','/build/_shared/chunk-YOZXHZK7.js','/build/_shared/chunk-E5PLFFBH.js','/build/_shared/chunk-UKX3DKWG.js','/build/_shared/chunk-XG74GX36.js','/build/_shared/chunk-NYD43ICI.js','/build/_shared/chunk-GQXZLMVL.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/search':{'id':'routes/search','parentId':'root','path':'search','index':undefined,'caseSensitive':undefined,'module':'/build/routes/search-EVQVZ5CO.js','imports':['/build/_shared/chunk-N7PYVKJ4.js','/build/_shared/chunk-65DR2DTC.js','/build/_shared/chunk-BTTOKG7D.js','/build/_shared/chunk-Y7WZK7Z5.js','/build/_shared/chunk-UO7E4SR4.js','/build/_shared/chunk-EUWCKCHD.js','/build/_shared/chunk-VN2XBXNN.js','/build/_shared/chunk-YOZXHZK7.js','/build/_shared/chunk-E5PLFFBH.js','/build/_shared/chunk-UKX3DKWG.js','/build/_shared/chunk-XG74GX36.js','/build/_shared/chunk-NYD43ICI.js','/build/_shared/chunk-GQXZLMVL.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/verifyEmail':{'id':'routes/verifyEmail','parentId':'root','path':'verifyEmail','index':undefined,'caseSensitive':undefined,'module':'/build/routes/verifyEmail-P45UCFIH.js','imports':['/build/_shared/chunk-MIKMODGZ.js','/build/_shared/chunk-FTM4DERH.js','/build/_shared/chunk-UO7E4SR4.js','/build/_shared/chunk-EUWCKCHD.js','/build/_shared/chunk-OL6MXRIT.js','/build/_shared/chunk-VN2XBXNN.js','/build/_shared/chunk-OJKNBJRJ.js','/build/_shared/chunk-YOZXHZK7.js','/build/_shared/chunk-E5PLFFBH.js','/build/_shared/chunk-UKX3DKWG.js','/build/_shared/chunk-XG74GX36.js','/build/_shared/chunk-NYD43ICI.js','/build/_shared/chunk-GQXZLMVL.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-075A216E.js'};", "\nimport * as entryServer from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\root.tsx\";\nimport * as route1 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\doneVerifyingEmail.tsx\";\nimport * as route2 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\authenticate.tsx\";\nimport * as route3 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\authenticate\\\\register.tsx\";\nimport * as route4 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\authenticate\\\\login.tsx\";\nimport * as route5 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\verifyEmail.tsx\";\nimport * as route6 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\pwd\\\\forgot.tsx\";\nimport * as route7 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\pwd\\\\reset.tsx\";\nimport * as route8 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\$placeId.tsx\";\nimport * as route9 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\$placeId\\\\reserve.tsx\";\nimport * as route10 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\$placeId\\\\index.tsx\";\nimport * as route11 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\profile.tsx\";\nimport * as route12 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\profile\\\\cancelReservation.tsx\";\nimport * as route13 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\profile\\\\index.tsx\";\nimport * as route14 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\profile\\\\edit.tsx\";\nimport * as route15 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\logout.tsx\";\nimport * as route16 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\places.tsx\";\nimport * as route17 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\search.tsx\";\nimport * as route18 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\about.tsx\";\nimport * as route19 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\admin.tsx\";\nimport * as route20 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\admin\\\\reservableTypes\\\\$reservableTypeId.tsx\";\nimport * as route21 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\admin\\\\reservableTypes\\\\index.tsx\";\nimport * as route22 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\admin\\\\reservableTypes\\\\new.tsx\";\nimport * as route23 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\admin\\\\reservations.tsx\";\nimport * as route24 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\admin\\\\reservations\\\\$reservationId.tsx\";\nimport * as route25 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\admin\\\\reservations\\\\index.tsx\";\nimport * as route26 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\admin\\\\categories.tsx\";\nimport * as route27 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\admin\\\\categories\\\\$categoryId.tsx\";\nimport * as route28 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\admin\\\\categories\\\\index.tsx\";\nimport * as route29 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\admin\\\\categories\\\\new.tsx\";\nimport * as route30 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\admin\\\\companies.tsx\";\nimport * as route31 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\admin\\\\companies\\\\$companyId.tsx\";\nimport * as route32 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\admin\\\\companies\\\\index.tsx\";\nimport * as route33 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\admin\\\\companies\\\\new.tsx\";\nimport * as route34 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\admin\\\\locations.tsx\";\nimport * as route35 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\admin\\\\locations\\\\$locationId.tsx\";\nimport * as route36 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\admin\\\\locations\\\\index.tsx\";\nimport * as route37 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\admin\\\\locations\\\\new.tsx\";\nimport * as route38 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\admin\\\\places.tsx\";\nimport * as route39 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\admin\\\\places\\\\$placeId.tsx\";\nimport * as route40 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\admin\\\\places\\\\index.tsx\";\nimport * as route41 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\admin\\\\places\\\\new.tsx\";\nimport * as route42 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\admin\\\\tags.tsx\";\nimport * as route43 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\admin\\\\tags\\\\$tagId.tsx\";\nimport * as route44 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\admin\\\\tags\\\\index.tsx\";\nimport * as route45 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\admin\\\\tags\\\\new.tsx\";\nimport * as route46 from \"C:\\\\React\\\\remix\\\\reserveroo\\\\app\\\\routes\\\\index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/doneVerifyingEmail\": {\n      id: \"routes/doneVerifyingEmail\",\n      parentId: \"root\",\n      path: \"doneVerifyingEmail\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/authenticate\": {\n      id: \"routes/authenticate\",\n      parentId: \"root\",\n      path: \"authenticate\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/authenticate/register\": {\n      id: \"routes/authenticate/register\",\n      parentId: \"routes/authenticate\",\n      path: \"register\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/authenticate/login\": {\n      id: \"routes/authenticate/login\",\n      parentId: \"routes/authenticate\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/verifyEmail\": {\n      id: \"routes/verifyEmail\",\n      parentId: \"root\",\n      path: \"verifyEmail\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/pwd/forgot\": {\n      id: \"routes/pwd/forgot\",\n      parentId: \"root\",\n      path: \"pwd/forgot\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/pwd/reset\": {\n      id: \"routes/pwd/reset\",\n      parentId: \"root\",\n      path: \"pwd/reset\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/$placeId\": {\n      id: \"routes/$placeId\",\n      parentId: \"root\",\n      path: \":placeId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/$placeId/reserve\": {\n      id: \"routes/$placeId/reserve\",\n      parentId: \"routes/$placeId\",\n      path: \"reserve\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/$placeId/index\": {\n      id: \"routes/$placeId/index\",\n      parentId: \"routes/$placeId\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/profile\": {\n      id: \"routes/profile\",\n      parentId: \"root\",\n      path: \"profile\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/profile/cancelReservation\": {\n      id: \"routes/profile/cancelReservation\",\n      parentId: \"routes/profile\",\n      path: \"cancelReservation\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/profile/index\": {\n      id: \"routes/profile/index\",\n      parentId: \"routes/profile\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/profile/edit\": {\n      id: \"routes/profile/edit\",\n      parentId: \"routes/profile\",\n      path: \"edit\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/places\": {\n      id: \"routes/places\",\n      parentId: \"root\",\n      path: \"places\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route16\n    },\n  \"routes/search\": {\n      id: \"routes/search\",\n      parentId: \"root\",\n      path: \"search\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route17\n    },\n  \"routes/about\": {\n      id: \"routes/about\",\n      parentId: \"root\",\n      path: \"about\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route18\n    },\n  \"routes/admin\": {\n      id: \"routes/admin\",\n      parentId: \"root\",\n      path: \"admin\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route19\n    },\n  \"routes/admin/reservableTypes/$reservableTypeId\": {\n      id: \"routes/admin/reservableTypes/$reservableTypeId\",\n      parentId: \"routes/admin\",\n      path: \"reservableTypes/:reservableTypeId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route20\n    },\n  \"routes/admin/reservableTypes/index\": {\n      id: \"routes/admin/reservableTypes/index\",\n      parentId: \"routes/admin\",\n      path: \"reservableTypes\",\n      index: true,\n      caseSensitive: undefined,\n      module: route21\n    },\n  \"routes/admin/reservableTypes/new\": {\n      id: \"routes/admin/reservableTypes/new\",\n      parentId: \"routes/admin\",\n      path: \"reservableTypes/new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route22\n    },\n  \"routes/admin/reservations\": {\n      id: \"routes/admin/reservations\",\n      parentId: \"routes/admin\",\n      path: \"reservations\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route23\n    },\n  \"routes/admin/reservations/$reservationId\": {\n      id: \"routes/admin/reservations/$reservationId\",\n      parentId: \"routes/admin/reservations\",\n      path: \":reservationId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route24\n    },\n  \"routes/admin/reservations/index\": {\n      id: \"routes/admin/reservations/index\",\n      parentId: \"routes/admin/reservations\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route25\n    },\n  \"routes/admin/categories\": {\n      id: \"routes/admin/categories\",\n      parentId: \"routes/admin\",\n      path: \"categories\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route26\n    },\n  \"routes/admin/categories/$categoryId\": {\n      id: \"routes/admin/categories/$categoryId\",\n      parentId: \"routes/admin/categories\",\n      path: \":categoryId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route27\n    },\n  \"routes/admin/categories/index\": {\n      id: \"routes/admin/categories/index\",\n      parentId: \"routes/admin/categories\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route28\n    },\n  \"routes/admin/categories/new\": {\n      id: \"routes/admin/categories/new\",\n      parentId: \"routes/admin/categories\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route29\n    },\n  \"routes/admin/companies\": {\n      id: \"routes/admin/companies\",\n      parentId: \"routes/admin\",\n      path: \"companies\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route30\n    },\n  \"routes/admin/companies/$companyId\": {\n      id: \"routes/admin/companies/$companyId\",\n      parentId: \"routes/admin/companies\",\n      path: \":companyId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route31\n    },\n  \"routes/admin/companies/index\": {\n      id: \"routes/admin/companies/index\",\n      parentId: \"routes/admin/companies\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route32\n    },\n  \"routes/admin/companies/new\": {\n      id: \"routes/admin/companies/new\",\n      parentId: \"routes/admin/companies\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route33\n    },\n  \"routes/admin/locations\": {\n      id: \"routes/admin/locations\",\n      parentId: \"routes/admin\",\n      path: \"locations\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route34\n    },\n  \"routes/admin/locations/$locationId\": {\n      id: \"routes/admin/locations/$locationId\",\n      parentId: \"routes/admin/locations\",\n      path: \":locationId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route35\n    },\n  \"routes/admin/locations/index\": {\n      id: \"routes/admin/locations/index\",\n      parentId: \"routes/admin/locations\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route36\n    },\n  \"routes/admin/locations/new\": {\n      id: \"routes/admin/locations/new\",\n      parentId: \"routes/admin/locations\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route37\n    },\n  \"routes/admin/places\": {\n      id: \"routes/admin/places\",\n      parentId: \"routes/admin\",\n      path: \"places\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route38\n    },\n  \"routes/admin/places/$placeId\": {\n      id: \"routes/admin/places/$placeId\",\n      parentId: \"routes/admin/places\",\n      path: \":placeId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route39\n    },\n  \"routes/admin/places/index\": {\n      id: \"routes/admin/places/index\",\n      parentId: \"routes/admin/places\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route40\n    },\n  \"routes/admin/places/new\": {\n      id: \"routes/admin/places/new\",\n      parentId: \"routes/admin/places\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route41\n    },\n  \"routes/admin/tags\": {\n      id: \"routes/admin/tags\",\n      parentId: \"routes/admin\",\n      path: \"tags\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route42\n    },\n  \"routes/admin/tags/$tagId\": {\n      id: \"routes/admin/tags/$tagId\",\n      parentId: \"routes/admin/tags\",\n      path: \":tagId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route43\n    },\n  \"routes/admin/tags/index\": {\n      id: \"routes/admin/tags/index\",\n      parentId: \"routes/admin/tags\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route44\n    },\n  \"routes/admin/tags/new\": {\n      id: \"routes/admin/tags/new\",\n      parentId: \"routes/admin/tags\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route45\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route46\n    }\n  };"],
  "mappings": "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",
  "names": []
}
